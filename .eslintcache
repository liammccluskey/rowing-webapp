[{"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/index.js":"1","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/App.js":"2","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/reportWebVitals.js":"3","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Register.js":"4","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Landing.js":"5","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/ThemeContext.js":"6","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PrivateRoute.js":"7","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Login.js":"8","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/AuthContext.js":"9","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/firebase.js":"10","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/LandingHeader.js":"11","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SignHeader.js":"12","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/MainHeader.js":"13","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SubHeader.js":"14","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Clubs.js":"15","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/ExploreHeader.js":"16","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/CreateClub.js":"17","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Loading.js":"18","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Dashboard.js":"19","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Calendar.js":"20","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/UserInfoCard.js":"21","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/NewSessionForm.js":"22","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/ClubsInfoCard.js":"23","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/Session.js":"24","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/MembersInfoCard.js":"25","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/SessionInfoCard.js":"26","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/LiveActivityTable.js":"27","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Screen.js":"28","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/main.js":"29","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5.js":"30","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5-printables.js":"31","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomBar.js":"32","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Statistics.js":"33","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Activity.js":"34","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/TrainingHeader.js":"35","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomScatter.js":"36","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomLine.js":"37","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/ResultsTable.js":"38","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/DropdownMenu.js":"39","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Paginator.js":"40","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Profile.js":"41","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Preferences.js":"42","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Settings.js":"43","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/MessageContext.js":"44","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Club.js":"45","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/ClubHeader.js":"46","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Members.js":"47","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Confirmation.js":"48","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Pending.js":"49","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Athlete.js":"50","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/AthleteHeader.js":"51","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Following.js":"52","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PasswordReset.js":"53"},{"size":500,"mtime":1611253308193,"results":"54","hashOfConfig":"55"},{"size":2627,"mtime":1618516204762,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1611253308195,"results":"57","hashOfConfig":"55"},{"size":3156,"mtime":1618532835377,"results":"58","hashOfConfig":"55"},{"size":1227,"mtime":1618517878551,"results":"59","hashOfConfig":"55"},{"size":2358,"mtime":1618335124692,"results":"60","hashOfConfig":"55"},{"size":455,"mtime":1618257370832,"results":"61","hashOfConfig":"55"},{"size":3088,"mtime":1618502808563,"results":"62","hashOfConfig":"55"},{"size":3161,"mtime":1618534779754,"results":"63","hashOfConfig":"55"},{"size":948,"mtime":1618341977746,"results":"64","hashOfConfig":"55"},{"size":901,"mtime":1618516376578,"results":"65","hashOfConfig":"55"},{"size":377,"mtime":1618415214841,"results":"66","hashOfConfig":"55"},{"size":2540,"mtime":1618529719911,"results":"67","hashOfConfig":"55"},{"size":1568,"mtime":1618198414046,"results":"68","hashOfConfig":"55"},{"size":5746,"mtime":1618530524308,"results":"69","hashOfConfig":"55"},{"size":357,"mtime":1618197688926,"results":"70","hashOfConfig":"55"},{"size":7965,"mtime":1618347971505,"results":"71","hashOfConfig":"55"},{"size":297,"mtime":1616193195394,"results":"72","hashOfConfig":"55"},{"size":5989,"mtime":1618523263632,"results":"73","hashOfConfig":"55"},{"size":6234,"mtime":1618512414182,"results":"74","hashOfConfig":"55"},{"size":5585,"mtime":1618524890962,"results":"75","hashOfConfig":"55"},{"size":7128,"mtime":1618253863787,"results":"76","hashOfConfig":"55"},{"size":1259,"mtime":1618524097252,"results":"77","hashOfConfig":"55"},{"size":16314,"mtime":1618337856036,"results":"78","hashOfConfig":"55"},{"size":2518,"mtime":1618419152672,"results":"79","hashOfConfig":"55"},{"size":1699,"mtime":1618337842019,"results":"80","hashOfConfig":"55"},{"size":13782,"mtime":1618534229457,"results":"81","hashOfConfig":"55"},{"size":2494,"mtime":1615577751569,"results":"82","hashOfConfig":"55"},{"size":2739,"mtime":1615082406456,"results":"83","hashOfConfig":"84"},{"size":43831,"mtime":1616172724114,"results":"85","hashOfConfig":"55"},{"size":15919,"mtime":1615495125619,"results":"86","hashOfConfig":"84"},{"size":4118,"mtime":1618524973736,"results":"87","hashOfConfig":"55"},{"size":17336,"mtime":1618529627402,"results":"88","hashOfConfig":"55"},{"size":12614,"mtime":1618530120551,"results":"89","hashOfConfig":"55"},{"size":418,"mtime":1615697660804,"results":"90","hashOfConfig":"55"},{"size":2247,"mtime":1615813736227,"results":"91","hashOfConfig":"84"},{"size":4545,"mtime":1616609809503,"results":"92","hashOfConfig":"55"},{"size":5268,"mtime":1617247727728,"results":"93","hashOfConfig":"55"},{"size":3536,"mtime":1618529160104,"results":"94","hashOfConfig":"55"},{"size":1640,"mtime":1617037434229,"results":"95","hashOfConfig":"55"},{"size":7812,"mtime":1618277295967,"results":"96","hashOfConfig":"55"},{"size":4417,"mtime":1618250958724,"results":"97","hashOfConfig":"55"},{"size":6417,"mtime":1618201287347,"results":"98","hashOfConfig":"55"},{"size":2909,"mtime":1618415524656,"results":"99","hashOfConfig":"55"},{"size":2170,"mtime":1618196182172,"results":"100","hashOfConfig":"55"},{"size":3466,"mtime":1618528239870,"results":"101","hashOfConfig":"55"},{"size":5747,"mtime":1618246056581,"results":"102","hashOfConfig":"55"},{"size":2436,"mtime":1618162108195,"results":"103","hashOfConfig":"55"},{"size":216,"mtime":1618174331221,"results":"104","hashOfConfig":"55"},{"size":1353,"mtime":1618253719392,"results":"105","hashOfConfig":"55"},{"size":4987,"mtime":1618277020583,"results":"106","hashOfConfig":"55"},{"size":4450,"mtime":1618194421630,"results":"107","hashOfConfig":"55"},{"size":2319,"mtime":1618497578512,"results":"108","hashOfConfig":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1w9aazz",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"111"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"111"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"111"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"111"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"111"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"111"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"111"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"111"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},"1mz972p",{"filePath":"190","messages":"191","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"111"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"111"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"111"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"111"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"111"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"111"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"111"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"111"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"111"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"231","usedDeprecatedRules":"111"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"111"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"111"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"111"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"111"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"111"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"111"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"111"},"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/index.js",[],["257","258"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/App.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/reportWebVitals.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Register.js",["259"],"import React, { useState, useRef } from \"react\"\nimport SignHeader from \"./headers/SignHeader\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport {useHistory} from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport moment from 'moment'\n\nexport default function Register() {\n    const history = useHistory()\n    const { setMessage } = useMessage()\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const nameRef = useRef()\n    const {signUp, continueWithGoogle} = useAuth()\n    const [awaitingResponse, setAwaitingResponse] = useState(false) \n\n\n    async function handleSubmit (e) {\n        e.preventDefault()\n        try {\n            setAwaitingResponse(true)\n            await signUp(nameRef.current.value, emailRef.current.value, passwordRef.current.value)\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n            setAwaitingResponse(false)\n        }\n    }\n\n    async function handleContinueWithGoogle() {\n        try {\n            await continueWithGoogle()\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignIn() {\n        history.push('/login')\n    }\n\n    return (\n        <div className='login-page'>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Create your account</h3>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br />\n                    <label>Full name <br />\n                        <input ref={nameRef} type='text' required />\n                    </label>\n                    <br /><br />\n                    <label>Password <br />\n                        <input ref={passwordRef}  type=\"password\" name=\"password\" id=\"password\" required/>\n                    </label>\n                    <br />\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Create account</button>\n                    <br /><br />\n                </form>\n                <h4 className='d-flex jc-center'>or</h4>\n                <br />\n                <button className='clear-btn-secondary' disabled={awaitingResponse} onClick={handleContinueWithGoogle} >\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                        height='18px' width='18px'\n                    />\n                    Continue with Google\n                </button>\n            </div>\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Already have an account?</p>\n                <p className='action-link' onClick={handleClickSignIn}>Sign in</p>\n            </div>\n            \n            <div className='login-spacer'></div>\n        </div>\n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Landing.js",["260"],"import React from \"react\"\nimport LandingHeader from \"./headers/LandingHeader\";\nimport { useHistory } from 'react-router-dom'\n\nexport default function Landing() {\n    const history = useHistory()\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    return (\n        <div style={{minHeight: '200vh'}}>\n            <LandingHeader />\n            <div className='landing-container'>\n                <div>\n                    <h1>Ergsync helps you train better</h1>\n                    <br /><br />\n                    <h3 className='c-cs'>\n                        Improve the quality of your training with Ergsync.\n                        Whether you row on your own or in a club, we're committed to\n                        helping you become a better rower.\n\n                    </h3>\n                    <br /><br /><br />\n                    <button className='solid-btn' onClick={handleClickSignUp}>Get started</button>\n                </div>\n                <div>\n\n                </div>\n               \n                \n            </div>\n            <div className='main-container'>\n                <br /><br />\n                <h1 className='fw-m'></h1>\n            </div>\n        </div>\n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/ThemeContext.js",["261","262","263","264"],"import React, {useState, useContext, useEffect} from \"react\"\nimport {useAuth} from './AuthContext'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst ThemeContext = React.createContext() \n\nexport function useTheme() {\n    return useContext(ThemeContext)\n}\n\nexport function ThemeProvider({children}) {\n    const {currentUser, thisUser, fetchThisUser} = useAuth()\n\n    const [isDarkMode, setIsDarkMode] = useState(thisUser ? thisUser.usesDarkMode : false)\n    const [tintColor, setTintColor] = useState(1)   // mint default\n\n    const tintColors = [\n        {name: 'Soft Blue', extension: 'strava'},    // default\n        {name: 'Mint', extension: 'mint'},\n        {name: 'Purple', extension: 'discord'},\n        {name: 'Sharp Blue', extension: 'rh-blue'},\n        {name: 'Twitter Blue', extension: 'twitter-blue'}\n    ]\n\n    const value = {\n        isDarkMode, setIsDarkMode,\n        tintColor, setTintColor, tintColors\n    }\n\n    const cssVars = [\n        '--bgc-nav',\n        '--bgc',\n        '--bgc-hover',\n        '--bgc-light',\n        '--bgc-settings',\n        '--bc',\n        '--bc-tr',\n        '--color',\n        '--color-header',\n        '--color-secondary',\n        '--color-tertiary',\n        '--box-shadow',\n        '--box-shadow-dark',\n        '--float-border'\n    ]\n\n    useEffect(() => {\n        let extension = isDarkMode ? '-d' : '-l'\n        let root = document.documentElement\n\n        cssVars.forEach(name => {\n            root.style.setProperty(name, `var(${name}${extension})`)\n        })\n\n        async function updateData() {\n            try {\n                await api.patch(`/users/${thisUser._id}/color-theme`, {\n                    usesDarkMode: isDarkMode\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        if (thisUser) {updateData()}\n    }, [isDarkMode])\n\n    useEffect(() => {\n        const extension = tintColors[tintColor].extension\n        const root = document.documentElement\n\n        root.style.setProperty('--tint-color', `var(--color-${extension})`)\n        root.style.setProperty('--tint-color-translucent', `var(--color-translucent-${extension})`)\n    }, [tintColor])\n\n    return (\n        <ThemeContext.Provider value={value}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PrivateRoute.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Login.js",["265"],"import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport SignHeader from './headers/SignHeader'\nimport moment from 'moment'\n\nexport default function Login() {\n    const { setMessage } = useMessage()\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const {signIn, continueWithGoogle } = useAuth()\n    const history = useHistory()\n    const [awaitingResponse, setAwaitingResponse] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            setAwaitingResponse(true)\n            await signIn(emailRef.current.value, passwordRef.current.value)\n        } catch (e) {\n            setMessage({title: e.message, isError: true, timestamp: moment()})\n            setAwaitingResponse(false)\n        }\n    }\n\n    async function handleContinueWithGoogle() {\n        try {\n            await continueWithGoogle()\n        } catch(e) {\n            setMessage({title: e.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    function handleClickForgotPassword() {\n        history.push('/reset')\n    }\n\n    return (\n        <div className='login-page'>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Sign in to your account</h3>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br />\n                    <label>Password <br />\n                        <input ref={passwordRef}  type=\"password\" name=\"password\" id=\"password\" required/>\n                    </label>\n                    <br />\n                    <p className='action-link' onClick={handleClickForgotPassword}>Forgot password?</p>\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Log In</button>\n                    <br /><br />\n                </form>\n                <h4 className='d-flex jc-center'>or</h4>\n                <br />\n                <button className='clear-btn-secondary' disabled={awaitingResponse} onClick={handleContinueWithGoogle} >\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                        height='18px' width='18px'\n                    />\n                    Continue with Google\n                </button>\n            </div>\n\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Don't have an account?</p>\n                <p className='action-link' onClick={handleClickSignUp}>Sign up</p>\n            </div>\n\n            <div className='login-spacer'></div>\n        </div>\n        \n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/AuthContext.js",["266"],"import React, { useEffect, useState, useContext } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { auth } from \"../firebase\"\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const history = useHistory()\n    const [currentUser, setCurrentUser] = useState()\n    const [thisUser, setThisUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signUp(displayName, email, password) {\n    // Description: Standard register with email\n        \n        return auth.createUserWithEmailAndPassword(email, password)\n        .then((userCredential) => {userCredential.user.updateProfile({displayName: displayName})})\n    }\n\n    function continueWithGoogle() {\n    // Description: Sign (In \\ Up) with google pop up\n        const provider = new firebase.auth.GoogleAuthProvider()\n        return auth.signInWithRedirect(provider)\n    }\n\n    function signIn(email, password) {\n    // Description: Standard sign in with email/password\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function signOut() {\n        return auth.signOut()\n    }\n\n    async function postUser(user) {\n        try {\n            await api.post('/users', {\n                displayName: user.displayName,\n                uid: user.uid,\n                iconURL: user.photoURL\n            })\n        } catch (error) { console.log(error) }\n    }\n\n    async function __fetchThisUser(user) {\n        try {\n            const res = await api.get(`/users/uid/${user.uid}`)\n            if (!res.data) {\n                await postUser(user)\n                await __fetchThisUser(user)\n                return\n            } else if (res.data && !res.data.iconURL && user.photoURL) {\n                api.patch(`/users/${res.data._id}/iconURL`, {iconURL: user.photoURL})\n            }\n            setThisUser(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function fetchThisUser() {\n        if (! currentUser) {return}\n        __fetchThisUser(currentUser)\n    }\n\n    useEffect(() => {\n    // Description: Register authState Listener on mount\n        const unsubscribe = auth.onAuthStateChanged( async (user) => {\n            setCurrentUser(user)\n            if (user) {\n                await __fetchThisUser(user)\n                const currentPath = window.location.pathname\n                if (currentPath.includes('login') || currentPath.includes('register')) {\n                    history.push('/dashboard')\n                }\n            }\n            setLoading(false)\n        })\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser, setCurrentUser,\n        thisUser, fetchThisUser,\n        signUp,\n        continueWithGoogle,\n        signIn,\n        signOut\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/firebase.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/LandingHeader.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SignHeader.js",["267"],"import React, {useEffect} from \"react\"\nimport {useHistory} from \"react-router-dom\"\n\nexport default function SignHeader() {\n    const history = useHistory()\n\n    return (\n        <div className='main-header d-flex jc-flex-start ai-center'>\n            <h3 onClick={() => history.push('/')} className='logo-text'>{process.env.REACT_APP_COMPANY_NAME}</h3>\n        </div>\n\n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/MainHeader.js",["268","269","270"],"import React, {useEffect, useState} from \"react\"\nimport {useTheme} from \"../../contexts/ThemeContext\"\nimport {useAuth} from '../../contexts/AuthContext'\nimport {Link, useHistory} from 'react-router-dom'\nimport DropdownMenu from './DropdownMenu'\n\nexport default function MainHeader(props) {\n    const {isDarkMode, setIsDarkMode} = useTheme()\n    const {currentUser} = useAuth()\n    const [path, setPath] = useState('')\n    const history = useHistory()\n\n    const [hideMenu, setHideMenu] = useState(true)\n    \n    const activeClass = (pathname) => {\n        return path.includes(pathname) ? 'link-active' : ''\n    }\n    useEffect(() => {\n        setPath(window.location.pathname.split('/')[1])\n    }, [])\n\n    return (\n        <div className=\"d-flex jc-space-between ai-center main-header\" style={{...props.style}}>\n            <div>\n                <div className='d-flex jc-flex-start ai-center'> \n                    <h3 onClick={() => history.push('/dashboard')} className='logo-text'\n                        style={{marginRight: 60}}\n                    >\n                        {process.env.REACT_APP_COMPANY_NAME}\n                    </h3>\n                    \n                    <div className='d-inline-flex jc-flex-start ai-center search-bar'>\n                        <i className='bi bi-search' style={{color: 'var(--color-secondary)'}} />\n                        <input placeholder='Search' style={{width: '300px', borderColor: 'transparent'}} type='text'/>\n                    </div>\n                    \n                </div>\n            </div>\n            <div className='d-flex jc-flex-end ai-center'>\n                <Link className={`${activeClass('dashboard') } header-link`} to='/dashboard' >\n                    Dashboard\n                </Link>\n                <Link className={`${activeClass('training') } header-link`} to='/training/statistics' >\n                    Training\n                </Link>\n                <Link className={`${activeClass('explore') } header-link`} to='/explore/clubs' >\n                    Explore\n                </Link>\n                <div className='d-flex jc-center ai-center onhover-bc' onClick={() => setHideMenu(false)}\n                    style={{cursor: 'pointer', padding: '5px 5px'}} \n                >\n                    <img src={currentUser.photoURL} className='user-icon' />\n                    <i className='bi bi-chevron-down' />\n                </div>\n            </div>\n            <DropdownMenu hideSelf={hideMenu} setHideSelf={setHideMenu} />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SubHeader.js",["271"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default function SubHeader(props) {\n\n    const activeClass = (pathname) => {\n        return props.subPath === pathname ? 'sub-link-active' : ''\n    }\n\n    return (\n        <div className='sub-header' style={props.style}>\n            <div className='d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center' \n                    style={{marginTop: props.iconURL && -20, marginBottom: 12}}\n                >\n                    {props.iconURL && \n                        <img height={60} width={60} src={props.iconURL} \n                            style={{\n                                border: '0px solid var(--bc)', borderRadius: '5px',\n                                marginRight: 10\n                            }} \n                        />\n                    }\n                    <h2>{props.title}</h2>\n                </div>\n                <div className='d-flex jc-flex-end ai-center'>\n                    {props.children}\n                </div>\n            </div>\n            <div className='d-flex jc-flex-start' style={{gap: 25}}>\n                {props.items && props.items.map( (item, idx) => (\n                    <Link key={idx} className={`${activeClass(item.path)} header-link`}\n                        to={props.path + item.path}\n                        style={{paddingBottom: 11}}\n                    >\n                        {item.title}\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Clubs.js",["272","273"],"import React, {useState, useRef} from 'react'\nimport ExploreHeader from './ExploreHeader'\nimport MainHeader from '../headers/MainHeader'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Loading from '../misc/Loading'\nimport Paginator from '../misc/Paginator'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Clubs() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const [results, setResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const searchRef = useRef()\n    const [submittedSearch, setSubmittedSearch] = useState(null)    // club name\n    const [currPage, setCurrPage] = useState(1)\n\n    function handleCreateClub() {\n        history.push('/club-create')\n    }\n\n    function handleClickClub(club) {\n        history.push(`/clubs/${club.customURL}/general`)\n    }\n\n    async function handleJoinClub(club) {\n        try {\n            await api.post('/clubmemberships', {club: club._id, user: thisUser._id, role: 0})\n            setMessage({title: `Joined \"${club.name}\"`, isError: false, timestamp: moment() })\n            history.push(`/clubs/${club.customURL}/general`)\n        } catch(error) {\n            setMessage({title: `Error joining \"${club.name}. ${error.message}\"`, isError: true, timestamp: moment() })\n        }\n    }\n\n    async function handleSubmitSearch(e) {\n        e.preventDefault()\n        if ( !searchRef.current.value) {return}\n\n        setSubmittedSearch(searchRef.current.value)\n        await searchClubs(searchRef.current.value, 1)\n        setCurrPage(1)\n    }\n\n    async function onClickPrevious() {\n        await searchClubs(submittedSearch, currPage - 1)\n        setCurrPage( curr => curr - 1 )\n    }\n\n    async function onClickNext() {\n        await searchClubs(submittedSearch, currPage + 1)\n        setCurrPage( curr => curr + 1 )\n    }\n\n    async function searchClubs(clubName, pageNum) {\n        setLoading(true)\n        setResults(null)\n        try {\n            const res = await api.get(`/clubs/search?name=${clubName}&page=${pageNum}&pagesize=15`)\n            setResults(res.data)\n            setSubmittedSearch(clubName)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    return (\n    <div>\n        <MainHeader />\n        <ExploreHeader subPath='/clubs' />\n        <div className='main-container'>\n            <br /><br />\n            <div className='d-flex jc-space-between ai-center'>\n                <form onSubmit={handleSubmitSearch}>\n                    <div className='search-bar' style={{backgroundColor: 'var(--bgc-light)'}}>\n                        <i className='bi bi-search' />\n                        <input ref={searchRef} type='text' placeholder='Find a club by name' style={{borderColor: 'transparent', width: 250}} /> \n                    </div>\n                </form>\n                \n                <button onClick={handleCreateClub}className='solid-btn-secondary'>Create a Club</button>\n            </div>\n            <br />\n            <div className='float-container'>\n                <table style={{width: '100%'}} className='data-table'>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(submittedSearch && results && !loading) && results.clubs.map((club, index) => \n                            <tr key={index}>\n                                <td>\n                                    <div className='d-flex jc-flex-start ai-center'>\n                                        <img \n                                            src={club.iconURL}\n                                            height='50px' width='50px' \n                                            style={{ borderRadius: '5px', marginRight: 10}}\n                                        />\n                                        <h4 className='page-link' onClick={() => handleClickClub(club)}>{club.name}</h4>\n                                    </div>\n                                    \n                                </td>\n                                <td style={{textAlign: 'right'}}>\n                                    <button onClick={() => handleJoinClub(club)} className='clear-btn-secondary'>Join</button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                {( (submittedSearch && !loading && !results.clubs.length) || !submittedSearch ) &&\n                    <div style={{textAlign: 'center', fontSize: 17, color: 'var(--color-secondary)', padding: '50px 20px'}}>\n                    {(submittedSearch && !loading) ? \n                        !results.clubs.length && `We couldn't find any clubs matching the name \"${submittedSearch}\"`\n                        :\n                        'Use the search bar above to find clubs'\n                    }\n                    </div>\n                }\n                {loading && <Loading />}\n            </div>\n            <br />\n            {(submittedSearch && !loading) && \n                <Paginator resultsCount={results.count} currPage={currPage}\n                    onClickNext={onClickNext}\n                    onClickPrevious={onClickPrevious}\n                />\n            }\n            \n            \n        </div>\n        \n    </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/ExploreHeader.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/CreateClub.js",["274","275"],"import React, {useEffect, useState} from 'react'\nimport MainHeader from './headers/MainHeader'\nimport SubHeader from './headers/SubHeader'\nimport {useMessage} from '../contexts/MessageContext'\nimport {storage} from '../firebase'\nimport {useAuth} from '../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {useHistory} from 'react-router-dom'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst srcBanner = 'https://styles.redditmedia.com/t5_2qljq/styles/bannerBackgroundImage_zfhrcn1w7u911.jpg?width=4000&format=pjpg&s=88d594d779756f76ef8a5e0073e1d2959cd501bf'\n\nexport default function CreateClub() {\n    const {setMessage} = useMessage()\n    const {thisUser} = useAuth()\n    const history = useHistory()\n\n    const [name, setName] = useState('')\n    const [customURL, setCustomURL] = useState('')\n    const [description, setDescription] = useState('')\n\n    const [URLIsAvailable, setURLIsAvailable] = useState(false)\n\n    const [tempIconURL, setTempIconURL] = useState()\n    const [iconFile, setIconFile] = useState()\n    const [tempBannerURL, setTempBannerURL] = useState()\n    const [bannerFile, setBannerFile] = useState()\n    const inputStyle = {\n        width: '400px'\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        // Upload club image\n        if (!URLIsAvailable) {\n            setMessage({title: 'The club URL you have requested is not available. Try another.', isError: true, timestamp: moment()})\n            return\n        }\n        let iconURL\n        try {\n            await storage.ref('clubicons').child(customURL).put(iconFile);\n            iconURL = await storage.ref('clubicons').child(customURL).getDownloadURL()\n        } catch(error) {\n            console.log(error.message)\n        }\n\n        let bannerURL = undefined\n        if (tempBannerURL) {\n            try {\n                await storage.ref('clubbanners').child(customURL).put(bannerFile);\n                bannerURL = await storage.ref('clubbanners').child(customURL).getDownloadURL()\n            } catch(error) {\n                console.log(error)\n            }\n        }\n        \n        const clubData = {\n            name: name,\n            customURL: customURL,\n            description: description,\n            iconURL: iconURL,\n            bannerURL: bannerURL\n        }\n\n        try {\n            const res = await api.post('/clubs', clubData)\n            await api.post('/clubmemberships', {user: thisUser._id, club: res.data._id, role: 2})\n            setMessage({title: 'Club created', isError: false, timestamp: moment()})\n            history.push(`/clubs/${customURL}/general`)\n        } catch (error) {\n            setMessage({title: `Error creating club. ${error.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleCustomURLChange(e) {\n        const validRegex = new RegExp(/^([a-zA-Z0-9-]{0,20})$/)\n        console.log()\n        if (validRegex.test(e.target.value)) {\n            setCustomURL(e.target.value)\n        }\n    }\n\n    function handleClickUserDefaultBanner() {\n        setTempBannerURL(null)\n        setBannerFile(null)\n        setMessage({title: 'Set default banner', isError: false, timestamp: moment()})\n    }\n\n    useEffect( () => {\n        if (!iconFile) {return}\n        const imgURL = URL.createObjectURL(iconFile)\n        setTempIconURL(imgURL)\n    }, [iconFile])\n\n    useEffect(() => {\n        if (!bannerFile) {return}\n        setTempBannerURL(URL.createObjectURL(bannerFile))\n    }, [bannerFile])\n\n    useEffect(() => {\n        async function checkAvailability() {\n            if (!customURL.length) {return}\n            try {\n                const res = await api.get(`/clubs/isavailable?customURL=${customURL}`)\n                setURLIsAvailable(res.data.isAvailable)\n            } catch (error) { console.log(error) }\n        }\n        checkAvailability()\n    }, [customURL])\n\n    return (\n        <div>\n            <MainHeader />\n            <SubHeader title='Create a Club' />\n            <br />\n            <div className='main-container'>\n                <div className='float-container' style={{padding: '30px 30px', marginBottom: 100}}>\n                    <form className='create-club' id='form-create-club' onSubmit={handleSubmit}>\n                        <label>\n                            Club Name *<br />\n                            <input style={inputStyle} type='text' value={name} onChange={e => setName(e.target.value)} required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Club Banner <br />\n                            <input onChange={e => setBannerFile(e.target.files[0])} type='file' accept='image/*'\n                                style={{display: 'none'}}\n                            />\n                             <div className='banner-image-input'>\n                                 <img src={tempBannerURL ? tempBannerURL : srcBanner} />\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <button className='clear-btn-secondary' style={{float: 'right'}} onClick={handleClickUserDefaultBanner} type='button'>\n                            Use default banner\n                        </button>\n                        <br /><br />\n                        <label >\n                            Club Icon *<br />\n                            <input onChange={e => setIconFile(e.target.files[0])} type='file' accept='image/*' required \n                                style={{display: 'none'}}\n                            />\n                            <div className='icon-image-input'>\n                                {tempIconURL && <img src={tempIconURL ? tempIconURL : ''} /> }\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Description *<br />\n                            <textarea \n                                style={{width: '400px', resize: 'none'}} maxLength='200' value={description} \n                                onChange={e => setDescription(e.target.value)} \n                                rows='5'\n                            />\n                        </label>\n                        <br /><br />\n                        <label>\n                            Custom URL *<br />\n                            <p className='d-inline'>{window.location.hostname}/clubs/</p>\n                            <input value={customURL} onChange={handleCustomURLChange} required/>\n                            <br />\n                            {customURL.length > 0 && \n                                <div className='d-flex jc-flex-start ai-center' \n                                    style={{color: URLIsAvailable ? 'var(--color-success)' : 'var(--color-error)'}}\n                                >\n                                    <i className={URLIsAvailable ? 'bi bi-check-circle-fill' : 'bi bi-exclamation-circle-fill'} \n                                        style={{marginRight: 10}}\n                                    />\n                                    <p>{URLIsAvailable ? 'This club url is available' : 'This club url is not available' } </p>\n                                </div>\n                            }\n                        </label>\n                        <br /><br />\n                    </form>\n                    <br />\n                    <div className='d-flex jc-center ai-center'>\n                        <button form='form-create-club' className='solid-btn' type='submit'>Create Club</button>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Loading.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Dashboard.js",["276","277","278"],"import React, { useEffect, useState} from \"react\"\nimport MainHeader from \"../headers/MainHeader\"\nimport Calendar from './Calendar'\nimport UserInfoCard from './UserInfoCard'\nimport ClubsInfoCard from './ClubsInfoCard'\nimport NewSessionForm from './NewSessionForm'\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport Loading from '../misc/Loading'\nimport axios from \"axios\"\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Dashboard() {\n    const { currentUser, thisUser } = useAuth()\n    const history = useHistory()\n\n    const [myClubs, setMyClubs] = useState([])\n    const [todaySessions, setTodaySessions] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [showSessionForm, setShowSessionForm] = useState(false)\n\n    useEffect(() => {\n        async function fetchData() {\n            await fetchClubs()\n            await fetchSessions()\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    async function fetchClubs() {\n        const url = `/clubmemberships/user/${thisUser._id}`\n        const res = await api.get(url)\n        setMyClubs(res.data)\n    }\n\n    async function fetchSessions() {\n        const query = {\n            year: moment().year(),\n            month: moment().month(),\n            day: moment().date(),\n            sparse: 0\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        try {\n            const res = await api.get(`/sessions/user/${thisUser._id}?${queryString}`)\n            setTodaySessions(res.data)\n        } catch (error) { console.log(error) }\n    }\n\n    function routeToSession(session) {\n        history.push(`/sessions/${session._id}`)\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: '0'}} />\n            <br />\n            <br />\n            <div \n                className='main-container d-flex jc-flex-start ai-flex-start'\n                style={{ padding: '0px 50px', marginBottom: '100px'}}\n            >\n                <div hidden={false} style={{marginRight: 60}}>\n                    <UserInfoCard style={{width: 300, height: 'auto'}}/>\n                    <br />\n                    <ClubsInfoCard clubs={myClubs} style={{width: 300, height: 'auto'}}/>\n                </div>\n                <div style={{ flex: 1}} >\n                    <div>\n                        <div className='d-flex jc-space-between ai-center'>\n\n                            <h3 style={{fontWeight: '400'}}>Today's Workouts</h3>\n                            <button className='clear-btn-secondary' onClick={() => setShowSessionForm(true)}>\n                                <div>Add Workout</div>\n                            </button>\n                        </div>\n                        <br />\n                        <NewSessionForm \n                            setShowSessionForm={setShowSessionForm}\n                            showSessionForm={showSessionForm}\n                            fetchSessions={fetchSessions}\n                            myClubs={myClubs}\n                        />\n                        {loading ? <Loading /> : \n                        <div className='float-container'>\n                            <table style={{width: '100%'}} >\n                                <thead>\n                                    <tr >\n                                        <th >Host</th>\n                                        <th >Title</th>\n                                        <th >Start Time</th>\n                                    </tr>\n                                </thead>\n                                <tbody >\n                                    {todaySessions.map( (session, i) => (\n                                    <tr key={i} onClick={() => routeToSession(session)} >\n                                        <td className='d-flex jc-flex-start ai-center' style={{gap: '10px'}}>\n                                            {session.club && <img src={session.club.iconURL} className='club-icon' />}\n                                            {!session.club && (\n                                                session.hostUser.iconURL ? \n                                                    <img src={session.hostUser.iconURL} className='user-icon' />\n                                                    :\n                                                    <div className='user-icon-default'>\n                                                        <i className='bi bi-person' />\n                                                    </div>\n                                            )}\n                                            <p> {session.club ? session.club.name : currentUser.displayName} </p>\n                                        </td>\n                                        <td>\n                                            {session.title}\n                                        </td>\n                                        <td>\n                                            {moment(session.startAt).format('LT')}\n                                        </td>\n                                    </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            {!todaySessions.length && \n                                <p style={{textAlign: 'center', padding: '15px 0px', color: 'var(--color-secondary)' }}>\n                                    You have no workouts scheduled for today\n                                </p>\n                            }\n                        </div>}\n                    </div>\n\n                    <br /><br /><br />\n\n                    <h3 >Training Calendar</h3>\n                    <Calendar />\n                </div>\n                \n                \n            </div>\n        </div>\n        \n    )   \n\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Calendar.js",["279"],"import React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport moment from 'moment'\nimport axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Calendar(props) {\n    const [currMoment, setCurrMoment] = useState(moment())\n    const [calendarDays, setCalendarDays] = useState([])\n    const [sessions, setSessions] = useState([])\n    const [data, setData] = useState([])\n\n    const {thisUser} = useAuth()\n\n    useEffect(() => {\n        fetchData()\n    }, [currMoment])\n\n    useEffect( () => {\n        // Get days in this month\n        const val = currMoment.clone()\n        const startDay = val.clone().startOf('month').startOf('week')\n        const endDay = val.clone().endOf('month').endOf('week')\n        const currDay = startDay.clone().subtract(1,'day')\n        let days = []\n        while (currDay.isBefore(endDay, 'day')) {\n            days.push(currDay.add(1, 'day').clone())\n        }\n        setCalendarDays(days)\n\n        // map sessionsData to sessions arr\n        const sessions = Array(days.length).fill([])\n\n        if (data.sessions && data.fetchedMoment.isSame(currMoment, 'month')) {\n            data.sessions.forEach(session => {\n                const idx = moment(session.startAt).diff(startDay, 'days')\n                // check if we have this months sessions\n                if (idx >= 0 && idx < days.length) {\n                    sessions[idx] = [...sessions[idx], session]\n                }\n            })\n        }\n        \n        setSessions(sessions)\n    }, [currMoment, data] )\n\n    async function fetchData() {\n        const query = {\n            year: currMoment.year(),\n            month: currMoment.month(),\n            sparse: 1\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        try {\n            const res = await api.get(`/sessions/user/${thisUser._id}?${queryString}`)\n            setData({\n                sessions: res.data,\n                fetchedMoment: currMoment.clone()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <div className='d-flex jc-center ai-center' style={{gap: '20px', padding: '5px 0px'}} >\n                <h4>{currMoment.format('YYYY')}</h4>\n\n                <div onClick={() => setCurrMoment(currMoment.subtract(1, 'month').clone())}\n                    style={{width: '30px', height: '30px', cursor: 'pointer'}} \n                    className='d-flex jc-center ai-center'\n                >\n                    <i className='bi bi-chevron-left' />\n                </div>\n                \n                <h4 style={{width: '80px', textAlign: 'center'}}>{currMoment.format('MMMM')}</h4>\n\n                <div onClick={() => setCurrMoment(currMoment.add(1, 'month').clone())}\n                    style={{width: '30px', height: '30px', cursor: 'pointer'}} \n                    className='d-flex jc-center ai-center'\n                >\n                    <i className='bi bi-chevron-right' />\n                </div>\n                \n            </div>\n            <div className='float-container'>\n                <div\n                    style={{\n                        display: 'grid', gap: 0,\n                        gridTemplateColumns: 'repeat(7, 1fr)'\n                    }}\n                >\n                    {['s','m','t','w','t','f','s'].map((day, id) => (\n                        <h6 key={id} style={{\n                            textTransform: 'uppercase',margin: '5px 0px',\n                            padding: '3px', color: 'var(--color)',\n                            textAlign: 'center',\n                        }}>\n                            {day}\n                        </h6>\n                    ))}\n                </div>\n                <div style={{\n                    display: 'grid',\n                    gridTemplateColumns:'repeat(7,1fr)',\n                    gap: '0px',\n                    gridAutoRows: '110px',\n                    }}\n                    className='calendar'\n                >\n                    {calendarDays.map((day, index) => (\n                        <div key={index} \n                            style={{\n                                padding: '0px 0px', \n                                backgroundColor: day.isSame(moment(), 'day') && 'var(--tint-color-translucent)',\n                                borderTop: '1px solid var(--bgc-hover)',\n                                overflow: 'scroll'\n                            }}\n                        >\n                            <p style={{\n                                color: 'var(--color-secondary)',\n                                textTransform: 'uppercase', fontSize: '14px',\n                                padding: '2px 5px',\n                                marginBottom: '2px',\n                            }}>\n                                {day.format('D')}\n                            </p>\n                            {sessions[index] && sessions[index].map( (session, i) => (\n                                <Link to={`/sessions/${session._id}`} style={{textDecoration: 'none'}} key={i}>\n                                    <h5 className='page-link' \n                                        style={{\n                                            borderLeft: '1px solid var(--tint-color)',\n                                            padding: '5px 5px',\n                                            marginTop: '4px',\n                                            fontWeight: '400', fontSize: '12px'\n                                    }}>\n                                        {session.title}\n                                        <p style={{fontSize: '12px', display: 'none'}}>{moment(session.startAt).format('LT')}</p>\n                                        \n                                    </h5>\n                                </Link>\n                                \n                            ))}\n                            \n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/UserInfoCard.js",["280","281","282"],"\nimport React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport CustomBar from '../charts/CustomBar'\nimport {Bar} from 'react-chartjs-2'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function UserInfoCard(props) {\n    const {currentUser, thisUser} = useAuth()\n    const history = useHistory()\n    const [stats, setStats] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const style={\n        padding: '20px 20px'\n    }\n    const statsValueStyle = {\n        letterSpacing: '1px',\n        color: 'var(--tint-color)'\n    }\n\n    const graphFillColor = '--tint-color-translucent'\n    const graphBorderColor = '--tint-color'\n\n    const timeframeStyle = { color: 'var(--color)'}\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const res = await api.get(`/users/${thisUser._id}/statistics`)\n                setStats(res.data)\n            } catch (error) {\n                console.log(error)\n            } \n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    function handleClickName() {\n        history.push(`/athletes/${thisUser._id}`)\n    }\n\n    return (\n        <div style={{...props.style}} className='bs-bb'>\n            {loading ? <Loading /> :\n            <div className='float-container' >\n                <div className='d-flex jc-flex-start ai-center' \n                    style={{borderBottom: '1px solid var(--bc)', padding: '10px 10px'}}\n                > \n                    <img height='30px' width='30px' \n                        src={currentUser.photoURL} \n                        style={{borderRadius: '50%', marginRight: '10px'}}\n                    />\n                    <h4 className='page-link' onClick={handleClickName}>{currentUser.displayName}</h4>\n                </div>\n                <div style={style}>\n                    <div\n                        className='d-flex jc-space-between ai-center'\n                    >\n                        <h5 style={timeframeStyle}>This Week</h5>\n                        <h4 style={statsValueStyle}>\n                            {stats.aggregate.weekMeters.toLocaleString()} m\n                        </h4>\n                    </div>\n                    <CustomBar \n                        height='115px' \n                        labelFreq={1}\n                        maxLabelLength={1}\n                        data={{\n                            labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n                            label: 'Meters',\n                            dataset: stats.plottable.weekMeters,\n                            backgroundColor: graphFillColor,\n                            borderColor: graphBorderColor\n                        }}\n                    />\n                </div>\n                \n                <div style={{...style}} >\n                    <div\n                        className='d-flex jc-space-between ai-center'\n                    >\n                        <h5 style={timeframeStyle}>This Month</h5>\n                        <h4 style={statsValueStyle}>\n                            {stats.aggregate.monthMeters.toLocaleString()} m\n                        </h4>\n                    </div>\n                    <CustomBar \n                        height='115px' \n                        labelFreq={10}\n                        maxLabelLength={2}\n                        data={{\n                            labels: Array(moment().daysInMonth()).fill(0).map((l, i) => i + 1),\n                            label: 'Meters',\n                            dataset: stats.plottable.monthMeters,\n                            backgroundColor: graphFillColor,\n                            borderColor: graphBorderColor\n                        }}\n                    />\n                </div>\n                \n                <div style={{...style}} >\n                    <div\n                        className='d-flex jc-space-between ai-center'\n                    >\n                        <h5 style={timeframeStyle}>This Year</h5>\n                        <h4 style={statsValueStyle}>\n                            {stats.aggregate.yearMeters.toLocaleString()} m\n                        </h4>\n                    </div>\n                    <CustomBar\n                        height='115px'\n                        labelFreq={3}\n                        maxLabelLength={3}\n                        data={{\n                            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                            label: 'Meters',\n                            dataset: stats.plottable.yearMeters,\n                            backgroundColor: graphFillColor,\n                            borderColor: graphBorderColor\n                        }}\n                    />\n                </div>\n                <div className='d-flex jc-space-around ai-center page-link'\n                    style={{padding: '13px 0px', fontSize: '14px', borderTop: '1px solid var(--bc)'}}\n                    onClick={() => history.push('/training/statistics')}\n                >\n                    Your Statistics\n                    <i className='bi bi-chevron-right' style={{fontSize: '20px'}} />\n                </div>\n            </ div>\n            }\n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/NewSessionForm.js",["283"],"import React, {useRef, useState} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function NewSessionForm(props) {\n    const {thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const sessionTitleRef = useRef()\n    const sessionDateRef = useRef()\n    const sessionTimeRef = useRef()\n    const sessionPrivacyRef = useRef()\n\n    // workout items\n    const maxItems = 4\n    const itemExamples = ['ex.  2k Warmup', 'ex.  15k Steady State', '', '']\n    const [hideItems, setHideItems] = useState([\n        false, false, true, true\n    ])\n    const [visibleItems, setVisibleItems] = useState(2)\n    const [sessionItems, setSessionItems] = useState( Array(maxItems).fill('') )\n\n\n    async function handleCreateSession(e) {\n        e.preventDefault()\n        console.log('did create session')\n        const startAt = new Date(`${sessionDateRef.current.value}T${sessionTimeRef.current.value}`)\n        const sessionData = {\n            title: sessionTitleRef.current.value,\n            hostUser: thisUser._id,\n            startAt: startAt,\n            isAccessibleByLink: sessionPrivacyRef.current.value === 'link',\n            club: ['link', 'self'].includes(sessionPrivacyRef.current.value) ? undefined : sessionPrivacyRef.current.value,\n            workoutItems: sessionItems.filter((item, i) => i < visibleItems)\n        }\n        try {\n            const res = await api.post('/sessions', sessionData)\n            setMessage({title: 'Created session', isError: false, timestamp: moment()})\n            props.setShowSessionForm(false)\n            props.fetchSessions()\n        } catch(err) {\n            setMessage({title: `Error creating session. ${err.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleItemChange(e, itemIndex) {\n        const items = [...sessionItems]\n        items[itemIndex] = e.target.value\n        setSessionItems(items)\n    }\n\n    function handleAddItem() {\n        if (visibleItems === maxItems) {return}\n        const hide = [...hideItems]\n        for (let i = 0; i < hide.length; i++) {\n            if (hide[i]) {\n                hide[i] = false\n                break\n            }\n        }\n        setHideItems(hide)\n        setVisibleItems(curr => curr + 1)\n\n    }\n\n    function handleRemoveItem(itemIndex) {\n        if (visibleItems === 1) {return}\n        const hide = [...hideItems]\n        hide[itemIndex] = true\n        setHideItems(hide)\n        setVisibleItems(curr => curr - 1)\n    }\n\n    return (\n        <div className='bgc-container'\n            style={{\n                pointerEvents: props.showSessionForm ? 'auto' : 'none',\n                opacity: props.showSessionForm ? '100%':'0%',\n                height: props.showSessionForm ? 'auto': '0px',\n                marginBottom: props.showSessionForm ? '40px' : '0px',\n                padding: '0px 30px',\n                }}\n        >\n            <br />\n            <h4 style={{ textAlign: 'left', marginBottom: '40px', fontWeight: '500'}}>Create a Workout</h4>\n            <form onSubmit={handleCreateSession}>\n                <div className='d-flex jc-flex-start' style={{gap: '40px'}}>\n                    <div style={{flex: 1}}>\n                        <div className='d-flex jc-flex-start ai-center'>\n                            <label style={{marginRight:'20px'}}>\n                                Date <br />\n                                <input ref={sessionDateRef} type='date' required/>\n                            </label>\n                            <label>\n                                Start Time <br />\n                                <input ref={sessionTimeRef} type='time' required/>\n                            </label>\n                        </div> <br />\n                        <label>\n                            Title <br />\n                            <input type='text' ref={sessionTitleRef} required/>\n                        </label><br /><br />\n                        <label>\n                            Who can join <br />\n                            <select ref={sessionPrivacyRef}>\n                                <option value=\"self\">Only Me</option>\n                                <option value=\"link\">Anyone with link</option>\n                                {props.myClubs.map((club, idx) => (\n                                    <option key={idx} value={club._id}>\n                                        {club.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label>\n                        \n                    </div>\n                    <div style={{flex: 1}}>\n                        <label>Activities</label>\n                        <div >\n                            {Array(maxItems).fill(null).map((item, i) => (\n                                <div key={i} className='d-flex jc-space-between ai-center' \n                                    style={{display: hideItems[i] ? 'none' : 'flex', gap: '10px'}}\n                                >\n                                    <input \n                                        required={i < visibleItems}\n                                        placeholder={itemExamples[i]}\n                                        value={sessionItems[i]} \n                                        onChange={e => handleItemChange(e, i)} \n                                        type='text'\n                                        style={{display: 'block', flex: 1,  marginBottom: '5px'}}\n                                    />\n                                    <button \n                                        type='button' className='icon-btn' \n                                        onClick={() => handleRemoveItem(i)}\n                                        style={{opacity: i+1 === visibleItems && visibleItems !== 1 ? '100%' : '0%'}}\n                                        disabled={i+1 !== visibleItems || visibleItems === 1}\n                                    >-</button>\n                                </div>\n                            ))}\n                            <button \n                                type='button' className='icon-btn'\n                                hidden={visibleItems === maxItems}\n                                onClick={handleAddItem}\n                            >\n                                +\n                            </button>\n                        </div>\n                        \n                    </div>   \n                </div>\n                <br />\n                <div className='d-flex jc-space-between ai-center'>\n                    <button  className='solid-btn-secondary' type='submit'>Create</button>\n                    <button type='button' onClick={()=>props.setShowSessionForm(false)} className='clear-btn-cancel'>Close</button>\n                </div>\n            </form>\n            <br />\n        </div>\n    )\n}\n\n\n\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/ClubsInfoCard.js",["284","285","286"],"import React from 'react'\nimport Loading from '../misc/Loading'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\n\nexport default function ClubsInfoCard(props) {\n    const history = useHistory()\n    const {currentUser} = useAuth()\n\n    function handleClickClub(club) {\n        history.push(`/clubs/${club.customURL}/general`)\n    }\n\n    return (\n        <div style={{...props.style, padding: '20px 20px'}} className='float-container bs-bb' >\n            <h3>Your Clubs</h3>\n            <br />\n            <div className='ai-center' style={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: 30}}>\n                {props.clubs && props.clubs.map((club, idx) => (\n                    <img key={idx} src={club.iconURL} className='club-icon-medium' onClick={() => handleClickClub(club)} />\n                ))}\n                <img src={currentUser.photoURL} className='club-icon-medium' />\n            </div>\n           <br />\n            <button \n                style={{display: 'block', margin: '0px auto'}} \n                className='clear-btn-secondary'\n                onClick={() => history.push('/explore/clubs')}\n            >\n                Find Clubs\n            </button>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/Session.js",["287","288","289","290"],"import React, {useEffect, useState, useCallback} from \"react\"\nimport MainHeader from \"../headers/MainHeader\"\nimport SubHeader from '../headers/SubHeader'\nimport MembersInfoCard from './MembersInfoCard'\nimport SessionInfoCard from './SessionInfoCard'\nimport LiveActivityTable from './LiveActivityTable'\nimport ResultsTable from './ResultsTable'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from \"axios\"\nimport moment from 'moment'\nimport {useParams} from 'react-router-dom'\n\nimport {PM5} from './connect_pm5/pm5'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Session(props) {\n    const {sessionID} = useParams()\n    const {currentUser, thisUser} = useAuth()\n    const [session, setSession] = useState(null)\n    const [activities, setActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [ergConnected, setErgConnected] = useState(false)\n    const [activityInProgress, setActivityInProgress] = useState(null)\n\n    const [C2Data, setC2Data] = useState(null)\n\n    const pm5 = new PM5(\n        () => { console.log('connecting')}, // cbConnecting\n        () => { setErgConnected(true) },    // cbConnected\n        () => { setErgConnected(false) },   // cbDisconnected\n        (m) => {                             // cbMessage\n            setC2Data(curr => ({...curr, ...m.data}))       \n        }\n    )\n\n    const menuRef = useCallback(node => {\n        if (node !== null) {\n            setMenuOffset(node.offsetTop - 70)\n        }\n    }, [])\n    const [menuOffset, setMenuOffset] = useState(0)\n\n    useEffect(() => {\n        // confirm page refresh\n        window.onbeforeunload = (event) => {\n            const e = event || window.event;\n            e.preventDefault();\n            if (e) {\n              e.returnValue = ''; // Legacy method for cross browser support\n            }\n            return ''; // Legacy method for cross browser support\n          };\n\n        const disconnect = () => {\n            if ( pm5.connected() ) { pm5.doDisconnect() } \n            window.onbeforeunload = () => {}\n        }\n        return disconnect\n    }, [])\n\n    useEffect(() => {\n        const refreshRate = 10 // seconds\n        async function fetchData() {\n            await fetchSession()\n            await fetchActivities()\n            setLoading(false)\n        }\n        fetchData()\n        const interval = setInterval(() => {\n            fetchData()\n        }, refreshRate*1000);\n\n        return () => clearInterval(interval)\n    }, [])\n\n    async function fetchSession() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}`)\n            setSession(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function fetchActivities() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}/activities`)\n            setActivities(res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                for (let j = 0; j < res.data[i].length; j++) {\n                    if (res.data[i][j].uid === currentUser.uid && !res.data[i][j].isCompleted) {\n                        setActivityInProgress(res.data[i][j])\n                        return\n                        // Assume there is only one? -> potential bug\n                        // Should be the case, but this state is possible (almost impossible)\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const [lastPatchTime, setLastPatchTime] = useState(moment())\n    useEffect(() => {\n        if (moment().diff(lastPatchTime, 'seconds') < 10) {return}\n        else if (! activityInProgress) { return }\n\n        const updatedActivity = {\n            ...activityInProgress,\n            ...C2Data\n        }\n        \n        async function patchActivity() {\n            try {\n                await api.patch(`/activities/${activityInProgress._id}`, updatedActivity)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        patchActivity()\n            .then( setLastPatchTime(moment()) )\n    }, [C2Data])\n\n    function handleClickConnect() {\n        if (!navigator.bluetooth) {\n            alert('This browser does not support bluetooth.');\n        } else if (pm5.connected()) {\n            return\n        } else {\n            pm5.doConnect()\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            {!loading && <SubHeader title={session.title}/> }\n            {loading ? <Loading /> :\n            <div className='main-container' style={{ padding: '0px 0px'}} >\n                <div className='d-flex jc-flex-start ai-flex-start' >\n                    <div ref={menuRef}\n                        style={{ \n                            width: '225px', backgroundColor: 'var(--bgc)', padding: '0px 25px',\n                            position: 'sticky', top: menuOffset\n                        }}\n                    >\n                        <br /><br />\n                        <SessionInfoCard session={session} />\n                        <br /><br />\n                        <MembersInfoCard session={session} fetchData={fetchSession}/>\n                    </div>\n                    <div style={{flex: 1, padding: '0px 50px', borderLeft: '1px solid var(--bc)',}}>\n                        <br /><br />\n\n                        <h3 >Workout Activities</h3>\n                        <br />\n                        <div className='float-container' style={{padding: '10px 10px'}}>\n                            {session.workoutItems.map((item, i) => (\n                                <div>\n                                        <LiveActivityTable \n                                        activities={activities[i]}\n                                        activityInProgress={activityInProgress}\n                                        setActivityInProgress={setActivityInProgress}\n                                        activityTitle={item} \n                                        session={session}\n                                        workoutItemIndex={i}\n                                        fetchActivities={fetchActivities}\n                                        ergConnected={ergConnected}\n                                        handleClickConnect={handleClickConnect}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n\n                        <br /><br />\n\n                        <h3 >Workout Results</h3>\n                        <br />\n                        <div className='float-container' style={{padding: '10px 10px'}}>\n                            {session.workoutItems.map((item, i) => (\n                                <div>\n                                    <ResultsTable \n                                        activities={activities[i]} \n                                        activityTitle={item} \n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div style={{height: 300}} />\n                    </div>\n                </div>\n            </div>\n            }\n            \n        </div>\n    )\n}\n/*\nimport React, {useEffect, useState} from \"react\"\nimport MainHeader from \"../headers/MainHeader\"\nimport SubHeader from '../headers/SubHeader'\nimport MembersInfoCard from './MembersInfoCard'\nimport SessionInfoCard from './SessionInfoCard'\nimport LiveActivityTable from './LiveActivityTable'\nimport ResultsTable from './ResultsTable'\nimport Arrow from '../misc/Arrow'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from \"axios\"\nimport moment from 'moment'\nimport {useParams} from 'react-router-dom'\n\nimport {PM5} from './connect_pm5/pm5'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Session(props) {\n    const {sessionID} = useParams()\n    const {currentUser} = useAuth()\n    const [session, setSession] = useState(null)\n    const [activities, setActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [hideActivities, setHideActivities] = useState(false)\n    const [hideResults, setHideResults] = useState(true)\n\n    const [ergConnected, setErgConnected] = useState(false)\n    const [activityInProgress, setActivityInProgress] = useState(null)\n\n    const [C2Data, setC2Data] = useState(null)\n\n    const pm5 = new PM5(\n        () => { console.log('connecting')}, // cbConnecting\n        () => { setErgConnected(true) },    // cbConnected\n        () => { setErgConnected(false) },   // cbDisconnected\n        (m) => {                             // cbMessage\n            setC2Data(curr => ({...curr, ...m.data}))       \n        }\n    )\n\n    useEffect(() => {\n        // confirm page refresh\n        window.onbeforeunload = (event) => {\n            const e = event || window.event;\n            // Cancel the event\n            e.preventDefault();\n            if (e) {\n              e.returnValue = ''; // Legacy method for cross browser support\n            }\n            return ''; // Legacy method for cross browser support\n          };\n\n        // disonnect on component dismount\n        const disconnect = () => {\n            if ( pm5.connected() ) { pm5.doDisconnect() } \n            window.onbeforeunload = () => {}\n        }\n        return disconnect\n    }, [])\n\n    useEffect(() => {\n        const refreshRate = 10 // seconds\n        async function fetchData() {\n            console.log('\\n fetching data \\n')\n            await fetchSession()\n            await fetchActivities()\n            setLoading(false)\n        }\n        fetchData()\n        const interval = setInterval(() => {\n            fetchData()\n        }, refreshRate*1000);\n\n        return () => clearInterval(interval)\n    }, [])\n\n    async function fetchSession() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}`)\n            setSession(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function fetchActivities() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}/activities`)\n            setActivities(res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                for (let j = 0; j < res.data[i].length; j++) {\n                    if (res.data[i][j].uid === currentUser.uid && !res.data[i][j].isCompleted) {\n                        setActivityInProgress(res.data[i][j])\n                        return\n                        // Assume there is only one? -> potential bug\n                        // Should be the case, but this state is possible (almost impossible)\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const [lastPatchTime, setLastPatchTime] = useState(moment())\n    useEffect(() => {\n        if (moment().diff(lastPatchTime, 'seconds') < 10) {return}\n        else if (! activityInProgress) { return }\n\n        const updatedActivity = {\n            ...activityInProgress,\n            ...C2Data\n        }\n        \n        async function patchActivity() {\n            try {\n                await api.patch(`/activities/${activityInProgress._id}`, updatedActivity)\n                console.log('did update activity in progress')\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        patchActivity()\n            .then( setLastPatchTime(moment()) )\n    }, [C2Data])\n\n    async function handleClickJoin() {\n        try {\n            await api.patch(`/sessions/${sessionID}/join`, {uid: currentUser.uid})\n            fetchSession()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function handleClickConnect() {\n        if (!navigator.bluetooth) {\n            alert('This browser does not support bluetooth.');\n        } else if (pm5.connected()) {\n            return\n        } else {\n            pm5.doConnect()\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            {!loading && <SubHeader title={session.title}/>}\n            {loading ? <Loading /> :\n            <div className='main-container' style={{ padding: '0px 0px'}} >\n                <div className='d-flex jc-flex-start ai-flex-start' >\n                    <div \n                        style={{ \n                            width: '250px', minHeight: '100vh', backgroundColor: 'var(--bgc-nav)',\n                            borderRight: '1px solid var(--bc)', padding: '0px 20px',\n                            display: 'inline-block'\n                        }}\n                    >\n                        <br />\n                        <SessionInfoCard session={session} />\n                        <br /><br />\n                        <MembersInfoCard \n                            handleClickJoin={handleClickJoin} \n                            session={session}\n                        />\n                    </div>\n                    <div style={{flex: 1, padding: '0px 25px'}}>\n                        <br />\n                        <div >\n                            <div className='d-flex jc-flex-start ai-center' style={{gap: '10px'}}>\n                                <button className='arrow-btn' onClick={() => setHideActivities(curr => !curr)}>\n                                    <Arrow direction={hideActivities ? 'right' : 'down'} color='var(--color-tertiary)' />\n                                </button>\n                                <h3 style={{fontWeight: '500'}} onClick={() => setHideActivities(curr => !curr)}>Workout Activities</h3>\n                            </div>\n                            <div style={{display: hideActivities ? 'none' : 'block',padding: '30px 20px 0px 20px'}}>\n\n                                {session.workoutItems.map((item, i) => (\n                                    <div>\n                                         <LiveActivityTable \n                                            activities={activities[i]}\n                                            activityInProgress={activityInProgress}\n                                            setActivityInProgress={setActivityInProgress}\n                                            activityTitle={item} \n                                            session={session}\n                                            workoutItemIndex={i}\n                                            fetchActivities={fetchActivities}\n                                            ergConnected={ergConnected}\n                                            handleClickConnect={handleClickConnect}\n                                        />\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div>\n                            <div className='d-flex jc-flex-start ai-center' style={{gap: '10px'}}>\n                                <button className='arrow-btn' onClick={() => setHideResults(curr => !curr)}>\n                                    <Arrow direction={hideResults ? 'right' : 'down'} color='var(--color-tertiary)' />\n                                </button>\n                                <h3 style={{fontWeight: '500'}} onClick={() => setHideResults(curr => !curr)}>Workout Results</h3>\n                            </div>\n                            <div style={{display: hideResults ? 'none' : 'block',padding: '30px 20px'}}>\n                                {session.workoutItems.map((item, i) => (\n                                    <div>\n                                        <ResultsTable \n                                            activities={activities[i]} \n                                            activityTitle={item} \n                                        />\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            }\n            \n        </div>\n    )\n}\n*/\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/MembersInfoCard.js",["291","292","293"],"import React, {useState, useEffect} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function MembersInfoCard(props) {\n    const {thisUser} = useAuth()\n    const [session, setSession] = useState(props.session)\n    const [isMember, setIsMember] = useState(false)\n\n    useEffect(() => {\n        setSession(props.session)\n        setIsMember(props.session.members.some(m => m._id === thisUser._id))\n    }, [props])\n\n    async function handleClickJoin() {\n        try {\n            await api.patch(`/sessions/${session._id}/join`, {user: thisUser._id})\n        } catch (error) {\n            console.log(error)\n        }\n        props.fetchData()\n    }\n\n    return (\n        <div style={{...props.style}}>\n            <div>\n                <div className='d-flex jc-space-between ai-center'>\n                    <h4 style={{fontWeight: '500'}}>Members <small>( {session.members.length} )</small></h4>\n                    <button \n                        onClick={handleClickJoin} \n                        className='solid-btn-secondary'\n                        disabled={isMember}\n                        style={{display: isMember && 'none'}}\n                    >\n                        Join\n                    </button>\n                </div>\n                <table style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {session.members.map(member => (\n                            <tr>\n                                <td className='d-flex jc-flex-start ai-center'>\n                                    {member.iconURL && <img src={member.iconURL} className='user-icon-small' />}\n                                    {!member.iconURL &&\n                                        <div className='user-icon-default-small'>\n                                            <i className='bi bi-person' />\n                                        </div>\n                                    }\n                                    <p>{member.displayName}</p>\n                                </td>\n                                \n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/SessionInfoCard.js",["294","295","296","297","298","299","300"],"import React, {useEffect, useState} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function SessionInfoCard(props) {\n    const [session, setSession] = useState(props.session)\n    const [loading, setLoading] = useState(true)\n    const {currentUser, thisUser} = useAuth()\n\n    useEffect(() => {\n        setSession(props.session)\n    }, [props])\n    return (\n        <div style={{...props.style}}>\n            <h4 style={{fontWeight: '500', marginBottom: '10px'}}>Session Host</h4>\n            <div className='d-flex jc-flex-start ai-flex-start' >\n                {session.club && <img src={session.club.iconURL} height={50} width={50} className='club-icon' />}\n                {!session.club && (\n                    session.hostUser.iconURL ? \n                        <img className='user-icon' height={50} width={50} src={session.hostUser.iconURL} />\n                        :\n                        <div className='user-icon-default' style={{height: 50, width: 50}}>\n                            <i className='bi bi-person' />\n                        </div>\n                )}\n                <div>\n                    <h4 style={{color: 'var(--color-secondary)'}}>\n                        {session.club ? session.club.name : session.hostUser.displayName}\n                    </h4>\n                    <h5 style={{color: 'var(--color-secondary)',marginTop: '10px'}}>\n                        {moment(props.session.startAt).calendar()}\n                    </h5>\n                </div>\n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/LiveActivityTable.js",["301","302","303"],"import React, {useEffect, useState} from 'react'\nimport C2Screen from '../misc/C2Screen'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport 'moment-duration-format'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function LiveActivityTable(props) {\n    const {currentUser} = useAuth()\n\n    const [hideSelf, setHideSelf] = useState(true)\n    const [hideInstructions, setHideInstructions] = useState(true)\n\n    const [activities, setActivities] = useState(\n        props.activities.filter(ac => !ac.isCompleted)\n    )\n    const [ergConnected, setErgConnected] = useState(props.ergConnected)\n    const [activityInProgress, setActivityInProgress] = useState(props.activityInProgress)\n    const [startDisabled, setStartDisabled] = useState(false)\n\n    const [selectedActivityIDs, setSelectedActivityIDs] = useState(new Set())\n    const [showErgConnectionError, setShowErgConnectionError] = useState(false)\n    const [didCompleteActivity, setDidCompleteActivity] = useState(false)\n\n    const [usersCompletedCount, setUsersCompletedCount] = useState(0)\n    const [usersActiveCount, setUsersActiveCount] = useState(0)\n    \n\n    useEffect(() => {\n        setActivities(props.activities.filter(ac => !ac.isCompleted))\n        /*\n        if (!didCompleteActivity) {\n            setDidCompleteActivity(\n                props.activities.filter(ac => ac.uid === currentUser.uid && ac.isCompleted).length > 0\n            )\n        }\n        */\n        const completedUIDs = new Set()\n        const activeUIDs = new Set()\n        props.activities.forEach(ac => {\n            if ( ac.uid === currentUser.uid && ac.isCompleted ) {\n                setDidCompleteActivity(true)\n            }\n            if ( ac.isCompleted ) {\n                completedUIDs.add( ac.uid )\n            } else {\n                activeUIDs.add( ac.uid )\n            }\n        })\n        setUsersCompletedCount(completedUIDs.size)\n        setUsersActiveCount(activeUIDs.size)\n    }, [props.activities])\n\n    useEffect(() => {\n        setErgConnected(props.ergConnected)\n    }, [props.ergConnected])\n\n    useEffect(() => {\n        setActivityInProgress(props.activityInProgress)\n        if (activityInProgress) {setHideInstructions(true)}\n    }, [props.activityInProgress])\n\n    async function handleClickFinish() {\n        if (! activityInProgress) {\n            // extra check: this should not be possible\n            console.log('error finishing: no activity in progress')\n            return\n        } else if (activityInProgress.workoutItemIndex !== props.workoutItemIndex) {\n            // extra check: this should not be possible\n            console.log('error finishing activity: incorrect WorkoutItemIndex')\n        }\n        removeSelectedActivity(activityInProgress._id)\n        try {\n            await api.patch(`/activities/${activityInProgress._id}/complete`)\n            props.setActivityInProgress(null)\n\n        } catch (error) {\n            console.log(error)\n        }\n        setDidCompleteActivity(true)\n    }\n\n    async function handleClickStartWorkout() {\n        setStartDisabled(true)\n\n        if (activityInProgress) {\n            // extra check: cannot start while activity in progress\n            // present error message to user ?\n        }\n        else if (! ergConnected) {\n            setShowErgConnectionError(true)\n            \n            setTimeout(() => {\n                setShowErgConnectionError(false)\n            }, 1*1000);\n        } else {\n            const activity = {\n                uid: currentUser.uid,\n                name: currentUser.displayName,\n                workoutItemIndex: props.workoutItemIndex,\n                sessionID: props.session._id\n            }\n            try {\n                const res = await api.post('/activities', activity)\n                handleClickActivity(res.data._id)\n                props.setActivityInProgress(res.data)\n                props.fetchActivities()\n            } catch (error) {\n                console.log(error)\n            }\n    \n            setHideSelf(false)\n            setHideInstructions(true)\n        }\n        setStartDisabled(false)\n    }\n\n    function handleClickActivity(activityID) {\n        if ( ! selectedActivityIDs.has(activityID) ) {\n            setSelectedActivityIDs(new Set([...selectedActivityIDs, activityID ]))\n        }\n    }\n\n    function removeSelectedActivity(activityID) {\n        selectedActivityIDs.delete(activityID)\n        setSelectedActivityIDs( new Set(selectedActivityIDs) )\n    }\n\n    return (\n        <div style={{marginBottom: hideSelf ? 0 : 30}} className='live-activity-table'>\n            <div className='d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center' style={{gap: 10, minHeight: '55px'}} >\n                    <button className='arrow-btn' onClick={() => setHideSelf(curr => !curr)}>\n                        <i className={`bi bi-chevron-${hideSelf ? 'right' : 'down'}`} style={{color: 'var(--color)'}} />\n                    </button>\n                    <h4 onClick={() => setHideSelf(curr => !curr)}>{props.activityTitle}</h4>\n                </div>\n                <div className='d-flex jc-flex-end ai-center'>\n                    {activityInProgress ?\n                        activityInProgress.workoutItemIndex === props.workoutItemIndex &&\n                            <button\n                                className='clear-btn-cancel'\n                                style={{margin: '0px 10px'}}\n                                onClick={handleClickFinish}\n                            >\n                                Finish\n                            </button>\n                        :\n                        !didCompleteActivity && (hideInstructions ? \n                            <button\n                                className='clear-btn-cancel' \n                                style={{margin: '0px 10px'}}\n                                onClick={() => setHideInstructions(false)}\n                            >\n                                Begin\n                            </button> \n                            :\n                            <button\n                                className='clear-btn-cancel' \n                                style={{margin: '0px 10px'}}\n                                onClick={() => setHideInstructions(true)}\n                            >\n                                Cancel\n                            </button>\n                        )\n                    }\n                    <div \n                        style={{\n                            height: '40px', width: '95px',\n                            borderLeft: '1px solid var(--bc)',\n                            padding: '0px 15px'\n                        }}\n                    >\n                        <div className='d-flex ai-center jc-space-between' style={{width: '100%'}}>\n                            <h5 style={{color: 'var(--color-secondary)', display: 'inline', textAlign: 'left'}}> \n                                Active\n                            </h5>\n                            <h5 style={{color: 'var(--tint-color)', display: 'inline', textAlign: 'right'}} >\n                                {usersActiveCount}\n                            </h5>\n                        </div>\n                        <div className='d-flex ai-center jc-space-between' style={{width: '100%'}}>\n                            <h5 style={{color: 'var(--color-secondary)', display: 'inline', textAlign: 'left'}}> \n                                Complete\n                            </h5>\n                            <h5 style={{color: 'var(--tint-color)', display: 'inline', textAlign: 'right'}} >\n                                {usersCompletedCount}\n                            </h5>\n                        </div>\n                    </div>\n                    \n                    <div className='d-flex ai-center jc-center' style={{\n                        height: '40px', width: '125px',\n                        borderLeft: '1px solid var(--bc)',\n                        textAlign: 'center',\n                    }}>\n                        <i className='bi bi-check-square' \n                            style={{fontSize: '25px', color: 'var(--tint-color)', opacity: !didCompleteActivity && 0}} \n                        />\n                    </div>\n                </div>\n            </div>\n            <div style={{padding: '0px 35px', paddingTop: !hideSelf && 20}}>\n                <div style={{ display: hideInstructions && 'none',color: 'var(--color-secondary)'}}>\n                    \n                    <h3 style={{ \n                            marginRight: '30px',\n                            backgroundColor: showErgConnectionError && 'var(--color-error)',\n                            color: showErgConnectionError && 'var(--bgc-light)',\n                            borderColor: showErgConnectionError && 'transparent',\n                            transition: 'background-color 0.2s' \n                        }} \n                        className='number-item'\n                    >\n                        1\n                    </h3>\n                    Connect ergometer: \n                    <p style={{\n                        color: ergConnected ? 'var(--color-success)' : 'var(--color-error)',\n                        display: 'inline', fontSize: '16px',\n                        marginLeft: '10px'\n                    }}>\n                        {ergConnected ? ' Connected' : ' Not Connected'}\n                    </p><br />\n                    {ergConnected ? \n                        <button \n                            onClick={props.handleClickConnect}\n                            style={{marginLeft: '65px', marginTop: '15px'}} className='clear-btn-secondary'\n                        >\n                            Reconnect\n                        </button> \n                        :\n                        <button \n                            onClick={props.handleClickConnect} \n                            style={{marginLeft: '65px', marginTop: '15px'}} className='clear-btn-secondary'\n                        >\n                            Connect\n                        </button>\n                    }\n                    <br /><br />\n                    <h3 style={{ marginRight: '30px' }} className='number-item'>2</h3>\n                    \n                    Configure workout: \n                    <p style={{display: 'inline', fontSize: '16px', marginLeft: '20px', color: 'var(--color)'}}>\n                        {props.activityTitle}\n                    </p>\n                    <br /><br />\n                    <button \n                        style={{margin: '10px auto', display: 'block'}}\n                        className='solid-btn-secondary'\n                        onClick={handleClickStartWorkout}\n                        disabled={startDisabled}\n                    >\n                        Start Workout\n                    </button>\n                </div >\n                    \n                <div className='d-flex jc-space-around ai-flex-start' \n                    style={{display: hideSelf ? 'none' : 'flex', flexWrap: 'wrap'}}\n                >\n                    \n                    {activities.filter(ac => selectedActivityIDs.has(ac._id)).map(ac =>(\n                        <C2Screen \n                            activity={ac} \n                            style={{height: 'auto', width: '275px', margin: '15px 10px'}} \n                            handleClickClose={() => removeSelectedActivity(ac._id)}\n                        />\n                    ))} \n                </div>\n\n                <div style={{display: hideSelf ? 'none': 'block'}} className='bgc-container'>\n                    <table className='data-table' style={{width: '100%'}}>\n                        <thead >\n                            <tr>\n                                <th>Name</th>\n                                <th>Pace</th>\n                                <th>Ave Pace</th>\n                                <th>Distance</th>\n                                <th>Stroke Rate</th>\n                                <th>Elapsed Time</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {activities.map((ac, index) => (\n                                <tr \n                                    key={index} \n                                    style={{\n                                        borderLeft: ac.uid == currentUser.uid ? '3px solid var(--tint-color)' : 'none'\n                                    }}\n                                    onClick={() => handleClickActivity(ac._id)}\n                                >\n                                    <td>{ac.name}</td>\n                                    <td>{moment.duration(ac.currentPace, 'seconds').format('hh:mm:ss')}</td>\n                                    <td>{moment.duration(ac.averagePace, 'seconds').format('hh:mm:ss')}</td>\n                                    <td>{ac.distance.toFixed()}</td>\n                                    <td>{ac.strokeRate}</td>\n                                    <td>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                                </tr>\n                            ))}\n                            {!activities.length &&\n                                <tr>\n                                    <td>No activities in progress</td>\n                                </tr>\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                \n            </div>\n        </div>\n        \n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Screen.js",["304"],"import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport 'moment-duration-format'\nimport './c2screen.css'\n\n\n\n\nexport default function C2Screen(props) {\n    const [activity, setActivity] = useState(props.activity)\n\n    const thinBorder='1px solid #211a3d'\n    const border='2px solid #211a3d'\n    const thickBorder='5px solid #211a3d'\n\n    useEffect(() => {\n        setActivity(props.activity)\n    }, [props.activity])\n\n    return (\n        <div style={{...props.style, border: '5px solid var(--bc)', borderRadius: '5px', overflow: 'hidden'}}>\n            <div \n                style={{ textAlign: 'left', backgroundColor: 'var(--bc)' }}\n                className='screen-outer d-flex jc-space-between ai-center'\n            >\n                <p style={{paddingLeft: '15px'}}>\n                    {activity.name}\n                </p>\n                <button onClick={props.handleClickClose} className='clear-btn-cancel' style={{color: 'var(--color-tertiary)'}}>x</button>\n            </div>\n\n            <div className='c2screen' style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(3, 1fr)',\n                border: '1px solid var(--bc)'\n            }}>\n                <h5 style={{gridColumn: '1/3', borderRight: border}} className='medium'>\n                    {moment.duration(activity.elapsedTime, 'seconds').format('hh:mm:ss')}\n                </h5>\n                <h5 className='medium'>\n                    {activity.strokeRate} <h5 className='small'> s/m</h5>\n                </h5>\n                <h5 className='big' style={{gridColumn: '1/4', borderBottom: border, borderTop: border}}>\n                    {moment.duration(activity.currentPace, 'seconds').format('hh:mm:ss')} \n                    <h5 className='small' style={{display: 'inline'}}>\n                        /500m \n                    </h5>\n                </h5>\n                <h5 className='medium' style={{gridColumn: '1/3', borderRight: border}}>\n                    {activity.distance.toFixed()} <h5 className='small' style={{display: 'inline'}}> m</h5>\n                </h5>\n                <h5 className='medium' style={{gridColumn: '1/4', borderTop: thickBorder}}>\n                    {moment.duration(activity.averagePace, 'seconds').format('hh:mm:ss')}\n                    <h5 className='small' style={{display: 'inline'}}>\n                        ave /500m\n                    </h5>\n                </h5>\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/main.js",["305","306","307"],"import {pm5fields, pm5printables} from './pm5-printables'\nimport {PM5} from './pm5'\nlet m;\n\nexport let cbConnecting = function() {\n    console.log('connecting')\n};\n\nexport let cbConnected = function() {\n    console.log('did connect')\n\n    m.getMonitorInformation()\n        .then(monitorInformation => {\n            console.log(\n                'FW: ' + monitorInformation.firmwareRevision + ' | ' +\n                'HW: ' + monitorInformation.hardwareRevision + ' | ' +\n                'MNF: '+ monitorInformation.manufacturerName + ' | ' +\n                'SN: ' + monitorInformation.serialNumber\n            )\n        })\n        .catch(error => {\n            console.log(error)\n        });\n\n};\n\nexport let cbDisconnected = function() {\n    console.log('did disconnect')\n};\n\nexport let cbMessage = function(m) {\n    console.log(m.data)\n\n    /* iterate data elements and create / update value */\n    for (let k in m.data) {\n        if (m.data.hasOwnProperty(k)) {\n            /*\n            let selector = '#' + m.type + ' span.' + k;\n            let s = document.querySelector(selector);\n            \n           \n            if (!s) {\n                let p = document.createElement('div');     \n\n                let desc = document.createElement('span');\n                desc.className = 'element';\n                desc.textContent = pm5fields[k].label;\n\n                s = document.createElement('span');     \n                s.className = 'value ' + k;\n\n                p.appendChild(desc);                  \n                p.appendChild(s);                      \n                div.appendChild(p);                       \n\n            }\n            s.textContent = pm5fields[k].printable(m.data[k]);\n            */\n        }\n    }\n};\n\n/*\ndocument.addEventListener('DOMContentLoaded', function(e) {\n    m = new PM5(cbConnecting,\n        cbConnected,\n        cbDisconnected,\n        cbMessage);\n\n    document.querySelector('#connect').addEventListener('click', function() {\n        if (!navigator.bluetooth) {\n            alert('Web Bluetooth is not supported! You need a browser and ' +\n                'platform that supports Web Bluetooth to use this application.');\n        }\n\n        if (m.connected()) {\n            m.doDisconnect();\n        } else {\n            m.doConnect();\n        }\n    });\n\n    document.querySelector('#toggle-instructions').addEventListener('click', function() {\n        let e = document.querySelector('#instruction-text');\n        let button_text = 'Show instructions';\n\n        toggleClass(e, 'hidden');\n        if (!e.classList.contains('hidden')) {\n            button_text = 'Hide instructions';\n        }\n\n        document.querySelector('#toggle-instructions').innerText = button_text;\n    });\n});\n*/",["308","309"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"/*\n * Minimal usage:\n *\n *  function cb_connecting() {\n *       // stuff to do while browser is connecting to PM5\n *  }\n *\n *  function cb_connected() {\n *       // do this when browser connects to PM5\n *  }\n *\n *  function cb_disconnected() {\n *      // stuff to do when disconnected from PM5\n *  }\n *\n *  function cb_message(m) {\n *      // message received here.\n *  }\n *\n *  m = new PM5(cb_connecting, cb_connected, cb_disconnected, cb_message);\n *\n *  // Chrome connections to Bluetooth devices can only occur\n *  // on user gesture (https://webbluetoothcg.github.io/web-bluetooth/#ua-bluetooth-address).\n *  document.querySelector('#connect').addEventListener('click', function() {\n *      if (m.connected()) {\n *          m.doDisconnect();\n *      } else {\n *          m.doConnect();\n *      }\n *  });\n */\n\n/*\n * From https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nvar EventTarget = function() {\n    this.listeners = {};\n};\n\nEventTarget.prototype.listeners = null;\nEventTarget.prototype.addEventListener = function(type, callback) {\n    if (!(type in this.listeners)) {\n        this.listeners[type] = [];\n    }\n    this.listeners[type].push(callback);\n};\n\nEventTarget.prototype.removeEventListener = function(type, callback) {\n    if (!(type in this.listeners)) {\n        return;\n    }\n    var stack = this.listeners[type];\n    for (var i = 0, l = stack.length; i < l; i++) {\n        if (stack[i] === callback){\n            stack.splice(i, 1);\n            return;\n        }\n    }\n};\n\nEventTarget.prototype.dispatchEvent = function(event) {\n    if (!(event.type in this.listeners)) {\n        return true;\n    }\n    var stack = this.listeners[event.type].slice();\n\n    for (var i = 0, l = stack.length; i < l; i++) {\n        stack[i].call(this, event);\n    }\n    return !event.defaultPrevented;\n};\n\n/*\n * From the Concept2 Performance Monitor Bluetooth Smart Communications\n * Interface Definition spec, v1.25, 8/29/17 11:19AM.\n *\n * Verify discovered services:\n * - https://googlechrome.github.io/samples/web-bluetooth/discover-services-and-characteristics.html\n *\n * Inspired from https://github.com/GoogleChromeLabs/rowing-monitor\n */\nconst services = {\n    discovery:      { id: 'ce060000-43e5-11e4-916c-0800200c9a66' },\n    information:    { id: 'ce060010-43e5-11e4-916c-0800200c9a66' },\n    control:        { id: 'ce060020-43e5-11e4-916c-0800200c9a66' },\n    rowing:         { id: 'ce060030-43e5-11e4-916c-0800200c9a66' }\n};\nconst characteristics = {\n    informationService: {\n        serialNumber: {\n            id:         'ce060012-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        hardwareRevision: {\n            id:         'ce060013-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        firmwareRevision: {\n            id:         'ce060014-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        manufacturerName: {\n            id:         'ce060015-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        }\n    },\n    controlService: {\n        transmit: {\n            id:         'ce060021-43e5-11e4-916c-0800200c9a66',\n            service:    services.control\n        },\n        receive: {\n            id:         'ce060022-43e5-11e4-916c-0800200c9a66',\n            service:    services.control\n        }\n    },\n    rowingService: {\n        generalStatus: {\n            id:         'ce060031-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStatus: {\n            id:         'ce060032-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStatus2: {\n            id:         'ce060033-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        generalStatusRate: {\n            id:         'ce060034-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        strokeData: {\n            id:         'ce060035-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStrokeData: {\n            id:         'ce060036-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        splitIntervalData: {\n            id:         'ce060037-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalSplitIntervalData: {\n            id:         'ce060038-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        endOfWorkoutSummaryData: {\n            id:         'ce060039-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalEndOfWorkoutSummaryData: {\n            id:         'ce06003a-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        heartRateBeltInformation: {\n            id:         'ce06003b-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalEndOfWorkoutSummaryData2: {\n            id:         'ce06003c-43e5-11e4-916c-0800200c9a66', /* multiplexed only */\n            service:    services.rowing\n        },\n        forceCurveData: {\n            id:         'ce06003d-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        multiplexedInformation: {\n            id:         'ce060080-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        }\n    }\n};\n\nexport class PM5 {\n    /*\n     */\n    constructor(cb_connecting, cb_connected, cb_disconnected, cb_message) {\n        this.idObjectMap = new Map();\n        this.eventTarget = new EventTarget();\n\n        this.cb_connecting = cb_connecting;\n        this.cb_connected = cb_connected;\n        this.cb_disconnected = cb_disconnected;\n        this.cb_message = cb_message;\n    }\n\n    /*\n     */\n    doConnect() {\n        this.connect()\n        .then(() => {\n            this.cb_connecting();\n            return this.addEventListener('multiplexed-information', this.cb_message)\n        })\n        .then(() => {\n            return this.addEventListener('disconnect', this.cb_disconnected);\n        })\n        .then(() => {\n            this.cb_connected();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    /*\n     */\n    doDisconnect() {\n        this.removeEventListener('multiplexed-information', this.cb_message)\n        .then(() => {\n            this.disconnect();\n            this.removeEventListener('multiplexed-information', this.cb_message)\n        })\n        .then(() => {\n            return this.removeEventListener('disconnect', this.cb_disconnected);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    /*\n     */\n    addEventListener(type, callback) {\n        this.eventTarget.addEventListener(type, callback);\n        switch (type) {\n            case 'general-status':\n                return this._addGeneralStatusListener();\n                break;\n\n            case 'workout-end':\n                return this._addWorkoutEndListener();\n                break;\n\n            case 'multiplexed-information':\n                return this._addMultiplexedInformationListener();\n                break;\n\n            case 'additional-status':\n                return this._addAdditionalStatus();\n                break;\n\n            case 'additional-status2':\n                return this._addAdditionalStatus2();\n                break;\n\n            case 'stroke-data':\n                return this._addStrokeData();\n                break;\n\n            case 'additional-stroke-data':\n                return this._addAdditionalStrokeData();\n                break;\n\n            case 'split-interval-data':\n                return this._addSplitIntervalData();\n                break;\n\n            case 'additional-split-interval-data':\n                return this._addAdditionalSplitIntervalData();\n                break;\n\n            case 'force-curve-data':\n                /*\n                 * XXX We get this back:\n                 *\n                 *   NotFoundError: No Characteristics matching UUID\n                 *   ce06003d-43e5-11e4-916c-0800200c9a66 found in\n                 *   Service with UUID ce060030-43e5-11e4-916c-0800200c9a66.\n                 *\n                 * It _looks_ like this characteristic doesn't appear\n                 * in this service as per the spec. Have to get in touch\n                 * with Concept2 to see if this is the case, and what\n                 * service we need to associate this characteristic with.\n                 */\n                // return this._addForceCurveData();\n                break;\n\n            case 'additional-workout-end':\n                return this._addAdditionalEndOfWorkoutSummaryData();\n                break;\n\n            case 'heart-rate-belt-information':\n                return this._addHeartRateBeltInformation();\n                break;\n\n            case 'additional-workout-end2':\n                return this._addAdditionalEndOfWorkoutSummaryData2();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /*\n     */\n    removeEventListener(type, callback) {\n        this.eventTarget.removeEventListener(type, callback);\n\n        /*\n         * We can only modify characteristics if we are connected.\n         */\n        if (!this.connected()) {\n            return Promise.resolve();\n        }\n\n        switch (type) {\n            case 'general-status':\n                return this._removeGeneralStatusListener();\n                break;\n\n            case 'workout-end':\n                return this._removeWorkoutEndListener();\n                break;\n\n            case 'multiplexed-information':\n                return this._removeMultiplexedInformationListener();\n                break;\n\n            case 'additional-status':\n                return this._removeAdditionalStatus();\n                break;\n\n            case 'additional-status2':\n                return this._removeAdditionalStatus2();\n                break;\n\n            case 'stroke-data':\n                return this._removeStrokeData();\n                break;\n\n            case 'additional-stroke-data':\n                return this._removeAdditionalStrokeData();\n                break;\n\n            case 'split-interval-data':\n                return this._removeSplitIntervalData();\n                break;\n\n            case 'additional-split-interval-data':\n                return this._removeAdditionalSplitIntervalData();\n                break;\n\n            case 'force-curve-data':\n                return this._removeForceCurveData();\n                break;\n\n            case 'additional-workout-end':\n                return this._removeAdditionalEndOfWorkoutSummaryData();\n                break;\n\n            case 'heart-rate-belt-information':\n                return this._removeHeartRateBeltInformation();\n                break;\n\n            case 'additional-workout-end2':\n                return this._removeAdditionalEndOfWorkoutSummaryData2();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /*\n     */\n    connect() {\n        if (!navigator.bluetooth) {\n            return Promise.reject('Bluetooth not available');\n        }\n\n        return navigator.bluetooth.requestDevice({\n            filters: [{\n                services: [\n                    services.discovery.id\n                ]\n            }],\n            optionalServices: [\n                services.information.id,\n                services.control.id,\n                services.rowing.id\n            ]\n        })\n        .then(device => {\n            this.device = device;\n            this.device.addEventListener('gattserverdisconnected', _gattDisconnect => {\n                console.log('gattserverdisconnected');\n                this.device.removeEventListener('gattserverdisconnected', _gattDisconnect);\n                this.idObjectMap.clear();\n                this.eventTarget.dispatchEvent({ type: 'disconnect'});\n            });\n            return device.gatt.connect();\n        })\n        .then(server => {\n            this.server = server;\n            return Promise.resolve();\n        })\n        .catch(error => {\n            console.log(error);\n            return Promise.reject(error);\n        });\n    }\n\n    /*\n     */\n    disconnect() {\n        if (!this.connected()) {\n            console.log(\"disconnect: wasn't connected\");\n            return;\n        }\n        this.device.gatt.disconnect();\n    }\n\n    /*\n     */\n    connected() {\n        return this.device && this.device.gatt && this.device.gatt.connected;\n    }\n\n    /*\n     */\n    _getService(service) {\n        const serviceObject = this.idObjectMap.get(service.id);\n\n        if (serviceObject) {\n            return Promise.resolve(serviceObject);\n        }\n\n        return this.server.getPrimaryService(service.id)\n            .then(s => {\n                this.idObjectMap.set(service.id, s);\n                return Promise.resolve(s);\n            })\n            .catch(error => {\n                console.log('getPrimaryService(' + service.id + ')');\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     * 0x003d is not multiplexed.\n     */\n    _cbForceCurveData(monitor, e) {\n        const v = new Uint8Array(e.target.value.buffer);\n        const numCharacteristics = (v[0] >> 4) & 0x0f;\n        const numDataPoints = v[0] & 0x0f;\n        const sequenceNumber = v[1];\n        let data = [];\n\n        for (let i = 2; i <= numDataPoints*2; i += 2) {\n            data.push(v[i] + (v[i+1] << 8));\n        }\n\n        const event = {\n            type: 'force-curve-data',\n            source: monitor,\n            raw: e.target.value,\n            data: {\n                numCharacteristics: numCharacteristics,\n                numDataPoints: numDataPoints,\n                sequeneNumber: sequenceNumber,\n                data: data\n            }\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * distance             = N/A\n     * workoutType          = CSAFE_PM_GET_WORKOUTTYPE\n     * intervalType         = CSAFE_PM_GET_INTERVALTYPE\n     * workoutState         = CSAFE_PM_GET_WORKOUTSTATE\n     * rowingState          = CSAFE_PM_GET_ROWINGSTATE\n     * strokeState          = CSAFE_PM_GET_STROKESTATE\n     * totalWorkDistance    = CSAFE_PM_GET_WORKDISTANCE\n     * workoutDuration      = CSAFE_PM_GET_WORKOUTDURATION\n     * workoutDurationType  = CSAFE_PM_GET_WORKOUTDURATION\n     * dragFactor           = CSAFE_PM_GET_DRAGFACTOR\n     */\n    _extractGeneralStatus(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        let data = {\n            elapsedTime:        (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            distance:           (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1,\n            workoutType:        v[o+6],\n            intervalType:       v[o+7],\n            workoutState:       v[o+8],\n            rowingState:        v[o+9],\n            strokeState:        v[o+10],\n            totalWorkDistance:  (v[o+11] + (v[o+12] << 8) + (v[o+13] << 16)),\n            workoutDuration:    (v[o+14] + (v[o+15] << 8) + (v[o+16] << 16)),\n            workoutDurationType:v[o+17],\n            dragFactor:         v[o+18]\n        };\n\n        /*\n         * C2 BT CID: page 11, 0x0031 characteristic\n         * \"Workout Duration Lo (if time, 0.01 sec lsb)\"\n         *\n         * enum DurationTypes {\n         *      CSAFE_TIME_DURATION = 0,\n         *      CSAFE_CALORIES_DURATION = 0x40,\n         *      CSAFE_DISTANCE_DURATION = 0x80,\n         *      CSAFE_WATTS_DURATION = 0xc0\n         * }\n         */\n        if (data.workoutDurationType == 0x0) {\n            data.workoutDuration *= 0.01;\n        }\n\n        return data;\n    }\n\n    /*\n     */\n    _cbGeneralStatus(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'general-status',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractGeneralStatus(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime      = N/A\n     * speed            = CSAFE_GETSPEED\n     * strokeRate       = CSAFE_PM_GET_STROKESTATE\n     * heartRate        = CSAFE_PM_GET_AVG_HEARTRATE\n     * currentPace      = N/A\n     * averagePace      = CSAFE_PM_GET_TOTAL_AVG_500MPACE\n     * restDistance     = CSAFE_PM_GET_RESTDISTANCE\n     * restTime         = CSAFE_PM_GET_RESTTIME\n     */\n    _extractAdditionalStatus(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {\n            elapsedTime:        (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            speed:              (v[o+3] + (v[o+4] << 8)) * 0.001,\n            strokeRate:         v[o+5],\n            heartRate:          v[o+6],\n            currentPace:        (v[o+7] + (v[o+8] << 8)) * 0.01,\n            averagePace:        (v[o+9] + (v[o+10] << 8)) * 0.01,\n            restDistance:       (v[o+11] + (v[o+12] << 8)),\n            restTime:           (v[o+13] + (v[o+14] << 8) + (v[o+15] << 16)) * 0.01\n        };\n\n        if (multiplexed) {\n            r.averagePower = v[o+16] + (v[o+17] << 8);\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStatus(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-status',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStatus(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * intervalCount        = CSAFE_PM_GET_WORKOUTINTERVALCOUNT\n     * averagePower         = CSAFE_PM_GET_TOTAL_AVG_POWER\n     * totalCalories        = CSAFE_PM_GET_TOTAL_AVG_CALORIES\n     * splitAveragePace     = CSAFE_PM_GET_SPLIT_AVG_500MPACE\n     * splitAveragePower    = CSAFE_PM_GET_SPLIT_AVG_POWER\n     * splitAverageCalories = CSAFE_PM_GET_SPLIT_AVG_CALORIES\n     * lastSplitTime        = CSAFE_PM_GET_LAST_SPLITTIME\n     * lastSplitDistance    = CSAFE_PM_GET_LAST_SPLITDISTANCE\n     */\n    _extractAdditionalStatus2(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.intervalCount =         v[o+3];\n            r.totalCalories =         (v[o+4] + (v[o+5] << 8));\n            r.splitAveragePace =      (v[o+6] + (v[o+7] << 8)) * 0.01;\n            r.splitAveragePower =     (v[o+8] + (v[o+9] << 8));\n            r.splitAverageCalories =  (v[o+10] + (v[o+11] << 8));\n            r.lastSplitTime =         (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n            r.lastSplitDistance =     (v[o+15] + (v[o+16] << 8) + (v[o+17] << 16));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.intervalCount =         v[o+3];\n            r.averagePower =          (v[o+4] + (v[o+5] << 8));\n            r.totalCalories =         (v[o+6] + (v[o+7] << 8));\n            r.splitAveragePace =      (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.splitAveragePower =     (v[o+10] + (v[o+11] << 8));\n            r.splitAverageCalories =  (v[o+12] + (v[o+13] << 8));\n            r.lastSplitTime =         (v[o+14] + (v[o+15] << 8) + (v[o+16] << 16));\n            r.lastSplitDistance =     (v[o+17] + (v[o+18] << 8) + (v[o+19] << 16));\n        };\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStatus2(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-status2',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStatus2(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * distance             = N/A\n     * driveLength          = CSAFE_PM_GET_STROKESTATS\n     * driveTime            = CSAFE_PM_GET_STROKESTATS\n     * strokeRecoveryTime   = CSAFE_PM_GET_STROKESTATS\n     * strokeDistance       = CSAFE_PM_GET_STROKESTATS\n     * peakDriveForce       = CSAFE_PM_GET_STROKESTATS\n     * averageDriveForce    = CSAFE_PM_GET_STROKESTATS\n     * workPerStroke        = CSAFE_PM_GET_STROKESTATS\n     * strokeCount          = CSAFE_PM_GET_STROKESTATS\n     */\n    _extractStrokeData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.distance =              (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1;\n            r.driveLength =           v[o+6] * 0.01;\n            r.driveTime =             v[o+7] * 0.01;\n            r.strokeRecoveryTime =    (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.strokeDistance =        (v[o+10] + (v[o+11] << 8)) * 0.01;\n            r.peakDriveForce =        (v[o+12] + (v[o+13] << 8)) * 0.1;   /* XXX pounds */\n            r.averageDriveForce =     (v[o+14] + (v[o+15] << 8)) * 0.1;   /* XXX pounds */\n            r.strokeCount =           (v[o+16] + (v[o+17] << 8));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.distance =              (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1;\n            r.driveLength =           v[o+6] * 0.01;\n            r.driveTime =             v[o+7] * 0.01;\n            r.strokeRecoveryTime =    (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.strokeDistance =        (v[o+10] + (v[o+11] << 8)) * 0.01;\n            r.peakDriveForce =        (v[o+12] + (v[o+13] << 8)) * 0.1;   /* XXX pounds */\n            r.averageDriveForce =     (v[o+14] + (v[o+15] << 8)) * 0.1;   /* XXX pounds */\n            r.workPerStroke =         (v[o+16] + (v[o+17] << 8));\n            r.strokeCount =           (v[o+18] + (v[o+19] << 8));\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbStrokeData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'stroke-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractStrokeData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime              = N/A\n     * strokePower              = CSAFE_PM_GET_STROKE_POWER\n     * strokeCalories           = CSAFE_PM_GET_STROKE_CALORICBURNRATE\n     * strokeCount              = CSAFE_PM_GET_STROKESTATS\n     * projectedWorkTime        = N/A\n     * projectedWorkDistance    = N/A\n     * workPerStroke            = N/A\n     */\n    _extractAdditionalStrokeData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.strokePower =           (v[o+3] + (v[o+4] << 8));\n            r.strokeCalories =        (v[o+5] + (v[o+6] << 8));\n            r.strokeCount =           (v[o+7] + (v[o+8] << 8));\n            r.projectedWorkTime =     (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16));\n            r.projectedWorkDistance = (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n            r.workPerStroke =         (v[o+15] + (v[o+16] << 8));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.strokePower =           (v[o+3] + (v[o+4] << 8));\n            r.strokeCalories =        (v[o+5] + (v[o+6] << 8));\n            r.strokeCount =           (v[o+7] + (v[o+8] << 8));\n            r.projectedWorkTime =     (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16));\n            r.projectedWorkDistance = (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStrokeData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-stroke-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStrokeData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime              = N/A\n     * distance                 = N/A\n     * splitIntervalTime        = N/A\n     * splitIntervalDistance    = N/A\n     * intervalRestTime         = N/A\n     * intervalRestDistance     = N/A\n     * splitIntervalType        = N/A\n     * splitIntervalNumber      = N/A\n     */\n    _extractSplitIntervalData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        return {\n            elapsedTime:            (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            distance:               (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1,\n            splitIntervalTime:      (v[o+6] + (v[o+7] << 8) + (v[o+8] << 16)) * 0.1,\n            splitIntervalDistance:  (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16)),\n            intervalRestTime:       v[o+12] + (v[o+13] << 8),\n            intervalRestDistance:   v[o+14] + (v[o+15] << 8),\n            splitIntervalType:      v[o+16],\n            splitIntervalNumber:    v[o+17]\n        };\n    }\n\n    /*\n     */\n    _cbSplitIntervalData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'split-interval-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractSplitIntervalData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime                      = N/A\n     * splitIntervalAverageStrokeRate   = N/A\n     * splitIntervalWorkHeartrate       = N/A\n     * splitIntervalRestHeartRate       = N/A\n     * splitIntervalAveragePace         = N/A\n     * splitIntervalTotalCalories       = N/A\n     * splitIntervalAverageCalories     = N/A\n     * splitIntervalSpeed               = N/A\n     * splitIntervalPower               = N/A\n     * splitAverageDragFactor           = N/A\n     * splitIntervalNumber              = N/A\n     */\n    _extractAdditionalSplitIntervalData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        return {\n            elapsedTime:                    (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            splitIntervalAverageStrokeRate: v[o+3],\n            splitIntervalWorkHeartrate:     v[o+4],\n            splitIntervalRestHeartRate:     v[o+5],\n            splitIntervalAveragePace:       (v[o+6] + (v[o+7] << 8)) * 0.1,\n            splitIntervalTotalCalories:     (v[o+8] + (v[o+9] << 8)),\n            splitIntervalAverageCalories:   (v[o+10] + (v[o+11] << 8)),\n            splitIntervalSpeed:             (v[o+12] + (v[o+13] << 8)) * 0.001,\n            splitIntervalPower:             (v[o+14] + (v[o+15] << 8)),\n            splitAverageDragFactor:         v[o+16],\n            splitIntervalNumber:            v[o+17]\n        };\n    }\n\n    /*\n     */\n    _cbAdditionalSplitIntervalData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-split-interval-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalSplitIntervalData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * logEntryDate         = N/A\n     * logEntryTime         = N/A\n     * timeElapsed          = N/A\n     * distance             = N/A\n     * avgStrokeRate        = N/A\n     * endingHeartRate      = N/A\n     * averageHeartRate     = N/A\n     * minHeartRate         = N/A\n     * maxHeartRate         = N/A\n     * dragFactorAverage    = N/A\n     * recoveryHeartRate    = N/A\n     * workoutType          = N/A\n     * averagePace          = N/A\n     */\n    _extractEndOfWorkoutSummary(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =      (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =      (v[o+2] + (v[o+3] << 8));\n        r.timeElapsed =       (v[o+4] + (v[o+5] << 8) + (v[o+6] << 16)) * 0.01;\n        r.distance =          (v[o+7] + (v[o+8] << 8) + (v[o+9] << 16)) * 0.1;\n        r.avgStrokeRate =     v[o+10];\n        r.endingHeartRate =   v[o+11];\n        r.averageHeartRate =  v[o+12];\n        r.minHeartRate =      v[o+13];\n        r.maxHeartRate =      v[o+14];\n        r.dragFactorAverage = v[o+15];\n        r.recoveryHeartRate = v[o+16];\n        r.workoutType =       v[o+17];\n\n        if (!multiplexed) {\n            r.averagePace = (v[o+18] + (v[o+19] << 8)) * 0.1;\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbEndOfWorkoutSummaryData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'workout-end',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractEndOfWorkoutSummary(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractAdditionalEndOfWorkoutSummary(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =        (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =        (v[o+2] + (v[o+3] << 8));\n\n        if (!multiplexed) {\n            r.splitIntervalType =   v[o+4];\n        }\n\n        r.splitIntervalSize =   (v[o+5] + (v[o+6] << 8));\n        r.splitIntervalCount =  v[o+7];\n        r.totalCalories =       (v[o+8] + (v[o+9] << 8));\n        r.watts =               (v[o+10] + (v[o+11] << 8));\n        r.totalRestDistance =   (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n        r.intervalRestTime =    (v[o+15] + (v[o+16] << 8));\n        r.averageCalories =     (v[o+17] + (v[o+18] << 8));\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalEndOfWorkoutSummaryData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-workout-end',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalEndOfWorkoutSummary(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractHeartRateBeltInformation(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.manufacturerId =  v[o+0];\n        r.deviceType =      v[o+1];\n        r.beltId =          v[o+2] + (v[o+3] << 8) + (v[o+4] << 16) + (v[o+5] << 24);\n\n        return r;\n    }\n\n    /*\n     */\n    _cbHeartRateBeltInformation(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'heart-rate-belt-information',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractHeartRateBeltInformation(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractAdditionalEndOfWorkoutSummaryData2(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =      (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =      (v[o+2] + (v[o+3] << 8));\n        r.averagePace =       (v[o+4] + (v[o+5] << 8));\n        r.gameIdentifierWorkoutVerified = v[o+6];\n        r.gameScore =         (v[o+7] + (v[o+8] << 8));\n        r.ergMachineType =    v[o+9];\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalEndOfWorkoutSummaryData2(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-workout-end2',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalEndOfWorkoutSummaryData2(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _cbMultiplexedInformation(monitor, e) {\n        const characteristic = e.target.value.getUint8();\n\n        /* XXX make this a jump table */\n        switch (characteristic) {\n            case 0x31: monitor._cbGeneralStatus(monitor, e, true); break;\n            case 0x32: monitor._cbAdditionalStatus(monitor, e, true); break;\n            case 0x33: monitor._cbAdditionalStatus2(monitor, e, true); break;\n            case 0x35: monitor._cbStrokeData(monitor, e, true); break;\n            case 0x36: monitor._cbAdditionalStrokeData(monitor, e, true); break;\n            case 0x37: monitor._cbSplitIntervalData(monitor, e, true); break;\n            case 0x38: monitor._cbAdditionalSplitIntervalData(monitor, e, true); break;\n            case 0x39: monitor._cbEndOfWorkoutSummaryData(monitor, e, true); break;\n            case 0x3a: monitor._cbAdditionalEndOfWorkoutSummaryData(monitor, e, true); break;\n            case 0x3b: monitor._cbHeartRateBeltInformation(monitor, e, true); break;\n            case 0x3c: monitor._cbAdditionalEndOfWorkoutSummaryData2(monitor, e, true); break;\n            default:\n                console.log('unhandled characteristic ' + characteristic.toString(16));\n                break;\n        }\n    }\n\n    /*\n     */\n    _getCharacteristic(characteristic) {\n        const characteristicObject = this.idObjectMap.get(characteristic.id);\n\n        if (characteristicObject) {\n            return Promise.resolve(characteristicObject);\n        }\n\n        return this._getService(characteristic.service)\n            .then(service => {\n                return service.getCharacteristic(characteristic.id);\n            })\n            .then(c => {\n                this.idObjectMap.set(characteristic.id, c);\n                return Promise.resolve(c);\n            })\n            .catch(error => {\n                console.log('getCharacteristic(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _setupCharacteristicValueListener(characteristic, callback) {\n        const monitor = this;\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.startNotifications();\n            })\n            .then(c => {\n                c.addEventListener('characteristicvaluechanged', e => {\n                    callback(monitor, e);\n                });\n                return Promise.resolve();\n            })\n            .catch(error => {\n                console.log('_setupCharacteristicValueListener(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _teardownCharacteristicValueListener(characteristic, callback) {\n        const monitor = this;\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.stopNotifications();\n            })\n            .then(c => {\n                c.removeEventListener('characteristicvaluechanged', e => {\n                    callback(monitor, e);\n                });\n                return Promise.resolve();\n            })\n            .catch(error => {\n                console.log('_teardownCharacteristicValueListener(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _addWorkoutEndListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.endOfWorkoutSummaryData, this._cbEndOfWorkoutSummaryData\n        );\n    }\n\n    /*\n     */\n    _removeWorkoutEndListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.endOfWorkoutSummaryData, this._cbEndOfWorkoutSummaryData\n        );\n    }\n\n    /*\n     */\n    _addGeneralStatusListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.generalStatus, this._cbGeneralStatus\n        );\n    }\n\n    /*\n     */\n    _removeGeneralStatusListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.generalStatus, this._cbGeneralStatus\n        );\n    }\n\n    /*\n     */\n    _addMultiplexedInformationListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.multiplexedInformation, this._cbMultiplexedInformation\n        );\n    }\n\n    /*\n     */\n    _removeMultiplexedInformationListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.multiplexedInformation, this._cbMultiplexedInformation\n        );\n    }\n\n    _addAdditionalStatus() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus, this._cbAdditionalStatus\n        );\n    }\n\n    _removeAdditionalStatus() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus, this._cbAdditionalStatus\n        );\n    }\n\n    _addAdditionalStatus2() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus2, this._cbAdditionalStatus2\n        );\n    }\n\n    _removeAdditionalStatus2() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus2, this._cbAdditionalStatus2\n        );\n    }\n\n    _addStrokeData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.strokeData, this._cbStrokeData\n        );\n    }\n\n    _removeStrokeData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.strokeData, this._cbStrokeData\n        );\n    }\n\n    _addAdditionalStrokeData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStrokeData, this._cbAdditionalStrokeData\n        );\n    }\n\n    _removeAdditionalStrokeData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStrokeData, this._cbAdditionalStrokeData\n        );\n    }\n\n    _addSplitIntervalData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.splitIntervalData, this._cbSplitIntervalData\n        );\n    }\n\n    _removeSplitIntervalData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.splitIntervalData, this._cbSplitIntervalData\n        );\n    }\n\n    _addAdditionalSplitIntervalData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalSplitIntervalData, this._cbAdditionalSplitIntervalData\n        );\n    }\n\n    _removeAdditionalSplitIntervalData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalSplitIntervalData, this._cbAdditionalSplitIntervalData\n        );\n    }\n\n    _addForceCurveData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbForceCurveData\n        );\n    }\n\n    _removeForceCurveData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbForceCurveData\n        );\n    }\n\n    _addAdditionalEndOfWorkoutSummaryData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData\n        );\n    }\n\n    _removeAdditionalEndOfWorkoutSummaryData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData\n        );\n    }\n\n    _addHeartRateBeltInformation() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbHeartRateBeltInformation\n        );\n    }\n\n    _removeHeartRateBeltInformation() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbHeartRateBeltInformation\n        );\n    }\n\n\n    _addAdditionalEndOfWorkoutSummaryData2() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData2\n        );\n    }\n\n    _removeAdditionalEndOfWorkoutSummaryData2() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData2\n        );\n    }\n\n    /*\n     */\n    _getStringCharacteristicValue(characteristic) {\n        const decoder = new TextDecoder('utf-8');\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.readValue()\n            })\n            .then(v => {\n                return decoder.decode(v);\n            });\n    }\n\n    /*\n     */\n    getSerialNumber() {\n        return this._getStringCharacteristicValue(characteristics.informationService.serialNumber);\n    }\n\n    /*\n     */\n    getHardwareRevision() {\n        return this._getStringCharacteristicValue(characteristics.informationService.hardwareRevision);\n    }\n\n    /*\n     */\n    getFirmwareRevision() {\n        return this._getStringCharacteristicValue(characteristics.informationService.firmwareRevision);\n    }\n\n    /*\n     */\n    getManufacturerName() {\n        return this._getStringCharacteristicValue(characteristics.informationService.manufacturerName);\n    }\n\n    /*\n     */\n    getMonitorInformation() {\n        const monitorInformation = {};\n\n        return this.getSerialNumber()\n            .then(serialNumber => {\n                monitorInformation.serialNumber = serialNumber;\n                return this.getHardwareRevision();\n            })\n            .then(hardwareRevision => {\n                monitorInformation.hardwareRevision = hardwareRevision;\n                return this.getFirmwareRevision();\n            })\n            .then(firmwareRevision => {\n                monitorInformation.firmwareRevision = firmwareRevision;\n                return this.getManufacturerName();\n            })\n            .then(manufacturerName => {\n                monitorInformation.manufacturerName = manufacturerName;\n                return Promise.resolve(monitorInformation);\n            })\n            .catch(error => {\n                console.log(error);\n                return Promise.reject(error);\n            });\n    }\n};\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5-printables.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"export const pm5printables = {\n    empty: function(v) {\n        return v.toString();\n    },\n    ms2hms: function(msecs) {\n        return new Date(msecs).toISOString().substr(11, 8);\n    },\n    secs2hms: function(secs) {\n        return new Date(secs * 1000).toISOString().substr(11, 10);\n    },\n    metres: function(m) {\n        return m.toLocaleString() + 'm';\n    },\n    workoutType: function(wtype) {\n        switch (wtype) {\n            case 0: return [wtype, 'Just row, no splits']; break;\n            case 1: return [wtype, 'Just row, splits']; break;\n            case 2: return [wtype, 'Fixed dist, no splits']; break;\n            case 3: return [wtype, 'Fixed dist, splits']; break;\n            case 4: return [wtype, 'Fixed time, no splits']; break;\n            case 5: return [wtype, 'Fixed time, splits']; break;\n            case 6: return [wtype, 'Fixed time, interval']; break;\n            case 7: return [wtype, 'Fixed dist, interval']; break;\n            case 8: return [wtype, 'Variable, interval']; break;\n            case 9: return [wtype, 'Variable, undef rest, interval']; break;\n            case 10: return [wtype, 'Fixed, calorie']; break;\n            case 11: return [wtype, , 'Fixed, watt-minutes']; break;\n            case 12: return [wtype, , 'Fixed cals, interval']; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    intervalType: function(itype) {\n        switch (itype) {\n            case 0: return [itype, 'Time']; break;\n            case 1: return [itype, 'Distance']; break;\n            case 2: return [itype, 'Rest']; break;\n            case 3: return [itype, 'Time, rest undefined']; break;\n            case 4: return [itype, 'Distance, rest undefined']; break;\n            case 5: return [itype, 'Rest, undefined']; break;\n            case 6: return [itype, 'Calorie']; break;\n            case 7: return [itype, 'Calorie, rest undefined']; break;\n            case 8: return [itype, 'Watt-minute']; break;\n            case 9: return [itype, 'Watt-minute, rest undefined']; break;\n            case 255: return [itype, 'None'];\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    workoutState: function(wstate) {\n        switch (wstate) {\n            case 0: return [wstate, 'Wait To Begin']; break;\n            case 1: return [wstate, 'Workout Row']; break;\n            case 2: return [wstate, 'Countdown Pause']; break;\n            case 3: return [wstate, 'Interval Rest']; break;\n            case 4: return [wstate, 'Interval Work Time']; break;\n            case 5: return [wstate, 'Interval Work Distance']; break;\n            case 6: return [wstate, 'Interval Rest End To Work Time']; break;\n            case 7: return [wstate, 'Interval Rest End To Work Distance']; break;\n            case 8: return [wstate, 'Interval Work Time To Rest']; break;\n            case 9: return [wstate, 'Interval Work Distance To Rest']; break;\n            case 10: return [wstate, 'Workout End']; break;\n            case 11: return [wstate, 'Terminate']; break;\n            case 12: return [wstate, 'Workout Logged']; break;\n            case 13: return [wstate, 'Rearm']; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    rowingState: function(rstate) {\n        switch (rstate) {\n            case 0: return 'Inactive'; break;\n            case 1: return 'Active'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    strokeState: function(sstate) {\n        switch (sstate) {\n            case 0: return 'Waiting To Reach Min Speed'; break;\n            case 1: return 'Waiting To Accelerate'; break;\n            case 2: return 'Driving'; break;\n            case 3: return 'Dwelling After Drive'; break;\n            case 4: return 'Recovery'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    workoutDuration: function(wduration) {\n        /* XXX Figure out how to handle this one */\n        /*\n         * enum DurationTypes {\n         *      CSAFE_TIME_DURATION = 0,\n         *      CSAFE_CALORIES_DURATION = 0x40,\n         *      CSAFE_DISTANCE_DURATION = 0x80,\n         *      CSAFE_WATTS_DURATION = 0xc0\n         * }\n         */\n        /*\n        if (data.workoutDurationType == 0x0) {\n            data.workoutDuration *= 0.01;\n        }\n        */\n        return wduration.toString();\n    },\n    workoutDurationType: function(wdurationtype) {\n        switch (wdurationtype) {\n            case 0: return 'Time'; break;\n            case 0x40: return 'Calories'; break;\n            case 0x80: return 'Distance'; break;\n            case 0xc0: return 'Watts'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    as_is: function(n) {\n        return n.toString();\n    },\n    fixed: function(n) {\n        return n.toFixed();\n    },\n    m_per_second: function(n) {\n        return n.toFixed() + \"m/s\";\n    },\n    heartRate: function(n) {\n        return n == 255 ? 'N/A' : n;\n    },\n    watts: function(n) {\n        return n.toFixed().toLocaleString() + 'W';\n    },\n    calories: function(n) {\n        return n.toLocaleString() + 'cals';\n    },\n    metres_fixed: function(n) {\n        return n.toFixed().toLocaleString() + 'm';\n    },\n    splitIntervalType: function(n) {\n        return n.toString();\n    },\n    logDate: function(n) {\n        let month = n & 0x0f;                   /* bits 0 to 3 */\n        let day = (n >> 4) & 0x1f;              /* bits 4 to 8 */\n        let year = 2000 + ((n >> 9) & 0x7f);    /* bits 9 to 13 (15); epoch is 2000 */\n\n        return day + \"/\" + month + \"/\" + year;\n    },\n    logTime: function(n) {\n        let h = (n >> 8) & 0xff;                /* top byte */\n        let m = n & 0xff;                       /* bottom byte */\n\n        return h + \":\" + m;\n    },\n    gameId: function(n) {\n        let game_id = n & 0x0f;\n        let workout_verified = (n >> 4) & 0x0f; /* JavaScript uses >>> for zero-fill right shift! */\n        let r = '';\n\n        switch (game_id) {\n            case 0: r = 'None '; break;\n            case 1: r = 'Fish '; break;\n            case 2: r = 'Dart '; break;\n            case 3: r = 'Target basic '; break;\n            case 4: r = 'Target advanced '; break;\n            case 5: r = 'Cross Training '; break;\n            default:\n                break;\n        }\n\n        r += '(' + (!workout_verified ? 'un' : '') + 'verified)';\n\n        return r;\n    },\n    erg_machine_type: function(n) {\n        let r = '';\n\n        switch (n) {\n            case 0: r = 'Static D'; break;\n            case 1: r = 'Static C'; break;\n            case 2: r = 'Static A'; break;\n            case 3: r = 'Static B'; break;\n            case 5: r = 'Static E'; break;\n            case 7: r = 'Static Simulator'; break;\n            case 8: r = 'Static Dynamic'; break;\n            case 16: r = 'Slides A'; break;\n            case 17: r = 'Slides B'; break;\n            case 18: r = 'Slides C'; break;\n            case 19: r = 'Slides D'; break;\n            case 20: r = 'Slides E'; break;\n            case 32: r = 'Slides Dynamic'; break;\n            case 64: r = 'Static Dyno'; break;\n            case 128: r = 'Static Ski'; break;\n            case 143: r = 'Static Ski (simulator)'; break;\n            case 192: r = 'Bike'; break;\n            case 193: r = 'Bike (arms)'; break;\n            case 194: r = 'Bike (no arms)'; break;\n            case 207: r = 'Bike (simulator)'; break;\n            case 208: r = 'Num'; break;\n            default:\n                break;\n        }\n\n        return r;\n    }\n};\n\nexport const pm5fields = {\n    elapsedTime: {\n        label: 'Elapsed Time',\n        printable: pm5printables['secs2hms']\n    },\n    distance: {\n        label: 'Distance',\n        printable: pm5printables['metres'],\n    },\n    workoutType: {\n        label: 'Workout Type',\n        printable: pm5printables['workoutType'],\n    },\n    intervalType: {\n        label: 'Interval Type',\n        printable: pm5printables['intervalType'],\n    },\n    workoutState: {\n        label: 'Workout State',\n        printable: pm5printables['workoutState'],\n    },\n    rowingState: {\n        label: 'Rowing State',\n        printable: pm5printables['rowingState'],\n    },\n    strokeState: {\n        label: 'Stroke State',\n        printable: pm5printables['strokeState'],\n    },\n    totalWorkDistance: {\n        label: 'Total Work Distance',\n        printable: pm5printables['metres'],\n    },\n    workoutDuration: {\n        label: 'Workout Duration',\n        printable: pm5printables['workoutDuration'],\n    },\n    workoutDurationType: {\n        label: 'Workout Duration Type',\n        printable: pm5printables['workoutDurationType'],\n    },\n    dragFactor: {\n        label: 'Drag Factor',\n        printable: pm5printables['as_is'],\n    },\n    speed: {\n        label: 'Speed',\n        printable: pm5printables['m_per_second'],\n    },\n    strokeRate: {\n        label: 'Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    heartRate: {\n        label: 'Heart Rate',\n        printable: pm5printables['heartRate'],\n    },\n    currentPace: {\n        label: 'Current Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    averagePace: {\n        label: 'Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    restDistance: {\n        label: 'Rest Distance',\n        printable: pm5printables['metres'],\n    },\n    restTime: {\n        label: 'Rest Time',\n        printable: pm5printables['secs2hms'],\n    },\n    intervalCount: {\n        label: 'Interval Count',\n        printable: pm5printables['as_is'],\n    },\n    averagePower: {\n        label: 'Average Power',\n        printable: pm5printables['watts'],\n    },\n    totalCalories: {\n        label: 'Total Calories',\n        printable: pm5printables['calories'],\n    },\n    splitAveragePace: {\n        label: 'Split Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    splitAveragePower: {\n        label: 'Split Average Power',\n        printable: pm5printables['watts'],\n    },\n    splitAverageCalories: {\n        label: 'Split Average Calories',\n        printable: pm5printables['calories'],\n    },\n    lastSplitTime: {\n        label: 'Last Split Time',\n        printable: pm5printables['secs2hms'],\n    },\n    lastSplitDistance: {\n        label: 'Last Split Distance',\n        printable: pm5printables['metres'],\n    },\n    driveLength: {\n        label: 'Drive Length',\n        printable: pm5printables['metres_fixed'],\n    },\n    driveTime: {\n        label: 'Drive Time',\n        printable: pm5printables['secs2hms'],\n    },\n    strokeRecoveryTime: {\n        label: 'Stroke Recovery Time',\n        printable: pm5printables['secs2hms'],\n    },\n    strokeDistance: {\n        label: 'Stroke Distance',\n        printable: pm5printables['metres_fixed'],\n    },\n    peakDriveForce: {\n        label: 'Peak Drive Force',\n        printable: pm5printables['watts'],\n    },\n    averageDriveForce: {\n        label: 'Average Drive Force',\n        printable: pm5printables['fixed'],\n    },\n    workPerStroke: {\n        label: 'Work Per Stroke',\n        printable: pm5printables['fixed'],\n    },\n    strokeCount: {\n        label: 'Stroke Count',\n        printable: pm5printables['as_is'],\n    },\n    strokePower: {\n        label: 'Stroke Power',\n        printable: pm5printables['watts'],\n    },\n    strokeCalories: {\n        label: 'Stroke Calories',\n        printable: pm5printables['calories'],\n    },\n    strokeCount: {\n        label: 'Stroke Count',\n        printable: pm5printables['as_is'],\n    },\n    projectedWorkTime: {\n        label: 'Projected Work Time',\n        printable: pm5printables['secs2hms'],\n    },\n    projectedWorkDistance: {\n        label: 'Projected Work Distance',\n        printable: pm5printables['metres'],\n    },\n    workPerStroke: {\n        label: 'Work Per Stroke',\n        printable: pm5printables['watts'],\n    },\n    splitIntervalTime: {\n        label: 'Split Interval Time',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalDistance: {\n        label: 'Split Interval Distance',\n        printable: pm5printables['metres'],\n    },\n    intervalRestTime: {\n        label: 'Interval Rest Time',\n        printable: pm5printables['secs2hms'],\n    },\n    intervalRestDistance: {\n        label: 'Interval Rest Distance',\n        printable: pm5printables['metres'],\n    },\n    splitIntervalType: {\n        label: 'Split Interval Type',\n        printable: pm5printables['splitIntervalType'],\n    },\n    splitIntervalNumber: {\n        label: 'Split Interval Number',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalAverageStrokeRate: {\n        label: 'Split Interval Average Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalWorkHeartrate: {\n        label: 'Split Interval Work Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalRestHeartRate: {\n        label: 'Split Interval Rest Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalAveragePace: {\n        label: 'Split Interval Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalTotalCalories: {\n        label: 'Split Interval Total Calories',\n        printable: pm5printables['calories'],\n    },\n    splitIntervalAverageCalories: {\n        label: 'Split Interval Average Calories',\n        printable: pm5printables['calories'],\n    },\n    splitIntervalSpeed: {\n        label: 'Split Interval Speed',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalPower: {\n        label: 'Split Interval Power',\n        printable: pm5printables['watts'],\n    },\n    splitAverageDragFactor: {\n        label: 'Split Average Drag Factor',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalNumber: {\n        label: 'Split Interval Number',\n        printable: pm5printables['as_is'],\n    },\n    logEntryDate: {\n        label: 'Log Entry Date',\n        printable: pm5printables['logDate'],\n    },\n    logEntryTime: {\n        label: 'Log Entry Time',\n        printable: pm5printables['logTime'],\n    },\n    timeElapsed: {\n        label: 'Time Elapsed',\n        printable: pm5printables['secs2hms'],\n    },\n    avgStrokeRate: {\n        label: 'Average Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    endingHeartRate: {\n        label: 'Ending Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    averageHeartRate: {\n        label: 'Average Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    minHeartRate: {\n        label: 'Min Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    maxHeartRate: {\n        label: 'Max Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    dragFactorAverage: {\n        label: 'Drag Factor Average',\n        printable: pm5printables['as_is'],\n    },\n    recoveryHeartRate: {\n        label: 'Recovery Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalSize: {\n        label: 'Split/Interval Type',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalCount: {\n        label: 'Split/Interval Count',\n        printable: pm5printables['as_is'],\n    },\n    watts: {\n        label: 'Watts',\n        printable: pm5printables['watts']\n    },\n    totalRestDistance: {\n        label: 'Total Rest Distance',\n        printable: pm5printables['metres']\n    },\n    averageCalories: {\n        label: 'Average Calories',\n        printable: pm5printables['calories']\n    },\n    gameIdentifierWorkoutVerified: {\n        label: 'Game Identifer / Workout Verified',\n        printable: pm5printables['gameId']\n    },\n    gameScore: {\n        label: 'Game score',\n        printable: pm5printables['as_is']\n    },\n    ergMachineType: {\n        label: 'Erg Machine Type',\n        printable: pm5printables['erg_machine_type']\n    }\n};\n",["390","391"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomBar.js",["392"],"import React, {useEffect, useState} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport {useTheme} from '../../contexts/ThemeContext'\n\n/*\n    - Custom Bar Chart\n    - Height -> from props\n    - width -> fill width of container\n*/\n\nexport default function CustomBar(props) {\n    const [data, setData] = useState(props.data)\n    const {isDarkMode} = useTheme()\n    const [localTheme, setLocalTheme] = useState(isDarkMode)\n\n    useEffect(() => {\n        setData(props.data)\n    }, [props])\n\n\n    // Force rerenders on color theme change\n    useEffect(() => {\n        setLocalTheme(isDarkMode)\n    }, [isDarkMode])\n\n    return (\n        <div style={{height: props.height}}>\n            <Bar\n                data={{\n                    labels: data.labels,\n                    datasets: [\n                        {\n                            label: data.label,\n                            data: data.dataset,\n                            backgroundColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.backgroundColor),\n                            borderWidth: 1,\n                            borderColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.borderColor),\n                            hoverBackgroundColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.borderColor),\n                            hoverBorderColor: getComputedStyle(document.documentElement)\n                            .getPropertyValue(data.borderColor)\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    title: {\n                        display: false,\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false,\n                                drawBorder: false\n                            },\n                            ticks: {\n                                autoSkip: false,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                maxRotation: 0,\n                                minRotation: 0,\n                                callback: function(value, index, values) {\n                                    if (index % props.labelFreq === 0 || index === values.length - 1) {\n                                        if (value.length > props.maxLabelLength) {\n                                            return value.substr(0, props.maxLabelLength)\n                                        }\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: false\n                            },\n                            ticks: {\n                                display: props.showYTicks,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                callback: function (value, index, values) {\n                                    if (index === 0 || index === values.length - 1 || index === Math.floor(values.length/2)) {\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Statistics.js",["393","394","395"],"import React, {useState, useEffect, useRef} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport Loading from '../misc/Loading'\nimport CustomBar from '../charts/CustomBar'\nimport CustomLine from '../charts/CustomLine'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Statistics() {\n    const {thisUser} = useAuth()\n\n    // general stats (top)\n    const [timeframe1, setTimeframe1] = useState(1)         // month\n    const [selectedMetric, setSelectedMetric] = useState(0) // meters\n    \n    // analysis stats (bottom)\n    const [timeframe2, setTimeframe2] = useState(1)         // month\n\n    const [stats, setStats] = useState(null)\n    const [progressStats, setProgressStats] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const [loadingSearch, setLoadingSearch] = useState(false)\n    const [distanceFilter, setDistanceFilter] = useState('10000')\n    const distanceComparatorRef = useRef()\n    const [prevQueryString, setPrevQueryString] = useState('')\n    const [prevQueryReadable, setPrevQueryReadable] = useState('')\n    const [prevQuery, setPrevQuery] = useState({\n        metric: 'Distance',\n        value: 10000,\n        comparator: '<='\n    })\n\n    const [hideFilterForm, setHideFilterForm] = useState(true)\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                let res = await api.get(`/users/${thisUser._id}/statistics-general`)\n                setStats(res.data)\n\n                const queryString = `gte=0&lte=${distanceFilter}`\n                res = await api.get(`users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQueryReadable('Distance   <=   10,000 m')\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: '<='}))\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    function plottable() {\n        return [\n            ...stats.plottable\n                [timeframes[timeframe1].key]\n                [metrics[selectedMetric].key]\n        ]\n    }\n\n    function aggregate(metricID) {\n        return stats.aggregate\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    function delta(metricID) {\n        return stats.delta\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    const metrics = {\n        0: { key: 'meters', label: 'meters', unit: 'm', graphTitle: 'Meters rowed', formatted: () => aggregate(0).toLocaleString()},\n        1: { key: 'time', label: 'seconds', unit: '', graphTitle: 'Hours rowed', \n            formatted: () => moment.duration(Math.round(aggregate(1)), 'seconds').format('h [hour]  m [min]')\n        },\n        2: { key: 'calories', label: 'calories', unit: 'cal', graphTitle: 'Calories burned', formatted: () => aggregate(2).toLocaleString()}\n    }\n\n    const timeframes = {\n        0: { key: 'week',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'week')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 1\n        },\n        1: { key: 'month',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'month')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 3\n        },\n        2: { key: 'year',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'year')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'month')) {\n                    labels.push(curr.format('MMM YYYY'))\n                    curr.add(1, 'month')\n                }\n                return labels\n            },\n            labelFreq: 2\n        }\n    }\n\n    async function handleSubmit(e) {\n        setLoadingSearch(true)\n        e.preventDefault()\n        let queryString\n        switch(distanceComparatorRef.current.value) {\n            case '>=': \n                queryString = `gte=${distanceFilter}&lte=1000000`\n                break\n            case '<=': \n                queryString = `gte=0&lte=${distanceFilter}`\n                break\n            case '=':\n                queryString = `gte=${distanceFilter}&lte=${distanceFilter}`\n                break\n        }\n        // Prevent duplicate queries\n        if (queryString !== prevQueryString) {\n            try {\n                const res = await api.get(`/users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: distanceComparatorRef.current.value}))\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        setTimeout(() => {\n            setLoadingSearch(false)\n            setHideFilterForm(true)\n        }, 0.5*1000)\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/statistics' />\n            <br />\n            <br />\n            {loading ? \n                <Loading />\n                :\n                <div \n                    className='main-container'\n                    style={{\n                        display: 'grid', gap: '40px',\n                        gridTemplateColumns: 'repeat(3, 1fr)',\n                        padding: '0px var(--ps-nav)',\n                        marginBottom: '100px'\n                    }}\n                >\n                    <div id='general' style={{gridColumn: '1/4'}}>\n                        <div id='general-header' className='d-flex jc-space-between ai-center'>\n                            <h3 >General</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 \n                                        key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe1 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe1(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div \n                            id='general-container'\n                            className='float-container'\n                            style={{padding: '20px 20px'}}\n                        >\n                            <div className='d-flex jc-space-between ai-center' >\n                                {Object.values(metrics).map((metric, metricID) => (\n                                    <div \n                                        key={metricID}\n                                        style={{ cursor: 'pointer' , borderRadius: '5px' }}\n                                        onClick={() => setSelectedMetric(metricID)}\n                                    >\n                                        <i className='bi bi-chevron-right' \n                                            style={{marginRight: '10px', display: metricID !== selectedMetric && 'none'}}\n                                        />\n                                        <p \n                                            style={{\n                                                color: 'var(--color-secondary)',\n                                                textTransform: 'capitalize', display: 'inline',\n                                                fontWeight: '500'\n\n                                            }}\n                                        >\n                                                {metric.key}\n                                        </p>\n                                       \n                                        <h3 style={{ margin: '6px 0px' }} >\n                                            {metric.formatted()} \n                                            <small style={{marginLeft: '5px'}}> {metric.unit}</small>\n                                        </h3>\n                                        {delta(metricID) >= 0 ? \n                                            <h4 style={{color: 'var(--color-success)', display: 'inline'}}>\n                                                {`+ ${delta(metricID)}%`}\n                                            </h4>\n                                            :\n                                            <h4 style={{color: 'var(--color-error)', display: 'inline'}}>\n                                                {`- ${Math.abs(delta(metricID))}%`}\n                                            </h4>\n                                        }\n                                        <h5 style={{color: 'var(--color-tertiary)', display: 'inline', marginLeft: '10px', marginTop: '7px'}}>\n                                            from last {timeframes[timeframe1].key}\n                                        </h5>\n                                    </div>\n                                ))}\n                            </div>\n                            <br />\n                            <br />\n                            <h4 style={{color: 'var(--color)', fontWeight: '500'}}>\n                                {metrics[selectedMetric].graphTitle}\n                            </h4>\n                            <br />\n                            <CustomBar \n                                height='175px' \n                                labelFreq={timeframes[timeframe1].labelFreq}\n                                maxLabelLength={10}\n                                showYTicks={true}\n                                data={{\n                                    labels: timeframes[timeframe1].labels(),\n                                    label: metrics[selectedMetric].label,\n                                    dataset: plottable(),\n                                    backgroundColor: `--color-translucent-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`,\n                                    borderColor: `--color-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div id='progress' style={{gridColumn: '1/4'}}>\n                        <div id='progress-header' className='d-flex jc-space-between ai-center'>\n                            <h3>Analysis</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 \n                                        key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe2 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe2(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div style={{padding: '20px 20px'}} className='float-container'>\n                            <div className='d-flex jc-flex-start ai-center'>\n                                <div className='d-inline-flex jc-flex-start ai-center mr-20'\n                                    style={{\n                                        border: '1px solid var(--bc)',\n                                        borderRadius: '5px',\n                                        overflow: 'hidden'\n                                    }}\n                                >\n                                    <h4 style={{backgroundColor: 'var(--bgc-hover)', padding: '7px 10px', color: 'var(--tint-color)'}}\n                                        className='mr-10'\n                                    >\n                                        Workout filter\n                                    </h4>\n                                    <p style={{padding: '7px 10px', whiteSpace: 'pre'}}>\n                                        {prevQuery.metric + '   ' + prevQuery.comparator + '   ' + prevQuery.value.toLocaleString() + ' m'}\n                                    </p>\n                                </div>\n                                <div className='clear-btn-secondary' style={{padding: '4px 8px'}}\n                                    onClick={() => setHideFilterForm(false)}\n                                >\n                                   <i className=\"bi bi-pencil\" style={{fontSize: '25px'}}/>\n                                </div>\n                            </div>\n                            <form onSubmit={handleSubmit}\n                                style={{ \n                                    overflow: 'hidden', transform: 'scale(1)',\n                                    padding: '0px 20px', \n                                    marginTop: hideFilterForm ? 0 : 20,\n                                    opacity: hideFilterForm ? 0: 100,\n                                    height: hideFilterForm ? 0 : 210, transition: 'all ease 0.4s',\n                                    backgroundColor: 'var(--bgc)', borderRadius: '5px', border: '1px solid var(--bc)'\n                                }} \n                                \n                            >\n                                <br />\n                                <h4 style={{fontWeight: 500}}>Edit Workout Filter</h4>\n                                <br />\n                                <div \n                                    className='d-inline-flex jc-flex-start ai-center'\n                                >\n                                    <p className='mr-10'>Distance</p>\n                                    <select ref={distanceComparatorRef} className='mr-20'>\n                                        <option value='<='>Less than</option>\n                                        <option value='='>Equal to</option>\n                                        <option value='>='>Greater than</option>\n                                    </select>\n                                    <input className='mr-10'\n                                        value={distanceFilter}\n                                        onChange={(e) => setDistanceFilter(e.target.value)}\n                                        type='number' required/>\n                                    <h5 style={{fontWeight: '500'}}>m</h5>\n                                </div>\n                                <br />\n                                <br />\n                                <div className='d-flex jc-space-between' style={{ marginTop: '10px'}}>\n                                    <button type='submit' className='solid-btn-secondary'>\n                                        <i className='bi bi-search' style={{fontSize: 18}} />\n                                        Search\n                                    </button>\n                                    {loadingSearch && <Loading />}\n                                    <button onClick={() => setHideFilterForm(true)}type='button' className='clear-btn-cancel'>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                            <br />\n\n                            <h4 style={{fontWeight: '500'}} >Workout Pace Trend</h4>\n                            <br />\n                            <CustomLine \n                                height='200px' \n                                data={{\n                                    label: 'Pace / 500m',\n                                    dataset: [...progressStats.plottable[timeframes[timeframe2].key] ],\n                                    backgroundColor: '--tint-color-translucent',\n                                    borderColor: '--tint-color'\n                                }}\n                            />\n                        </div>\n                    </div>\n                \n                    <div style={{height: '175px'}}></div>\n                </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Activity.js",["396","397"],"import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport Paginator from '../misc/Paginator'\nimport Loading from '../misc/Loading'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Activity() {\n    const {thisUser} = useAuth()\n    const history = useHistory()\n\n    const [results, setResults] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const [hideFilterForm, setHideFilterForm] = useState(true)\n    const [currPage, setCurrPage] = useState(1)\n\n    const [sortedKey, setSortedKey] = useState('createdAt')\n    const [sortAscending, setSortAscending] = useState(true)\n\n    const [submittedQuery, setSubmittedQuery] = useState(null)\n    const [submittedQueryString, setSubmittedQueryString] = useState(null)\n    const [selectedSortParam, setSelectedSortParam] = useState(0)\n    const sortOrderRef = useRef()\n    const sortParams = [\n        {title: 'Date', key: 'createdAt', description: {                // 0\n            asc: 'Oldest to Newest', desc: 'Newest to Oldest'\n        }},\n        {title: 'Distance', key: 'distance', description: {             // 1\n            asc: 'Shortest to Longest', desc: 'Longest to Shortest'\n        }},\n        {title: 'Workout Time', key: 'elapsedTime', description: {      // 2    \n            asc: 'Shortest to Longest', desc: 'Longest to Shortest'\n        }},\n        {title: 'Average Pace', key: 'averagePace', description: {      // 3\n            asc: 'Fastest to Slowest', desc: 'Slowest to Fastest'\n        }}\n    ]\n    const comparators = [\n        {title: 'No filter', value: 'none'},\n        {title: 'Greater than', value: '$gte'},\n        {title: 'Less than', value: '$lte'},\n        {title: 'Equal to', value: '$eq'}\n    ]\n    const filters = [\n        {title: 'Distance', key: 'distance', unit: 'm', comparatorRef: useRef('none'), valueRef: useRef(0)},    // 0\n        {title: 'Time', key: 'elapsedTime', unit: 'sec', comparatorRef: useRef('none'), valueRef: useRef(0)}    // 1\n    ]\n\n    const tableColumns = [\n        {title: 'Date', key: 'createdAt'},\n        {title: 'Session Title', key: 'sessionID'}, // fix this\n        {title: 'Activity Title', key: 'title'},\n        {title: 'Distance', key: 'distance'},\n        {title: 'Time', key: 'elapsedTime'},\n        {title: 'Type', key: 'workoutType'}\n    ]\n\n    useEffect(() => {\n        fetchData( false, 1 )\n    }, [])\n\n    async function fetchData(useSubmittedQuery, page) {\n        // TODO: convert query obj to querystring\n        setLoading(true)\n        const query = useSubmittedQuery ?  submittedQuery :\n        {\n            pagesize: 15,\n            page: page,\n            sortby: sortOrderRef.current.value +  sortParams[selectedSortParam].key,\n            ...Object.fromEntries(\n                filters.filter(filter => filter.comparatorRef.current.value !== 'none')\n                .map(filter => [\n                    `${filter.key}[${filter.comparatorRef.current.value}]`,\n                    filter.valueRef.current.value\n                ])\n            )\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n\n        try {\n            const res = await api.get(`/activities/search?user=${thisUser._id}&${queryString}`)\n            setResults({\n                count: res.data.count,\n                activities: sortActivities(res.data.activities)\n            })\n            setCurrPage(page)\n            setSubmittedQuery(query)\n            setSubmittedQueryString(queryString)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        if (! results.count) {return}\n        setResults(curr => (\n            {\n                count: curr.count,\n                activities: sortActivities(curr.activities) \n            }\n        ))\n    }, [sortAscending, sortedKey])\n\n    function sortActivities(inputActivities) {\n        if (sortAscending) {\n            return inputActivities.sort( (a, b) => a[sortedKey] < b[sortedKey] ? -1 : 1)\n        } else {\n            return inputActivities.sort( (a, b) => a[sortedKey] > b[sortedKey] ? -1 : 1)\n        }\n    }\n\n    function onClickPrevious() {\n        fetchData(true, currPage - 1)\n    }\n\n    function onClickNext() {\n        fetchData(true, currPage + 1)\n    }\n\n    function handleSubmitForm(e) {\n        e.preventDefault()\n        fetchData(false, 1)\n        .then(setTimeout(() => {\n            setHideFilterForm(true)\n        }, 0.5*1000))\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/activity' />\n            <div className='main-container' style={{marginBottom: 100}}>\n                <br /><br />\n                <h3>Workout Filter</h3>\n                <br />\n                <div className='d-flex jc-flex-start ai-center'>\n                    <div className='d-inline-flex jc-flex-start ai-center mr-20'\n                        style={{\n                            gap: '0px',\n                            border: '1px solid var(--bc)',\n                            borderRadius: '5px',\n                            overflow: 'hidden'\n                        }}\n                    >\n                        <p style={{backgroundColor: 'var(--bgc-light)', padding: '7px 10px'}}>\n                            Showing results for\n                        </p>\n                        <p style={{padding: '7px 10px', whiteSpace: 'pre'}}>\n                            {submittedQueryString}\n                        </p>\n                    </div>\n                    <div className='clear-btn-secondary' style={{padding: '4px 8px'}}\n                        onClick={() => setHideFilterForm(false)}\n                    >\n                        <i className=\"bi bi-pencil\" style={{fontSize: '25px'}}/>\n                    </div>\n                </div>\n                <form onSubmit={handleSubmitForm} className='bgc-container'\n                    style={{ \n                        overflow: 'hidden', transform: 'scale(1)',\n                        padding: '0px 20px', \n                        marginTop: hideFilterForm ? 0 : 20,\n                        opacity: hideFilterForm ? 0: 100,\n                        height: hideFilterForm ? 0 : 400, transition: 'all ease 0.4s',\n                    }} \n                >\n                    <br />\n                    <h4 style={{fontWeight: 500}}>Edit Workout Filter</h4>\n                    <br />\n                    <div className='d-flex jc-flex-start ai-flex-start' >\n                        <label className='mr-20'>\n                            Sort By <br />\n                            <select value={selectedSortParam} onChange={(e) => setSelectedSortParam(e.target.value)}>\n                                {sortParams.map((param, idx) => (\n                                    <option key={idx} value={idx}>{param.title}</option>\n                                ))}\n                            </select>\n                        </label>\n                        <label className='mr-20'>\n                            Order <br />\n                            <select ref={sortOrderRef}>\n                                <option value='-' defaultValue={true}>{sortParams[selectedSortParam].description.desc}</option>\n                                <option value='+'>{sortParams[selectedSortParam].description.asc}</option>\n                            </select>\n                        </label>\n                    </div>\n                    <br />\n                    {filters.map((filter, idx) => (\n                        <label key={idx} >\n                            {filter.title} <br />\n                            <div className='d-flex jc-flex-start ai-center' style={{ marginBottom: 15}}>\n                                <select ref={filter.comparatorRef} className='mr-20'>\n                                    {comparators.map(comparator => (\n                                        <option value={comparator.value}>{comparator.title}</option>\n                                    ))}\n                                </select>\n                                <input ref={filter.valueRef} className='mr-10'/>\n                                {filter.unit}\n                            </div>\n                            \n                        </label>\n\n                    ))}\n                    <br />\n                    <div className='d-flex jc-space-between ai-center'>\n                        <button type='submit' className='solid-btn-secondary'>\n                            <i className='bi bi-search' style={{fontSize: 18}} />\n                            Search\n                        </button>\n                        <button type='button' className='clear-btn-cancel' onClick={() => setHideFilterForm(true)}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n                <br />\n                {(!loading && submittedQuery !== null) &&\n                    <h4 style={{color: 'var(--color-secondary)'}}>{results.count.toLocaleString()} results</h4>\n                }\n                <br />\n                <div id='results' className='float-container'>\n                    <table style={{width: '100%'}}>\n                        <thead>\n                            <tr>\n                                \n                                {tableColumns.map(col => (\n                                    <th \n                                        onClick={() => {\n                                            setSortedKey(col.key)\n                                            setSortAscending(curr => !curr)\n                                        }}\n                                        className={sortedKey === col.key ? 'th-sortable th-selected' : 'th-sortable'}\n                                    >\n                                        {col.title}\n                                        <div className={!sortAscending ? 'rotate-180' : ''} style={{display: 'inline-block', marginLeft: '8px'}}>\n                                            <i className='bi bi-triangle-fill' \n                                                style={{\n                                                    fontSize: '10px', color: 'var(--tint-color)',\n                                                    opacity: sortedKey !== col.key && '0%'\n                                                }} \n                                            />\n                                        </div>\n                                        \n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {(!loading && results.count > 0) && results.activities.map((ac, idx) => (\n                            <tr key={idx}>\n                                <td>{moment(ac.createdAt).format('ll')}</td>\n                                <td className='page-link' onClick={() => history.push(`/sessions/${ac.sessionID}`)}>\n                                    {ac.session.title}\n                                </td>\n                                <td>{ac.title}</td>\n                                <td>{ac.distance.toLocaleString()}</td>\n                                <td style={{letterSpacing: 1}}>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                                <td>{ac.workoutType}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                    {( (submittedQuery && !loading && !results.activities.length) &&\n                        <div style={{textAlign: 'center', fontSize: 17, color: 'var(--color-secondary)', padding: '50px 0px'}}>\n                            We couldn't find any activities matching those filters\n                        </div>\n                    )}\n                    {loading && <Loading />}\n                </div>\n\n                <br />\n                { (!loading && submittedQuery !== null) &&\n                    <Paginator currPage={currPage} resultsCount={results.count} \n                        onClickPrevious={onClickPrevious} onClickNext={onClickNext}\n                    />\n                }\n\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/TrainingHeader.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomScatter.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomLine.js",["398","399","400","401","402"],"import React, {useState, useEffect} from 'react'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {Line} from 'react-chartjs-2'\nimport moment from 'moment'\n\nexport default function CustomLine(props) {\n    const [data, setData] = useState(props.data)\n    const {isDarkMode, setIsDarkMode} = useTheme()\n\n    const [localTheme, setLocalTheme] = useState(isDarkMode)\n\n    const borderColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(data.borderColor)\n    const backgroundColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(data.backgroundColor)\n    const colorMain = getComputedStyle(document.documentElement)\n    .getPropertyValue('--color-header-d')\n    const colorSecondary = getComputedStyle(document.documentElement)\n    .getPropertyValue('--color-secondary-d')\n    const tooltipColor = getComputedStyle(document.documentElement)\n    .getPropertyValue('--bgc-light-d')\n    const bgc = getComputedStyle(document.documentElement)\n    .getPropertyValue('--bgc-light')\n\n    useEffect(() => {\n        setData(props.data)\n    }, [props])\n\n    // Force rerenders on color theme change\n    useEffect(() => {\n        setLocalTheme(isDarkMode)\n    }, [isDarkMode])\n\n    return (\n        <div style={{height: props.height}}>\n            <Line \n                data={{\n                    labels: data.labels,\n                    datasets: [\n                        {\n                            label: data.label,\n                            data: data.dataset,\n                            backgroundColor: backgroundColor,\n                            pointRadius: 4,\n                            pointBackgroundColor: borderColor,\n                            pointBackgroundColor: borderColor,\n                            borderColor: borderColor,\n                            borderWidth: 2,\n                            lineTension: 0\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        titleFontSize: 14,\n                        titleFontStyle: 'bold',\n                        titleFontColor: colorMain,\n                        titleMarginBottom: 15,\n                        bodyFontSize: 16,\n                        bodyFontColor: colorMain,\n                        xPadding: 10, yPadding: 10,\n                        callbacks: {\n                            label: (tooltipItem, data) => {\n                                console.log(tooltipItem)\n                                return 'Pace: ' + moment.duration(tooltipItem.value, 'seconds').format('mm:ss')\n                            },\n                            title: (tooltipItem, data) => {\n                                console.log(tooltipItem)\n                                return moment(tooltipItem[0].xLabel).format('LLL')\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            display: true, \n                            gridLines: {\n                                display: false\n                            },\n                            type: 'time',\n                            distribution: 'series',\n                            ticks: {\n                                fontColor: colorSecondary,\n                                source: 'data'\n                            }\n                        }],\n                        yAxes: [{\n                            display: true,\n                            gridLines: {\n                                display: true,\n                                borderDash: [10, 5]\n                            },\n                            ticks: {\n                                fontColor: colorSecondary,\n                                callback: function (value, index, values) {\n                                    if (index === 0 || index === values.length - 1 || index === Math.floor(values.length/2)) {\n                                        return moment.duration(value, 'seconds').format('mm:ss')\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                    \n                }}\n            />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/ResultsTable.js",["403","404","405","406","407"],"import React, {useEffect, useState} from 'react'\nimport C2Screen from '../misc/C2Screen'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport 'moment-duration-format'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function ResultsTable(props) {\n    const {currentUser} = useAuth()\n\n    const [hideSelf, setHideSelf] = useState(true)\n    const [sortedKey, setSortedKey] = useState('name')\n    const [sortAscending, setSortAscending] = useState(true)\n\n    const tableColumns = [\n        {title: 'Name', key: 'name'},\n        {title: 'Ave Pace', key: 'averagePace'},\n        {title: 'Distance', key: 'distance'},\n        {title: 'Stroke Rate', key: 'strokeRate'},\n        {title: 'Elapsed Time', key: 'elapsedTime'}\n    ]\n\n    const [activities, setActivities] = useState(props.activities.filter(ac => ac.isCompleted))\n\n    useEffect(() => {\n        const completedActivities = props.activities.filter(ac => ac.isCompleted)\n        if (hideSelf) {\n            setActivities(completedActivities)\n        } else {\n            setActivities( sortActivities([...completedActivities]) )\n        }\n    }, [props.activities])\n\n    useEffect(() => {\n        if (hideSelf) {return}\n        setActivities([...sortActivities(activities)])\n    }, [sortAscending, sortedKey])\n\n    function sortActivities(inputActivities) {\n        if (sortAscending) {\n            return inputActivities.sort( (a, b) => a[sortedKey] < b[sortedKey] ? -1 : 1)\n        } else {\n            return inputActivities.sort( (a, b) => a[sortedKey] > b[sortedKey] ? -1 : 1)\n        }\n    }\n\n    function handleClickActivity() {\n        // what to do here ? \n        // send to new page with in depth stats on activity ?\n    }\n\n    return (\n        <div style={{marginBottom: hideSelf ? 0 : 30}}>\n            <div className='d-flex jc-space-between ai-center'>\n                <div \n                    className='d-flex jc-flex-start ai-center' \n                    style={{gap: '20px', minHeight: '55px'}}\n                >\n                    <button className='arrow-btn' onClick={() => setHideSelf(curr => !curr)}>\n                        <i className={`bi bi-chevron-${hideSelf ? 'right' : 'down'}`} style={{color: 'var(--color)'}} />\n                    </button>\n                    <h4 onClick={() => setHideSelf(curr => !curr)}>{props.activityTitle}</h4>\n                </div>\n            </div>\n\n            <div style={{\n                display: hideSelf ? 'none': 'block',\n                margin: '0px 35px', marginTop: !hideSelf && 20\n            }} className='bgc-container'>\n                <table className='data-table' style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            {tableColumns.map((col, idx) => (\n                                <th \n                                    onClick={() => {\n                                        setSortedKey(col.key)\n                                        setSortAscending(curr => !curr)\n                                    }}\n                                    className={sortedKey === col.key ? 'th-sortable th-selected' : 'th-sortable'}\n                                >\n                                    {col.title}\n                                    <div className={!sortAscending && 'rotate-180'} style={{display: 'inline-block', marginLeft: '8px'}}>\n                                        <i className='bi bi-triangle-fill' \n                                            style={{\n                                                fontSize: '10px', color: 'var(--tint-color)',\n                                                opacity: sortedKey !== col.key && '0%'\n                                            }} \n                                        />\n                                    </div>\n                                    \n                                </th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {activities.map((ac, index) => (\n                            <tr \n                                key={index} \n                                style={{\n                                    borderLeft: ac.uid == currentUser.uid ? '3px solid var(--tint-color)' : 'none'\n                                }}\n                                onClick={() => handleClickActivity(ac._id)}\n                            >\n                                <td>{ac.name}</td>\n                                <td>{moment.duration(ac.averagePace, 'seconds').format('hh:mm:ss')}</td>\n                                <td>{ac.distance.toFixed()}</td>\n                                <td>{ac.strokeRate}</td>\n                                <td>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                            </tr>\n                        ))}\n                        {!activities.length &&\n                            <tr>\n                                <td>No completed activities</td>\n                            </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        \n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/DropdownMenu.js",["408"],"import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {useAuth} from '../../contexts/AuthContext'\n\nexport default function DropdownMenu(props) {\n    const {currentUser, thisUser, signOut} = useAuth()\n    const {isDarkMode, setIsDarkMode} = useTheme()\n    const history = useHistory()\n\n    const [hideSelf, setHideSelf] = useState(props.hideSelf)\n\n    const border = '1px solid var(--bc)'\n    const itemPadding = '12px 25px'\n    const itemStyle = {\n        cursor: 'pointer', \n        padding: itemPadding\n    }\n    const iconStyle={ fontSize: '20px' , color: 'var(--color)', marginRight: 15}\n\n    const tabs = [\n        {title: 'Profile', iconName: 'person', path: `/athletes/${thisUser._id}`},\n        {title: 'Settings', iconName: 'gear', path: '/settings'}\n    ]\n\n    useEffect(() => {\n        setHideSelf(props.hideSelf)\n    }, [props.hideSelf])\n\n    return (\n        <div hidden={hideSelf} onClick={() => props.setHideSelf(true)}\n            style={{\n                height: '100vh', width: '100vw', position: 'absolute',\n                top: '0px', right: '0px',\n                zIndex: 10\n            }} \n            \n        >\n            <div className='float-container' hidden={hideSelf}\n                style={{\n                    width: '300px', position: 'fixed', top: '70px', right: '40px',\n                    backgroundColor: 'var(--bgc-hover)', zIndex: 20,\n                    padding: '0px 0px', textAlign: 'left',\n                    backgroundColor: 'var(--bgc-light)', \n                    border: isDarkMode ? '1px solid var(--bc)' : 'none',\n                    boxShadow: 'var(--box-shadow-dark)'\n                }}\n            >\n                <div style={{padding: '20px 25px', borderBottom: border }}>\n                    <h4 style={{fontWeight: '500'}}>{currentUser.displayName}</h4>   \n                </div>\n\n                <div style={{borderBottom: border}}>\n                    {tabs.map((tab, idx) => (\n                        <div key={idx} className='d-flex jc-flex-start ai-center' style={itemStyle}\n                            onClick={() => history.push(tab.path)}\n                        >\n                            <i className={`bi bi-${tab.iconName}`} style={iconStyle} />\n                            <p>{tab.title}</p>\n                        </div>\n                    ))}\n                    \n                </div>\n\n                <div style={{padding: itemPadding, borderBottom: border}} onClick={() => setIsDarkMode(curr => !curr)}\n                    className='d-flex jc-space-between ai-center'\n                >\n                    <div className='d-flex jc-flex-start ai-center'>\n                        <i className=\"bi bi-moon\" style={iconStyle}/>\n                        <p>Night Mode</p>\n                    </div>\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" checked={isDarkMode} onChange={() => setIsDarkMode(curr => !curr)} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                \n                </div>\n                <div className='d-flex jc-flex-start ai-center' style={{...itemStyle}}\n                    onClick={signOut}\n                >\n                    <i className=\"bi bi-box-arrow-right\" style={iconStyle}/>\n                    <p >Log Out</p>\n                </div>\n                \n                \n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Paginator.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Profile.js",["409","410","411","412"],"\nimport React, {useState, useEffect} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {storage} from '../../firebase'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\n\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nexport default function Profile() {\n    const {currentUser, thisUser, fetchThisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [profileDisplayName, setProfileDisplayName] = useState(currentUser.displayName)\n    const [displayName, setDisplayName] = useState(currentUser.displayName)\n    const [isEditingName, setIsEditingName] = useState(false)\n\n    const [profilePhotoURL, setProfilePhotoURL] = useState(currentUser.photoURL)\n    const [photoFile, setPhotoFile] = useState()\n    const [isEditingPhoto, setIsEditingPhoto] = useState(false)\n\n    const [profileBannerURL, setProfileBannerURL] = useState(thisUser.bannerURL ? thisUser.bannerURL : src)\n    const [bannerFile, setBannerFile] = useState()\n    const [isEditingBanner, setIsEditingBanner] = useState(false)\n\n\n    async function handleSubmitName(e) {\n        e.preventDefault()\n        try {\n            const update = { displayName: displayName }\n            await currentUser.updateProfile(update)\n            await api.patch(`/users/${thisUser._id}/displayName`, update)\n\n            setProfileDisplayName(displayName)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch (error) {\n            console.log(error)\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingName(false)\n    }\n\n    async function handleSubmitImage(e) {\n        e.preventDefault()\n        try {\n            await storage.ref('usericons').child(thisUser._id).put(photoFile);\n            const resURL = await storage.ref('usericons').child(thisUser._id).getDownloadURL()\n            await currentUser.updateProfile({\n                photoURL: resURL\n            })\n            await api.patch(`/users/${thisUser._id}/iconURL`, {iconURL: resURL})\n            setProfilePhotoURL(resURL)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch(error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingPhoto(false)\n    }\n\n    async function handleSubmitBanner(e) {\n        e.preventDefault() \n        try {\n            await storage.ref('userbanners').child(thisUser._id).put(bannerFile);\n            const resURL = await storage.ref('userbanners').child(thisUser._id).getDownloadURL()\n            await api.patch(`/users/${thisUser._id}/bannerURL`, {bannerURL: resURL})\n            setProfileBannerURL(resURL)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch(error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingBanner(false)\n    }\n\n    return (\n        <div>\n            <h3 id='Profile'>Profile</h3>\n            <br />\n            <div className='settings-list'>\n                <div className='editable-settings-row' style={{display: isEditingName && 'none'}}\n                    onClick={() => setIsEditingName(true)}\n                >\n                    <p>Display Name</p>\n                    <p>{profileDisplayName}</p>\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingName} style={{marginBottom: isEditingName && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingName(false)}>\n                        <p>Display Name</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitName}> \n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Display Name</p>\n                            <input type='text' value={displayName} onChange={e => setDisplayName(e.target.value)} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end' style={{gap: 20}}>\n                            <button type='button' className='clear-btn-secondary' onClick={() => setIsEditingName(false)}>Cancel</button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n                <div className='editable-settings-row' style={{display: isEditingPhoto && 'none'}}\n                    onClick={() => setIsEditingPhoto(true)}\n                >\n                    <p>Current Photo</p>\n                    <img className='user-icon' src={profilePhotoURL}/>\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingPhoto} style={{marginBottom: isEditingPhoto && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingPhoto(false)}>\n                        <p>Current Photo</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitImage}>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Current Photo</p>\n                            <input type='file' accept='image/*' onChange={e => setPhotoFile(e.target.files[0])} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end' style={{gap: 20}}>\n                            <button type='button' className='clear-btn-secondary' onClick={() => setIsEditingPhoto(false)}>Cancel</button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n                <div className='editable-settings-row' style={{display: isEditingBanner && 'none'}}\n                    onClick={() => setIsEditingBanner(true)}\n                >\n                    <p>Current Banner Photo</p>\n                    <img className='banner-image' src={profileBannerURL} style={{width: 200, height: 50}} />\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingBanner} style={{marginBottom: isEditingBanner && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingBanner(false)}>\n                        <p>Current Banner Photo</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitBanner}>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Current Banner Photo</p>\n                            <input type='file' accept='image/*' onChange={e => setBannerFile(e.target.files[0])} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end' style={{gap: 20}}>\n                            <button type='button' className='clear-btn-secondary' onClick={() => setIsEditingBanner(false)}>Cancel</button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Preferences.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Settings.js",["413","414","415"],"\nimport React, {useState, useEffect, useCallback} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport SubHeader from '../headers/SubHeader'\nimport Profile from './Profile'\nimport Preferences from './Preferences'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport Loading from '../misc/Loading'\nimport moment from 'moment'\nimport axios from 'axios'\n\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Settings() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [profileEmail, setProfileEmail] = useState(currentUser.email)\n    const [editingEmail, setEditingEmail] = useState(false)\n    const [email, setEmail] = useState(currentUser.email)\n\n    const menuRef = useCallback(node => {\n        if (node !== null) {\n            setMenuOffset(node.offsetTop - 70)\n        }\n    }, [])\n    const [menuOffset, setMenuOffset] = useState(0)\n\n    async function handleSubmitEmail(e) {\n        e.preventDefault()\n        try {\n            await currentUser.updateEmail(email)\n            setProfileEmail(email)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch (error) {\n            console.log(error)\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setEditingEmail(false)\n    }\n\n    async function handleClickResetPassword() {\n        try {\n            await firebase.auth().sendPasswordResetEmail(currentUser.email)\n            setMessage({title: 'Check your email for a reset password link', isError: false, timestamp: moment()})\n        } catch (error) {\n            console.log(error)\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSubscribe() {\n        setMessage({\n            title: 'We apologize, but this feature is currently in development',\n            isError: true,\n            timestamp: moment()\n        })\n    }\n\n    function handleClickDeleteAccount() {\n        handleClickSubscribe()\n    }\n\n    const settingsGroups = [\n        {title: 'Membership'},\n        {title: 'Account'},\n        {title: 'Profile'},\n        {title: 'Preferences'}\n    ]\n\n    return (\n        <div>\n            <MainHeader />\n            <SubHeader title='Settings' />\n            <div className='main-container settings-page d-flex jc-flex-start ai-flex-start' style={{zIndex: -1}}>\n                <div id='settings-menu' className='settings-menu' ref={menuRef} style={{top: menuOffset}}>\n                    {settingsGroups.map((group, idx) => (\n                        <p key={idx} style={{marginBottom: 15}} className='menu-link'\n                            onClick={() => {\n                                const elemPos = document.getElementById(group.title).offsetTop\n                                window.scrollTo({top: elemPos - 80})\n                            }}\n                        >\n                            {group.title}\n                        </p>\n                    ))}\n                </div>\n                <div style={{width: 650, maxWidth: 650, minWidth: 650, marginLeft: 150}}>\n                    <h3 id='Membership'>Membership</h3>\n                    <br />\n                    <div className='settings-list'>\n                        <div className='settings-row'>\n                            <p>Member Since</p>\n                            <p>{moment(thisUser.createdAt).format('LL')}</p>\n                        </div>\n                        <div className='settings-row'>\n                            <p>Subscription</p>\n                            <p>None</p>\n                            <button className='clear-btn-secondary' onClick={handleClickSubscribe}>Subscribe Now</button>\n                        </div>\n                    </div>\n                    <h3 id='Account'>Account</h3>\n                    <br />\n                    <div className='settings-list'>\n                        <div className='editable-settings-row' style={{display: editingEmail && 'none'}} onClick={() => setEditingEmail(true)}>\n                            <p>Email Address</p>\n                            <p>{profileEmail}</p>\n                        </div>\n                        <div className='settings-edit-container' hidden={!editingEmail} style={{ marginBottom: editingEmail && 15}}>\n                            <div className='settings-edit-header' onClick={() => setEditingEmail(false)}>\n                                <p>Email Address</p>\n                                <i className='bi bi-pencil' />\n                            </div>\n                            <br />\n                            <form onSubmit={handleSubmitEmail}>\n                                <div className='d-flex jc-space-between ai-center'>\n                                    <p>Email Address</p>\n                                    <input value={email} onChange={(e) => setEmail(e.target.value)} type='email' required />\n                                </div>\n                                <br /><br />\n                                <div className='d-flex jc-flex-end' style={{gap: 20}}>\n                                    <button type='button' className='clear-btn-secondary' onClick={() => setEditingEmail(false)}>Cancel</button>\n                                    <button type='submit' className='solid-btn-secondary'>Save</button>\n                                </div>\n                            </form>\n                            <br />\n                        </div>\n                        <div className='settings-row'>\n                            <p>Password</p>\n                            <button className='clear-btn-secondary' onClick={handleClickResetPassword}>Reset Password</button>\n                        </div>\n                        <div className='settings-row'>\n                            <p />\n                            <button className='error-btn-secondary' onClick={handleClickDeleteAccount}>Delete your account</button>\n                        </div>\n                    </div>\n                    <Profile />\n                    <Preferences />\n                    <div style={{height: 450}} />\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/MessageContext.js",["416","417","418","419"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useTheme } from './ThemeContext'\n\nconst MessageContext = React.createContext()\n\nexport function useMessage() {\n    return useContext(MessageContext)\n}\n\nexport function MessageProvider({children}) {\n    // external interface\n    const [message, setMessage] = useState(null)\n    const value = {message, setMessage}\n    // internal interface\n    const [messages, setMessages] = useState([])\n    const [messageTimestamps, setMessageTimestamps] = useState(new Set())\n\n    useEffect(() => {\n        if (message === null) {return}\n        const key = messages.length + 1\n        if (! messageTimestamps.has(message.timestamp.format())) {\n            setMessages([...messages, {...message, isHidden: false, key: key} ])\n            setMessageTimestamps(curr => (new Set([...curr, message.timestamp.format()])) )\n            setTimeout(() => hideMessage(key), 5*1000);\n        }\n        \n    }, [message])\n\n    function hideMessage(messageKey) {\n        setMessages(messages => ([...\n            messages.map( message => {\n                if (message.key === messageKey && !message.isHidden) {\n                    return {...message, isHidden: true}\n                } else {\n                    return message\n                }\n            })\n        ]))\n    }\n\n    const messageWidth = 400 + 4\n    const messageHeight = 50 + 4\n    const xWidth = 40\n\n    return (\n        <MessageContext.Provider value={value}>\n            {children}\n            <div style={{position: 'fixed', left: '50%', marginLeft: -messageWidth/2, bottom: 100, width: messageWidth}}>\n                {messages !== null && messages.map((message, idx) => (\n                    <div key={idx} className='d-flex jc-flex-start float-container' \n                        style={{\n                            overflow: 'hidden', gap: 0, border: message.isError ? '2px solid var(--color-error)' : '2px solid var(--tint-color)',\n                            marginTop: 10, display: message.isHidden && 'none'\n                        }}\n                        hidden={message.isHidden}\n                    >\n                        <div  onClick={() => hideMessage(message.key)}\n                            style={{\n                                width: xWidth,\n                                backgroundColor: message.isError ? 'var(--color-error)' : 'var(--tint-color)',\n                                cursor: 'pointer'\n                            }}\n                            className='d-flex ai-center jc-center onhover-bright'\n                        >\n                            <i className='bi bi-x' style={{fontSize: 30, color: 'white'}} />\n                        </div>\n                        <h4 style={{padding: '10px 10px'}}>{message.title}</h4>\n                    </div>\n                ))}\n            </div>\n        </MessageContext.Provider>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Club.js",["420","421","422"],"import React, {useState, useEffect} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport SubHeader from '../headers/SubHeader'\nimport ClubHeader from './ClubHeader'\nimport Loading from '../misc/Loading'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useParams, useLocation} from 'react-router-dom'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Club(props) {\n    const {clubURL} = useParams()\n    const {thisUser} = useAuth()\n\n    const [members, setMembers] = useState()\n    const [membership, setMembership] = useState()\n    const [club, setClub] = useState()\n    const [loading, setLoading] = useState(true)\n\n    useEffect( () => {\n        fetchData()\n    }, [clubURL])\n\n    async function fetchData() {\n        try {\n            const res = await api.get(`/clubs/customURL/${clubURL}`)\n            setClub(res.data)\n            await __fetchMembers(res.data._id)\n        } catch(error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    async function __fetchMembers(clubID) {\n        try {\n            let res = await api.get(`/clubmemberships/club/${clubID}`)\n            setMembers(res.data)\n            res = await api.get(`/clubmemberships/ismember?user=${thisUser._id}&club=${clubID}`)\n            setMembership(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function fetchMembers() {\n        if (!club) {return}\n        __fetchMembers(club._id)\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            {loading ? <Loading /> : !club ? <h2 style={{paddingTop: 40}}>We couldn't find a club at that link</h2> :\n            <div>\n                <ClubHeader title={club.name} subPath='/general' \n                    fetchData={fetchMembers} \n                    club={club} members={members} membership={membership}\n                />\n                <div className='main-container' style={{height: '100vh'}}>\n                    <br /><br />\n                    <p>{club.description}</p>\n\n                </div>\n            </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/ClubHeader.js",["423","424","425","426","427","428","429"],"import React, {useEffect, useState} from 'react'\nimport SubHeader from '../headers/SubHeader'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useAuth} from '../../contexts/AuthContext'\nimport moment from 'moment'\nimport axios from 'axios'\nimport Confirmation from '../misc/Confirmation'\n\nconst srcBanner = 'https://styles.redditmedia.com/t5_2qljq/styles/bannerBackgroundImage_zfhrcn1w7u911.jpg?width=4000&format=pjpg&s=88d594d779756f76ef8a5e0073e1d2959cd501bf'\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function ClubHeader(props) {\n    const {currentUser, thisUser} = useAuth()\n    const history = useHistory()\n    const {setMessage} = useMessage()\n\n    const [club, setClub] = useState(props.club)\n    const [membership, setMembership] = useState(props.membership)\n    const [isMember, setIsMember] = useState()\n\n    const [confirmationHidden, setConfirmationHidden] = useState(true)\n\n    const items = [\n        {title: 'General', path: '/general'},\n        {title: 'Members', path: '/members'}\n    ]\n\n    useEffect(() => {\n        setClub(props.club)\n        setMembership(props.membership)\n    }, [props])\n\n    async function handleClickJoin() {\n        async function joinClub() {\n            try {\n                await api.post(`/clubmemberships`, {club: club._id, user: thisUser._id, role: 0})\n                setMessage({title: `Successfully joined  \"${club.name}\"`, isError: false, timestamp: moment() })\n            } catch(error) {\n                setMessage({title: `Error joining \"${club.name}\". ${error.message}`, isError: true, timestamp: moment() })\n                console.log(error)\n            }\n        }\n        await joinClub()\n        props.fetchData()\n    }\n\n    async function handleClickConfirmLeave() {\n        async function leaveClub() {\n            try {\n                const url = `/clubmemberships?club=${club._id}&user=${thisUser._id}`\n                console.log(url)\n                await api.delete(url)\n                setMessage({title: `Successfully left  \"${club.name}\"`, isError: false, timestamp: moment() })\n            } catch(error) {\n                setMessage({title: `Error leaving \"${club.name}\". ${error.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        await leaveClub()\n        props.fetchData()\n\n    }\n\n    return (\n        <div style={{position: 'sticky', top: 0}}>\n            <Confirmation title='Confirm' message='Are you sure you want to leave this club?' \n                handleClickConfirm={handleClickConfirmLeave} hidden={confirmationHidden} setHidden={setConfirmationHidden}\n            />\n            <img className='banner-image' src={club.bannerURL ? club.bannerURL : srcBanner} />\n            <SubHeader\n                title={props.title} \n                items={items} \n                path={`/clubs/${club.customURL}`}\n                subPath={props.subPath}\n                iconURL={props.club.iconURL}\n            >\n                {membership.isMember ? \n                    <button className='clear-btn-secondary' onClick={() => setConfirmationHidden(false)}>Leave</button>\n                    :\n                    <button className='solid-btn-secondary' onClick={handleClickJoin}>Join</button>\n                }\n            </SubHeader>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Members.js",["430","431","432","433"],"import React, {useState, useEffect} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport ClubHeader from './ClubHeader'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Members() {\n    const {clubURL} = useParams()\n    const history = useHistory()\n    const {thisUser} = useAuth()\n\n    const [club, setClub] = useState()\n    const [membership, setMembership] = useState()\n    const [members, setMembers] = useState()\n    const [admins, setAdmins] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        fetchData()\n    }, [clubURL])\n\n    useEffect(() => {\n        fetchMembers()\n    }, [club])\n\n    \n    async function fetchData() {\n        try {\n            const res = await api.get(`/clubs/customURL/${clubURL}`)\n            setClub(res.data)\n            await __fetchMembers(res.data._id)\n        } catch(error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    async function __fetchMembers(clubID) {\n        try {\n            let res = await api.get(`/clubmemberships/club/${clubID}`)\n            setMembers(res.data.filter(m => m.role === 0))\n            setAdmins(res.data.filter(m => m.role > 0))\n            res = await api.get(`/clubmemberships/ismember?user=${thisUser._id}&club=${clubID}`)\n            setMembership(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function fetchMembers() {\n        if (!club) {return}\n        __fetchMembers(club._id)\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            {loading ? <Loading /> : !club ? <h2 style={{paddingTop: 40}}>We couldn't find a club at that link</h2> :\n            <div >\n                <ClubHeader title={club.name} subPath='/members' \n                    fetchData={fetchData} \n                    club={club} members={members} membership={membership}\n                /> \n                <div className='main-container' style={{paddingBottom: 200}}>\n                    <br /><br />\n                    <h3>Admins</h3>\n                    <br />\n                    <div className='float-container'>\n                        <table style={{width: '100%'}}>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {admins.map((admin, idx) => (\n                                    <tr key={idx}>\n                                        <td className='d-flex ai-center'> \n                                            {admin.iconURL ? \n                                                <img className='user-icon d-inline' src={admin.iconURL} />\n                                                :\n                                                <div className='user-icon-default'>\n                                                    <i className='bi bi-person' />\n                                                </div>\n                                            }\n                                            <h4 className='page-link d-inline' onClick={() => history.push(`/athletes/${admin._id}`)}>\n                                                {admin.displayName}\n                                            </h4>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <br /><br />\n                    <h3>Members</h3>\n                    <br />\n                    <div className='float-container'>\n                        <table style={{width: '100%'}}>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {members.map((member, idx) => (\n                                    <tr key={idx}>\n                                        <td className='d-flex ai-center'>\n                                            {member.iconURL ? \n                                                <img className='user-icon d-inline' src={member.iconURL} />\n                                                :\n                                                <div className='user-icon-default'>\n                                                    <i className='bi bi-person' />\n                                                </div> \n                                            }\n                                            <h4 className='page-link d-inline' onClick={() => history.push(`/athletes/${member.uid}`)}>\n                                                {member.displayName}\n                                            </h4>\n                                        </td>\n                                        \n                                        \n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                        {(members && !members.length) && \n                            <h4 className='c-cs' style={{padding: '20px 15px'}}>{`${club.name} currently has no members`}</h4>\n                        }\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Confirmation.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Pending.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Athlete.js",["434","435"],"\nimport React, { useState, useEffect } from 'react'\nimport {useParams} from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext'\nimport MainHeader from '../headers/MainHeader'\nimport AthleteHeader from './AthleteHeader'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Athlete() {\n    const {currentUser} = useAuth()\n    const {userID} = useParams()\n\n    const [user, setUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setLoading(true)\n        async function fetchData() {\n            try {\n                const res = await api.get(`/users/${userID}`)\n                setUser(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [userID])\n\n    return (\n        <div>\n            <MainHeader />\n            {(!loading && !user) && <h2 style={{paddingTop: 40}}>We couldn't find an athlete at that link</h2>}\n            {(!loading && user) &&\n            <div>\n                <AthleteHeader user={user} subPath='/' />\n                <div className='main-container'>\n\n                </div>\n            </div>\n            }\n            \n        </div>\n\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/AthleteHeader.js",["436","437","438","439"],"import React, {useEffect, useState} from 'react'\nimport SubHeader from '../headers/SubHeader'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useHistory, useParams} from 'react-router-dom'\nimport Confirmation from '../misc/Confirmation'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function AthleteHeader(props) {\n    const {thisUser} = useAuth()\n    const {userID} = useParams()\n    const {setMessage} = useMessage()\n    const history = useHistory()\n\n    const [user, setUser] = useState(props.user)\n    const [followSummary, setFollowSummary] = useState()\n    const [loadingSummary, setLoadingSummary] = useState(true)\n    const [doesFollow, setDoesFollow] = useState()\n    const [loadingDoesFollow, setLoadingDoesFollow] = useState(true)\n\n    const [confirmationHidden, setConfirmationHidden] = useState(true)\n    \n    const items = [\n        {title: 'Overview', path: '/'},\n        {title: 'Following', path: '/following'}\n    ]\n\n    useEffect(() => {\n        setUser(props.user)\n        fetchData()\n    }, [props.user]) \n\n    function fetchData() {\n        fetchFollowSummary()\n        fetchDoesFollow()\n    }\n\n    async function fetchFollowSummary() {\n        try {\n            const res = await api.get(`/follows/user/${userID}/summary`)\n            setFollowSummary(res.data)\n        } catch (error) {console.log(error)}\n        setLoadingSummary(false)\n    }\n\n    async function fetchDoesFollow() {\n        try {\n            const res = await api.get(`/follows/doesfollow?follower=${thisUser._id}&followee=${userID}`)\n            setDoesFollow(res.data.doesFollow)\n        } catch (error) {\n            console.log(error.message)\n        }\n        setLoadingDoesFollow(false)\n    }\n\n    async function handleClickFollow() {\n        try {\n            await api.post('/follows', {follower: thisUser._id, followee: userID})\n            setMessage({title: `You are now following ${user.displayName}`, isError: false, timestamp: moment()})\n        } catch (error) {\n            setMessage({title: `Error following ${user.displayName}. ${error.message}`, isError: true, timestamp: moment()})\n        }\n        fetchData()\n        {props.fetchData && props.fetchData()}\n    }\n\n    async function handleClickConfirmUnfollow() {\n        async function unfollow() {\n            try {\n                await api.delete(`/follows?follower=${thisUser._id}&followee=${userID}`)\n                setMessage({title: `You unfollowed ${user.displayName}`, isError: false, timestamp: moment()})\n            } catch (error) {\n                setMessage({title: `Error unfollowing ${user.displayName}. ${error.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        await unfollow()\n        fetchData()\n        {props.fetchData && props.fetchData()}\n    }\n\n    function routeToFollowing() {\n        if (props.subPath === '/following') { return }\n        history.push(`/athletes/${userID}/following`)\n    }\n\n    return (\n        <div style={{position: 'sticky', top: 0}}>\n            <img className='banner-image' src={user.bannerURL ? user.bannerURL : src} />\n            <SubHeader \n                title={user.displayName}\n                iconURL={user.iconURL}\n                path={`/athletes/${userID}`}\n                subPath={props.subPath}\n                items={items}\n            >\n                {!loadingSummary &&\n                    <div className='d-flex jc-center ai-center' style={{marginRight: 40}}>\n                        <div style={{marginRight: 20, textAlign: 'center'}}>\n                            <h3>{followSummary.followees.toLocaleString()}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Following</h5>\n                        </div>\n                        <div style={{textAlign: 'center'}}>\n                            <h3>{followSummary.followers.toLocaleString()}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Followers</h5>\n                        </div>\n                    </div>\n                }\n                {(!loadingDoesFollow && userID !== thisUser._id) && \n                    (doesFollow ? \n                        <button className='clear-btn-secondary' onClick={() => setConfirmationHidden(false)}>Unfollow</button>\n                        :\n                        <button className='solid-btn-secondary' onClick={handleClickFollow}>Follow</button>\n                    )\n                }\n            </SubHeader>\n            <Confirmation title='Confirm' message={`Are you sure you want to unfollow ${user.displayName}?`}\n                handleClickConfirm={handleClickConfirmUnfollow} hidden={confirmationHidden} setHidden={setConfirmationHidden}\n            />\n        </div>\n    )\n} ","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Following.js",["440","441","442","443","444","445"],"import React, { useState, useEffect } from 'react'\nimport AthleteHeader from './AthleteHeader'\nimport MainHeader from '../headers/MainHeader'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useParams, useHistory} from 'react-router-dom'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Following() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const {userID} = useParams()\n    const history = useHistory()\n\n    const [user, setUser] = useState()\n    const [users, setUsers] = useState([])            // follow(ers/ees)\n    const [loading, setLoading] = useState(true)\n\n    const [followType, setFollowType] = useState('followers')\n\n    useEffect(() => {\n        setLoading(true)\n        async function fetchData() {\n            try {\n                const res = await api.get(`/users/${userID}`)\n                setUser(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n        fetchFollowing()\n    }, [userID])\n\n    useEffect(() => {\n        fetchFollowing()\n    }, [followType])\n\n    async function fetchFollowing() {\n        try {\n            const res = await api.get(`/follows/user/${userID}/${followType}`)\n            setUsers(res.data)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            {(!loading && !user) && <h2 style={{paddingTop: 40}}>We couldn't find an athlete at that link</h2>}\n            {(!loading && user) &&\n            <div>\n                <AthleteHeader user={user} subPath='/following' fetchData={fetchFollowing}/>\n                <div className='main-container'>\n                    <br />\n                    <br />\n                    <select value={followType} onChange={e => setFollowType(e.target.value)}>\n                        <option value='followees'>\n                            {thisUser._id === userID ? \"I'm following\" : `${user.displayName} is following`}\n                        </option>\n                        <option value='followers'>\n                            {thisUser._id === userID ? \"Following me\" : `Following ${user.displayName}`}\n                        </option>\n                    </select>\n                    <br /><br />\n                    <div className='float-container'>\n                        <table style={{width: '100%'}}>\n                            <thead>\n                                <tr><th>Name</th></tr>\n                            </thead>\n                            <tbody>\n                                {users && users.map((u, idx) => (\n                                    <tr key={idx}>\n                                        <td className='d-flex jc-flex-start ai-center'>\n                                            {u.iconURL ? \n                                                <img src={u.iconURL} className='user-icon' />\n                                                :\n                                                <div className='user-icon-default'>\n                                                    <i className='bi bi-person' />\n                                                </div>\n                                            }\n                                            <h4 className='page-link' onClick={() => history.push(`/athletes/${u._id}`)}>\n                                                {u.displayName}\n                                            </h4>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                        {(users && !users.length) && \n                            <h4 className='c-cs' style={{padding: '20px 15px'}}> {followType === 'followers' ? \n                                `${user.displayName} currently has no followers`\n                                :\n                                `${user.displayName} is not following anyone`\n                            }</h4>\n                        }\n                    </div>\n                    \n                </div>\n            </div>\n            }\n            \n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PasswordReset.js",["446","447","448","449","450"],"import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport SignHeader from './headers/SignHeader'\nimport moment from 'moment'\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nexport default function PasswordReset() {\n    const { setMessage } = useMessage()\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const {signIn, continueWithGoogle } = useAuth()\n    const history = useHistory()\n    const [awaitingResponse, setAwaitingResponse] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            await firebase.auth().sendPasswordResetEmail(emailRef.current.value)\n            setMessage({title: 'Check your email for a reset password link.', isError: false, timestamp: moment()})\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    return (\n        <div style={{ height: '100vh'}}>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Reset your password</h3>\n                    <br /><br />\n                    <p className='c-cs'>\n                        Enter the email address associated with your account and we'll send you a link to reset your password.\n                    </p>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Continue</button>\n                    <br /><br />\n                </form>\n            </div>\n\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Don't have an account?</p>\n                <p className='action-link' onClick={handleClickSignUp}>Sign up</p>\n            </div>\n            <div className='login-spacer'></div>\n        </div>\n        \n    );\n}",{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":69,"column":21,"nodeType":"457","endLine":72,"endColumn":23},{"ruleId":"458","severity":1,"message":"459","line":36,"column":17,"nodeType":"457","endLine":36,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":16,"column":12,"nodeType":"462","messageId":"463","endLine":16,"endColumn":23},{"ruleId":"460","severity":1,"message":"464","line":16,"column":35,"nodeType":"462","messageId":"463","endLine":16,"endColumn":48},{"ruleId":"465","severity":1,"message":"466","line":69,"column":8,"nodeType":"467","endLine":69,"endColumn":20,"suggestions":"468"},{"ruleId":"465","severity":1,"message":"469","line":77,"column":8,"nodeType":"467","endLine":77,"endColumn":19,"suggestions":"470"},{"ruleId":"455","severity":1,"message":"456","line":67,"column":21,"nodeType":"457","endLine":70,"endColumn":23},{"ruleId":"465","severity":1,"message":"471","line":91,"column":8,"nodeType":"467","endLine":91,"endColumn":10,"suggestions":"472"},{"ruleId":"460","severity":1,"message":"473","line":1,"column":16,"nodeType":"462","messageId":"463","endLine":1,"endColumn":25},{"ruleId":"460","severity":1,"message":"474","line":8,"column":12,"nodeType":"462","messageId":"463","endLine":8,"endColumn":22},{"ruleId":"460","severity":1,"message":"475","line":8,"column":24,"nodeType":"462","messageId":"463","endLine":8,"endColumn":37},{"ruleId":"455","severity":1,"message":"456","line":52,"column":21,"nodeType":"457","endLine":52,"endColumn":77},{"ruleId":"455","severity":1,"message":"456","line":18,"column":25,"nodeType":"457","endLine":23,"endColumn":27},{"ruleId":"460","severity":1,"message":"461","line":17,"column":12,"nodeType":"462","messageId":"463","endLine":17,"endColumn":23},{"ruleId":"455","severity":1,"message":"456","line":107,"column":41,"nodeType":"457","endLine":111,"endColumn":43},{"ruleId":"455","severity":1,"message":"456","line":134,"column":34,"nodeType":"457","endLine":134,"endColumn":89},{"ruleId":"455","severity":1,"message":"456","line":148,"column":49,"nodeType":"457","endLine":148,"endColumn":93},{"ruleId":"465","severity":1,"message":"476","line":34,"column":8,"nodeType":"467","endLine":34,"endColumn":10,"suggestions":"477"},{"ruleId":"455","severity":1,"message":"456","line":104,"column":62,"nodeType":"457","endLine":104,"endColumn":118},{"ruleId":"455","severity":1,"message":"456","line":107,"column":53,"nodeType":"457","endLine":107,"endColumn":113},{"ruleId":"465","severity":1,"message":"478","line":21,"column":8,"nodeType":"467","endLine":21,"endColumn":20,"suggestions":"479"},{"ruleId":"460","severity":1,"message":"480","line":10,"column":9,"nodeType":"462","messageId":"463","endLine":10,"endColumn":12},{"ruleId":"465","severity":1,"message":"481","line":47,"column":8,"nodeType":"467","endLine":47,"endColumn":10,"suggestions":"482"},{"ruleId":"455","severity":1,"message":"456","line":60,"column":21,"nodeType":"457","endLine":63,"endColumn":23},{"ruleId":"460","severity":1,"message":"483","line":42,"column":19,"nodeType":"462","messageId":"463","endLine":42,"endColumn":22},{"ruleId":"460","severity":1,"message":"484","line":2,"column":8,"nodeType":"462","messageId":"463","endLine":2,"endColumn":15},{"ruleId":"455","severity":1,"message":"456","line":20,"column":21,"nodeType":"457","endLine":20,"endColumn":124},{"ruleId":"455","severity":1,"message":"456","line":22,"column":17,"nodeType":"457","endLine":22,"endColumn":80},{"ruleId":"460","severity":1,"message":"485","line":22,"column":25,"nodeType":"462","messageId":"463","endLine":22,"endColumn":33},{"ruleId":"465","severity":1,"message":"486","line":64,"column":8,"nodeType":"467","endLine":64,"endColumn":10,"suggestions":"487"},{"ruleId":"465","severity":1,"message":"488","line":79,"column":8,"nodeType":"467","endLine":79,"endColumn":10,"suggestions":"489"},{"ruleId":"465","severity":1,"message":"490","line":128,"column":8,"nodeType":"467","endLine":128,"endColumn":16,"suggestions":"491"},{"ruleId":"460","severity":1,"message":"484","line":3,"column":8,"nodeType":"462","messageId":"463","endLine":3,"endColumn":15},{"ruleId":"465","severity":1,"message":"481","line":17,"column":8,"nodeType":"467","endLine":17,"endColumn":15,"suggestions":"492"},{"ruleId":"455","severity":1,"message":"456","line":52,"column":56,"nodeType":"457","endLine":52,"endColumn":112},{"ruleId":"460","severity":1,"message":"493","line":6,"column":7,"nodeType":"462","messageId":"463","endLine":6,"endColumn":10},{"ruleId":"460","severity":1,"message":"494","line":11,"column":12,"nodeType":"462","messageId":"463","endLine":11,"endColumn":19},{"ruleId":"460","severity":1,"message":"495","line":11,"column":21,"nodeType":"462","messageId":"463","endLine":11,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":12,"column":12,"nodeType":"462","messageId":"463","endLine":12,"endColumn":23},{"ruleId":"460","severity":1,"message":"485","line":12,"column":25,"nodeType":"462","messageId":"463","endLine":12,"endColumn":33},{"ruleId":"455","severity":1,"message":"456","line":21,"column":34,"nodeType":"457","endLine":21,"endColumn":113},{"ruleId":"455","severity":1,"message":"456","line":24,"column":25,"nodeType":"457","endLine":24,"endColumn":108},{"ruleId":"465","severity":1,"message":"496","line":56,"column":8,"nodeType":"467","endLine":56,"endColumn":26,"suggestions":"497"},{"ruleId":"465","severity":1,"message":"498","line":65,"column":8,"nodeType":"467","endLine":65,"endColumn":34,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":292,"column":60,"nodeType":"502","messageId":"503","endLine":292,"endColumn":62},{"ruleId":"460","severity":1,"message":"504","line":12,"column":11,"nodeType":"462","messageId":"463","endLine":12,"endColumn":21},{"ruleId":"460","severity":1,"message":"505","line":1,"column":9,"nodeType":"462","messageId":"463","endLine":1,"endColumn":18},{"ruleId":"460","severity":1,"message":"506","line":1,"column":20,"nodeType":"462","messageId":"463","endLine":1,"endColumn":33},{"ruleId":"460","severity":1,"message":"507","line":2,"column":9,"nodeType":"462","messageId":"463","endLine":2,"endColumn":12},{"ruleId":"451","replacedBy":"508"},{"ruleId":"453","replacedBy":"509"},{"ruleId":"510","severity":1,"message":"511","line":232,"column":17,"nodeType":"512","messageId":"513","endLine":232,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":236,"column":17,"nodeType":"512","messageId":"513","endLine":236,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":240,"column":17,"nodeType":"512","messageId":"513","endLine":240,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":244,"column":17,"nodeType":"512","messageId":"513","endLine":244,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":248,"column":17,"nodeType":"512","messageId":"513","endLine":248,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":252,"column":17,"nodeType":"512","messageId":"513","endLine":252,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":256,"column":17,"nodeType":"512","messageId":"513","endLine":256,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":260,"column":17,"nodeType":"512","messageId":"513","endLine":260,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":264,"column":17,"nodeType":"512","messageId":"513","endLine":264,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":284,"column":17,"nodeType":"512","messageId":"513","endLine":284,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":288,"column":17,"nodeType":"512","messageId":"513","endLine":288,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":292,"column":17,"nodeType":"512","messageId":"513","endLine":292,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":314,"column":17,"nodeType":"512","messageId":"513","endLine":314,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":318,"column":17,"nodeType":"512","messageId":"513","endLine":318,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":322,"column":17,"nodeType":"512","messageId":"513","endLine":322,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":326,"column":17,"nodeType":"512","messageId":"513","endLine":326,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":330,"column":17,"nodeType":"512","messageId":"513","endLine":330,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":334,"column":17,"nodeType":"512","messageId":"513","endLine":334,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":338,"column":17,"nodeType":"512","messageId":"513","endLine":338,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":342,"column":17,"nodeType":"512","messageId":"513","endLine":342,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":346,"column":17,"nodeType":"512","messageId":"513","endLine":346,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":350,"column":17,"nodeType":"512","messageId":"513","endLine":350,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":354,"column":17,"nodeType":"512","messageId":"513","endLine":354,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":358,"column":17,"nodeType":"512","messageId":"513","endLine":358,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":362,"column":17,"nodeType":"512","messageId":"513","endLine":362,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":517,"column":38,"nodeType":"502","messageId":"503","endLine":517,"endColumn":40},{"ruleId":"510","severity":1,"message":"511","line":16,"column":60,"nodeType":"512","messageId":"513","endLine":16,"endColumn":66},{"ruleId":"510","severity":1,"message":"511","line":17,"column":57,"nodeType":"512","messageId":"513","endLine":17,"endColumn":63},{"ruleId":"510","severity":1,"message":"511","line":18,"column":62,"nodeType":"512","messageId":"513","endLine":18,"endColumn":68},{"ruleId":"510","severity":1,"message":"511","line":19,"column":59,"nodeType":"512","messageId":"513","endLine":19,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":20,"column":62,"nodeType":"512","messageId":"513","endLine":20,"endColumn":68},{"ruleId":"510","severity":1,"message":"511","line":21,"column":59,"nodeType":"512","messageId":"513","endLine":21,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":22,"column":61,"nodeType":"512","messageId":"513","endLine":22,"endColumn":67},{"ruleId":"510","severity":1,"message":"511","line":23,"column":61,"nodeType":"512","messageId":"513","endLine":23,"endColumn":67},{"ruleId":"510","severity":1,"message":"511","line":24,"column":59,"nodeType":"512","messageId":"513","endLine":24,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":25,"column":71,"nodeType":"512","messageId":"513","endLine":25,"endColumn":77},{"ruleId":"510","severity":1,"message":"511","line":26,"column":56,"nodeType":"512","messageId":"513","endLine":26,"endColumn":62},{"ruleId":"514","severity":1,"message":"515","line":27,"column":29,"nodeType":"467","messageId":"516","endLine":27,"endColumn":61},{"ruleId":"510","severity":1,"message":"511","line":27,"column":63,"nodeType":"512","messageId":"513","endLine":27,"endColumn":69},{"ruleId":"514","severity":1,"message":"515","line":28,"column":29,"nodeType":"467","messageId":"516","endLine":28,"endColumn":62},{"ruleId":"510","severity":1,"message":"511","line":28,"column":64,"nodeType":"512","messageId":"513","endLine":28,"endColumn":70},{"ruleId":"510","severity":1,"message":"511","line":36,"column":45,"nodeType":"512","messageId":"513","endLine":36,"endColumn":51},{"ruleId":"510","severity":1,"message":"511","line":37,"column":49,"nodeType":"512","messageId":"513","endLine":37,"endColumn":55},{"ruleId":"510","severity":1,"message":"511","line":38,"column":45,"nodeType":"512","messageId":"513","endLine":38,"endColumn":51},{"ruleId":"510","severity":1,"message":"511","line":39,"column":61,"nodeType":"512","messageId":"513","endLine":39,"endColumn":67},{"ruleId":"510","severity":1,"message":"511","line":40,"column":65,"nodeType":"512","messageId":"513","endLine":40,"endColumn":71},{"ruleId":"510","severity":1,"message":"511","line":41,"column":56,"nodeType":"512","messageId":"513","endLine":41,"endColumn":62},{"ruleId":"510","severity":1,"message":"511","line":42,"column":48,"nodeType":"512","messageId":"513","endLine":42,"endColumn":54},{"ruleId":"510","severity":1,"message":"511","line":43,"column":64,"nodeType":"512","messageId":"513","endLine":43,"endColumn":70},{"ruleId":"510","severity":1,"message":"511","line":44,"column":52,"nodeType":"512","messageId":"513","endLine":44,"endColumn":58},{"ruleId":"510","severity":1,"message":"511","line":45,"column":68,"nodeType":"512","messageId":"513","endLine":45,"endColumn":74},{"ruleId":"510","severity":1,"message":"511","line":54,"column":55,"nodeType":"512","messageId":"513","endLine":54,"endColumn":61},{"ruleId":"510","severity":1,"message":"511","line":55,"column":53,"nodeType":"512","messageId":"513","endLine":55,"endColumn":59},{"ruleId":"510","severity":1,"message":"511","line":56,"column":57,"nodeType":"512","messageId":"513","endLine":56,"endColumn":63},{"ruleId":"510","severity":1,"message":"511","line":57,"column":55,"nodeType":"512","messageId":"513","endLine":57,"endColumn":61},{"ruleId":"510","severity":1,"message":"511","line":58,"column":60,"nodeType":"512","messageId":"513","endLine":58,"endColumn":66},{"ruleId":"510","severity":1,"message":"511","line":59,"column":64,"nodeType":"512","messageId":"513","endLine":59,"endColumn":70},{"ruleId":"510","severity":1,"message":"511","line":60,"column":72,"nodeType":"512","messageId":"513","endLine":60,"endColumn":78},{"ruleId":"510","severity":1,"message":"511","line":61,"column":76,"nodeType":"512","messageId":"513","endLine":61,"endColumn":82},{"ruleId":"510","severity":1,"message":"511","line":62,"column":68,"nodeType":"512","messageId":"513","endLine":62,"endColumn":74},{"ruleId":"510","severity":1,"message":"511","line":63,"column":72,"nodeType":"512","messageId":"513","endLine":63,"endColumn":78},{"ruleId":"510","severity":1,"message":"511","line":64,"column":54,"nodeType":"512","messageId":"513","endLine":64,"endColumn":60},{"ruleId":"510","severity":1,"message":"511","line":65,"column":52,"nodeType":"512","messageId":"513","endLine":65,"endColumn":58},{"ruleId":"510","severity":1,"message":"511","line":66,"column":57,"nodeType":"512","messageId":"513","endLine":66,"endColumn":63},{"ruleId":"510","severity":1,"message":"511","line":67,"column":48,"nodeType":"512","messageId":"513","endLine":67,"endColumn":54},{"ruleId":"510","severity":1,"message":"511","line":75,"column":40,"nodeType":"512","messageId":"513","endLine":75,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":76,"column":38,"nodeType":"512","messageId":"513","endLine":76,"endColumn":44},{"ruleId":"510","severity":1,"message":"511","line":84,"column":58,"nodeType":"512","messageId":"513","endLine":84,"endColumn":64},{"ruleId":"510","severity":1,"message":"511","line":85,"column":53,"nodeType":"512","messageId":"513","endLine":85,"endColumn":59},{"ruleId":"510","severity":1,"message":"511","line":86,"column":39,"nodeType":"512","messageId":"513","endLine":86,"endColumn":45},{"ruleId":"510","severity":1,"message":"511","line":87,"column":52,"nodeType":"512","messageId":"513","endLine":87,"endColumn":58},{"ruleId":"510","severity":1,"message":"511","line":88,"column":40,"nodeType":"512","messageId":"513","endLine":88,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":113,"column":36,"nodeType":"512","messageId":"513","endLine":113,"endColumn":42},{"ruleId":"510","severity":1,"message":"511","line":114,"column":43,"nodeType":"512","messageId":"513","endLine":114,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":115,"column":43,"nodeType":"512","messageId":"513","endLine":115,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":116,"column":40,"nodeType":"512","messageId":"513","endLine":116,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":132,"column":18,"nodeType":"502","messageId":"503","endLine":132,"endColumn":20},{"ruleId":"517","severity":1,"message":"518","line":357,"column":5,"nodeType":"519","messageId":"503","endLine":357,"endColumn":16},{"ruleId":"517","severity":1,"message":"520","line":369,"column":5,"nodeType":"519","messageId":"503","endLine":369,"endColumn":18},{"ruleId":"517","severity":1,"message":"521","line":433,"column":5,"nodeType":"519","messageId":"503","endLine":433,"endColumn":24},{"ruleId":"451","replacedBy":"522"},{"ruleId":"453","replacedBy":"523"},{"ruleId":"460","severity":1,"message":"524","line":14,"column":12,"nodeType":"462","messageId":"463","endLine":14,"endColumn":22},{"ruleId":"460","severity":1,"message":"525","line":33,"column":12,"nodeType":"462","messageId":"463","endLine":33,"endColumn":29},{"ruleId":"465","severity":1,"message":"526","line":60,"column":8,"nodeType":"467","endLine":60,"endColumn":10,"suggestions":"527"},{"ruleId":"528","severity":1,"message":"529","line":139,"column":9,"nodeType":"530","messageId":"531","endLine":149,"endColumn":10},{"ruleId":"465","severity":1,"message":"478","line":68,"column":8,"nodeType":"467","endLine":68,"endColumn":10,"suggestions":"532"},{"ruleId":"465","severity":1,"message":"533","line":111,"column":8,"nodeType":"467","endLine":111,"endColumn":34,"suggestions":"534"},{"ruleId":"460","severity":1,"message":"475","line":8,"column":24,"nodeType":"462","messageId":"463","endLine":8,"endColumn":37},{"ruleId":"460","severity":1,"message":"524","line":10,"column":12,"nodeType":"462","messageId":"463","endLine":10,"endColumn":22},{"ruleId":"460","severity":1,"message":"535","line":20,"column":11,"nodeType":"462","messageId":"463","endLine":20,"endColumn":23},{"ruleId":"460","severity":1,"message":"536","line":22,"column":11,"nodeType":"462","messageId":"463","endLine":22,"endColumn":14},{"ruleId":"517","severity":1,"message":"537","line":46,"column":29,"nodeType":"519","messageId":"503","endLine":46,"endColumn":49},{"ruleId":"460","severity":1,"message":"538","line":2,"column":8,"nodeType":"462","messageId":"463","endLine":2,"endColumn":16},{"ruleId":"460","severity":1,"message":"493","line":8,"column":7,"nodeType":"462","messageId":"463","endLine":8,"endColumn":10},{"ruleId":"465","severity":1,"message":"539","line":36,"column":8,"nodeType":"467","endLine":36,"endColumn":26,"suggestions":"540"},{"ruleId":"465","severity":1,"message":"541","line":41,"column":8,"nodeType":"467","endLine":41,"endColumn":34,"suggestions":"542"},{"ruleId":"500","severity":1,"message":"501","line":104,"column":56,"nodeType":"502","messageId":"503","endLine":104,"endColumn":58},{"ruleId":"517","severity":1,"message":"543","line":44,"column":21,"nodeType":"519","messageId":"503","endLine":44,"endColumn":36},{"ruleId":"460","severity":1,"message":"473","line":2,"column":26,"nodeType":"462","messageId":"463","endLine":2,"endColumn":35},{"ruleId":"460","severity":1,"message":"464","line":17,"column":35,"nodeType":"462","messageId":"463","endLine":17,"endColumn":48},{"ruleId":"455","severity":1,"message":"456","line":115,"column":21,"nodeType":"457","endLine":115,"endColumn":71},{"ruleId":"455","severity":1,"message":"456","line":141,"column":21,"nodeType":"457","endLine":141,"endColumn":109},{"ruleId":"460","severity":1,"message":"473","line":2,"column":26,"nodeType":"462","messageId":"463","endLine":2,"endColumn":35},{"ruleId":"460","severity":1,"message":"484","line":9,"column":8,"nodeType":"462","messageId":"463","endLine":9,"endColumn":15},{"ruleId":"460","severity":1,"message":"493","line":16,"column":7,"nodeType":"462","messageId":"463","endLine":16,"endColumn":10},{"ruleId":"460","severity":1,"message":"544","line":2,"column":10,"nodeType":"462","messageId":"463","endLine":2,"endColumn":18},{"ruleId":"465","severity":1,"message":"545","line":27,"column":8,"nodeType":"467","endLine":27,"endColumn":17,"suggestions":"546"},{"ruleId":"547","severity":1,"message":"548","line":30,"column":38,"nodeType":"549","messageId":"550","endLine":31,"endColumn":13,"fix":"551"},{"ruleId":"460","severity":1,"message":"552","line":42,"column":11,"nodeType":"462","messageId":"463","endLine":42,"endColumn":24},{"ruleId":"460","severity":1,"message":"553","line":3,"column":8,"nodeType":"462","messageId":"463","endLine":3,"endColumn":17},{"ruleId":"460","severity":1,"message":"554","line":7,"column":20,"nodeType":"462","messageId":"463","endLine":7,"endColumn":31},{"ruleId":"465","severity":1,"message":"478","line":25,"column":8,"nodeType":"467","endLine":25,"endColumn":17,"suggestions":"555"},{"ruleId":"460","severity":1,"message":"556","line":3,"column":9,"nodeType":"462","messageId":"463","endLine":3,"endColumn":18},{"ruleId":"460","severity":1,"message":"557","line":11,"column":7,"nodeType":"462","messageId":"463","endLine":11,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":17,"column":12,"nodeType":"462","messageId":"463","endLine":17,"endColumn":23},{"ruleId":"460","severity":1,"message":"558","line":18,"column":11,"nodeType":"462","messageId":"463","endLine":18,"endColumn":18},{"ruleId":"460","severity":1,"message":"559","line":23,"column":12,"nodeType":"462","messageId":"463","endLine":23,"endColumn":20},{"ruleId":"460","severity":1,"message":"560","line":23,"column":22,"nodeType":"462","messageId":"463","endLine":23,"endColumn":33},{"ruleId":"455","severity":1,"message":"456","line":72,"column":13,"nodeType":"457","endLine":72,"endColumn":95},{"ruleId":"465","severity":1,"message":"478","line":26,"column":8,"nodeType":"467","endLine":26,"endColumn":17,"suggestions":"561"},{"ruleId":"465","severity":1,"message":"562","line":30,"column":8,"nodeType":"467","endLine":30,"endColumn":14,"suggestions":"563"},{"ruleId":"455","severity":1,"message":"456","line":86,"column":49,"nodeType":"457","endLine":86,"endColumn":107},{"ruleId":"455","severity":1,"message":"456","line":116,"column":49,"nodeType":"457","endLine":116,"endColumn":108},{"ruleId":"460","severity":1,"message":"484","line":7,"column":8,"nodeType":"462","messageId":"463","endLine":7,"endColumn":15},{"ruleId":"460","severity":1,"message":"461","line":15,"column":12,"nodeType":"462","messageId":"463","endLine":15,"endColumn":23},{"ruleId":"465","severity":1,"message":"478","line":38,"column":8,"nodeType":"467","endLine":38,"endColumn":20,"suggestions":"564"},{"ruleId":"565","severity":1,"message":"566","line":71,"column":9,"nodeType":"567","messageId":"568","endLine":71,"endColumn":47},{"ruleId":"565","severity":1,"message":"566","line":85,"column":9,"nodeType":"567","messageId":"568","endLine":85,"endColumn":47},{"ruleId":"455","severity":1,"message":"456","line":95,"column":13,"nodeType":"457","endLine":95,"endColumn":89},{"ruleId":"460","severity":1,"message":"484","line":7,"column":8,"nodeType":"462","messageId":"463","endLine":7,"endColumn":15},{"ruleId":"460","severity":1,"message":"461","line":15,"column":12,"nodeType":"462","messageId":"463","endLine":15,"endColumn":23},{"ruleId":"460","severity":1,"message":"569","line":16,"column":12,"nodeType":"462","messageId":"463","endLine":16,"endColumn":22},{"ruleId":"465","severity":1,"message":"570","line":39,"column":8,"nodeType":"467","endLine":39,"endColumn":16,"suggestions":"571"},{"ruleId":"465","severity":1,"message":"570","line":43,"column":8,"nodeType":"467","endLine":43,"endColumn":20,"suggestions":"572"},{"ruleId":"455","severity":1,"message":"456","line":83,"column":49,"nodeType":"457","endLine":83,"endColumn":94},{"ruleId":"460","severity":1,"message":"573","line":13,"column":11,"nodeType":"462","messageId":"463","endLine":13,"endColumn":22},{"ruleId":"460","severity":1,"message":"574","line":14,"column":12,"nodeType":"462","messageId":"463","endLine":14,"endColumn":18},{"ruleId":"460","severity":1,"message":"575","line":14,"column":20,"nodeType":"462","messageId":"463","endLine":14,"endColumn":38},{"ruleId":"460","severity":1,"message":"576","line":16,"column":12,"nodeType":"462","messageId":"463","endLine":16,"endColumn":28},{"ruleId":"460","severity":1,"message":"577","line":16,"column":30,"nodeType":"462","messageId":"463","endLine":16,"endColumn":49},"no-native-reassign",["578"],"no-negated-in-lhs",["579"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'fetchThisUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cssVars' and 'thisUser'. Either include them or remove the dependency array.","ArrayExpression",["580"],"React Hook useEffect has a missing dependency: 'tintColors'. Either include it or remove the dependency array.",["581"],"React Hook useEffect has missing dependencies: '__fetchThisUser' and 'history'. Either include them or remove the dependency array.",["582"],"'useEffect' is defined but never used.","'isDarkMode' is assigned a value but never used.","'setIsDarkMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchClubs' and 'fetchSessions'. Either include them or remove the dependency array.",["583"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["584"],"'Bar' is defined but never used.","React Hook useEffect has a missing dependency: 'thisUser._id'. Either include it or remove the dependency array.",["585"],"'res' is assigned a value but never used.","'Loading' is defined but never used.","'thisUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pm5'. Either include it or remove the dependency array.",["586"],"React Hook useEffect has missing dependencies: 'fetchActivities' and 'fetchSession'. Either include them or remove the dependency array.",["587"],"React Hook useEffect has missing dependencies: 'activityInProgress' and 'lastPatchTime'. Either include them or remove the dependency array.",["588"],["589"],"'api' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["590"],"React Hook useEffect has a missing dependency: 'activityInProgress'. Either include it or remove the dependency array.",["591"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'thinBorder' is assigned a value but never used.","'pm5fields' is defined but never used.","'pm5printables' is defined but never used.","'PM5' is defined but never used.",["578"],["579"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","no-dupe-keys","Duplicate key 'strokeCount'.","ObjectExpression","Duplicate key 'workPerStroke'.","Duplicate key 'splitIntervalNumber'.",["578"],["579"],"'localTheme' is assigned a value but never used.","'prevQueryReadable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'distanceFilter', 'prevQuery', and 'thisUser._id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPrevQuery' needs the current value of 'distanceFilter'.",["592"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["593"],"React Hook useEffect has missing dependencies: 'results.count' and 'sortActivities'. Either include them or remove the dependency array.",["594"],"'tooltipColor' is assigned a value but never used.","'bgc' is assigned a value but never used.","Duplicate key 'pointBackgroundColor'.","'C2Screen' is defined but never used.","React Hook useEffect has missing dependencies: 'hideSelf' and 'sortActivities'. Either include them or remove the dependency array.",["595"],"React Hook useEffect has missing dependencies: 'activities', 'hideSelf', and 'sortActivities'. Either include them or remove the dependency array. You can also do a functional update 'setActivities(a => ...)' if you only need 'activities' in the 'setActivities' call.",["596"],"Duplicate key 'backgroundColor'.","'useTheme' is defined but never used.","React Hook useEffect has missing dependencies: 'messageTimestamps' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["597"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"598","text":"599"},"'messageHeight' is assigned a value but never used.","'SubHeader' is defined but never used.","'useLocation' is defined but never used.",["600"],"'useParams' is defined but never used.","'src' is assigned a value but never used.","'history' is assigned a value but never used.","'isMember' is assigned a value but never used.","'setIsMember' is assigned a value but never used.",["601"],"React Hook useEffect has a missing dependency: 'fetchMembers'. Either include it or remove the dependency array.",["602"],["603"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFollowing'. Either include it or remove the dependency array.",["604"],["605"],"'passwordRef' is assigned a value but never used.","'signIn' is assigned a value but never used.","'continueWithGoogle' is assigned a value but never used.","'awaitingResponse' is assigned a value but never used.","'setAwaitingResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},[1046,1059],"",{"desc":"642","fix":"643"},{"desc":"642","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},"Update the dependencies array to be: [cssVars, isDarkMode, thisUser]",{"range":"653","text":"654"},"Update the dependencies array to be: [tintColor, tintColors]",{"range":"655","text":"656"},"Update the dependencies array to be: [__fetchThisUser, history]",{"range":"657","text":"658"},"Update the dependencies array to be: [fetchClubs, fetchSessions]",{"range":"659","text":"660"},"Update the dependencies array to be: [currMoment, fetchData]",{"range":"661","text":"662"},"Update the dependencies array to be: [thisUser._id]",{"range":"663","text":"664"},"Update the dependencies array to be: [pm5]",{"range":"665","text":"666"},"Update the dependencies array to be: [fetchActivities, fetchSession]",{"range":"667","text":"668"},"Update the dependencies array to be: [C2Data, activityInProgress, lastPatchTime]",{"range":"669","text":"670"},"Update the dependencies array to be: [props, thisUser._id]",{"range":"671","text":"672"},"Update the dependencies array to be: [currentUser.uid, props.activities]",{"range":"673","text":"674"},"Update the dependencies array to be: [activityInProgress, props.activityInProgress]",{"range":"675","text":"676"},"Update the dependencies array to be: [distanceFilter, prevQuery, thisUser._id]",{"range":"677","text":"678"},"Update the dependencies array to be: [fetchData]",{"range":"679","text":"680"},"Update the dependencies array to be: [results.count, sortActivities, sortAscending, sortedKey]",{"range":"681","text":"682"},"Update the dependencies array to be: [hideSelf, props.activities, sortActivities]",{"range":"683","text":"684"},"Update the dependencies array to be: [activities, hideSelf, sortActivities, sortAscending, sortedKey]",{"range":"685","text":"686"},"Update the dependencies array to be: [message, messageTimestamps, messages]",{"range":"687","text":"688"},"Update the dependencies array to be: [clubURL, fetchData]",{"range":"689","text":"690"},{"range":"691","text":"690"},"Update the dependencies array to be: [club, fetchMembers]",{"range":"692","text":"693"},"Update the dependencies array to be: [fetchData, props.user]",{"range":"694","text":"695"},"Update the dependencies array to be: [fetchFollowing, userID]",{"range":"696","text":"697"},"Update the dependencies array to be: [fetchFollowing, followType]",{"range":"698","text":"699"},[1897,1909],"[cssVars, isDarkMode, thisUser]",[2222,2233],"[tintColor, tintColors]",[2851,2853],"[__fetchThisUser, history]",[1068,1070],"[fetchClubs, fetchSessions]",[604,616],"[currMoment, fetchData]",[1268,1270],"[thisUser._id]",[2188,2190],"[pm5]",[2575,2577],"[fetchActivities, fetchSession]",[4198,4206],"[C2Data, activityInProgress, lastPatchTime]",[576,583],"[props, thisUser._id]",[2050,2068],"[currentUser.uid, props.activities]",[2312,2338],"[activityInProgress, props.activityInProgress]",[2219,2221],"[distanceFilter, prevQuery, thisUser._id]",[2646,2648],"[fetchData]",[4105,4131],"[results.count, sortActivities, sortAscending, sortedKey]",[1203,1221],"[hideSelf, props.activities, sortActivities]",[1339,1365],"[activities, hideSelf, sortActivities, sortAscending, sortedKey]",[958,967],"[message, messageTimestamps, messages]",[771,780],"[clubURL, fetchData]",[800,809],[864,870],"[club, fetchMembers]",[1259,1271],"[fetchData, props.user]",[1232,1240],"[fetchFollowing, userID]",[1297,1309],"[fetchFollowing, followType]"]