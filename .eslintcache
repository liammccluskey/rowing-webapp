[{"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/index.js":"1","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/App.js":"2","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/reportWebVitals.js":"3","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Register.js":"4","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Landing.js":"5","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/ThemeContext.js":"6","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PrivateRoute.js":"7","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Login.js":"8","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/AuthContext.js":"9","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/firebase.js":"10","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/LandingHeader.js":"11","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SignHeader.js":"12","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/MainHeader.js":"13","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SubHeader.js":"14","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Clubs.js":"15","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/ExploreHeader.js":"16","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/CreateClub.js":"17","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Loading.js":"18","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Dashboard.js":"19","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/UserInfoCard.js":"20","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/NewSessionForm.js":"21","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/ClubsInfoCard.js":"22","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/Session.js":"23","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/MembersInfoCard.js":"24","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/SessionInfoCard.js":"25","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/LiveActivityTable.js":"26","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Screen.js":"27","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5.js":"28","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5-printables.js":"29","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomBar.js":"30","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Statistics.js":"31","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Activity.js":"32","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/TrainingHeader.js":"33","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomScatter.js":"34","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomLine.js":"35","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/ResultsTable.js":"36","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/DropdownMenu.js":"37","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Paginator.js":"38","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Profile.js":"39","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Preferences.js":"40","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Settings.js":"41","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/MessageContext.js":"42","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Club.js":"43","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/ClubHeader.js":"44","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Members.js":"45","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Confirmation.js":"46","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Pending.js":"47","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Athlete.js":"48","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/AthleteHeader.js":"49","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Following.js":"50","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PasswordReset.js":"51","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Athletes.js":"52","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Results.js":"53","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/ActivityCard.js":"54","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/CommentSection.js":"55","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/scripts/Numbers.js":"56","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/SessionCard.js":"57","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/icons/ClubIcon.js":"58","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/ReplySection.js":"59","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/Comment.js":"60","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/AdminCard.js":"61","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/PendingMemberCard.js":"62","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/MemberCard.js":"63","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/EditClub.js":"64","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Calendar.js":"65","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomGroupedBar.js":"66","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/chat/Chat.js":"67","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/DatePicker.js":"68","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/YearHeatmap.js":"69","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/SocialInfoCard.js":"70","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/FeedLoader.js":"71"},{"size":500,"mtime":1611253308193,"results":"72","hashOfConfig":"73"},{"size":3035,"mtime":1620691931210,"results":"74","hashOfConfig":"73"},{"size":362,"mtime":1611253308195,"results":"75","hashOfConfig":"73"},{"size":3156,"mtime":1618532835377,"results":"76","hashOfConfig":"73"},{"size":5553,"mtime":1622415145098,"results":"77","hashOfConfig":"73"},{"size":3027,"mtime":1622422724551,"results":"78","hashOfConfig":"73"},{"size":455,"mtime":1618257370832,"results":"79","hashOfConfig":"73"},{"size":3088,"mtime":1621219894015,"results":"80","hashOfConfig":"73"},{"size":3161,"mtime":1620162747608,"results":"81","hashOfConfig":"73"},{"size":948,"mtime":1618341977746,"results":"82","hashOfConfig":"73"},{"size":1151,"mtime":1622390884770,"results":"83","hashOfConfig":"73"},{"size":715,"mtime":1622328842759,"results":"84","hashOfConfig":"73"},{"size":2830,"mtime":1621978497261,"results":"85","hashOfConfig":"73"},{"size":1596,"mtime":1619399169971,"results":"86","hashOfConfig":"73"},{"size":4756,"mtime":1621096197738,"results":"87","hashOfConfig":"73"},{"size":405,"mtime":1618542430025,"results":"88","hashOfConfig":"73"},{"size":8503,"mtime":1621219981755,"results":"89","hashOfConfig":"73"},{"size":297,"mtime":1616193195394,"results":"90","hashOfConfig":"73"},{"size":8587,"mtime":1621979200597,"results":"91","hashOfConfig":"73"},{"size":13600,"mtime":1623175368008,"results":"92","hashOfConfig":"73"},{"size":7201,"mtime":1622422461785,"results":"93","hashOfConfig":"73"},{"size":1135,"mtime":1621905359145,"results":"94","hashOfConfig":"73"},{"size":7645,"mtime":1622322368207,"results":"95","hashOfConfig":"73"},{"size":2518,"mtime":1618762234756,"results":"96","hashOfConfig":"97"},{"size":1638,"mtime":1620767124226,"results":"98","hashOfConfig":"73"},{"size":12205,"mtime":1622303213362,"results":"99","hashOfConfig":"73"},{"size":4088,"mtime":1622303081289,"results":"100","hashOfConfig":"73"},{"size":43831,"mtime":1619886631600,"results":"101","hashOfConfig":"73"},{"size":15919,"mtime":1615495125619,"results":"102","hashOfConfig":"97"},{"size":4811,"mtime":1623177788609,"results":"103","hashOfConfig":"73"},{"size":31052,"mtime":1623258281056,"results":"104","hashOfConfig":"73"},{"size":12876,"mtime":1623180258253,"results":"105","hashOfConfig":"73"},{"size":498,"mtime":1620238879681,"results":"106","hashOfConfig":"73"},{"size":2247,"mtime":1615813736227,"results":"107","hashOfConfig":"97"},{"size":5037,"mtime":1622052459352,"results":"108","hashOfConfig":"73"},{"size":4934,"mtime":1621089609785,"results":"109","hashOfConfig":"73"},{"size":4997,"mtime":1622063299175,"results":"110","hashOfConfig":"73"},{"size":1452,"mtime":1619036925803,"results":"111","hashOfConfig":"73"},{"size":7992,"mtime":1621126592883,"results":"112","hashOfConfig":"73"},{"size":4432,"mtime":1622224671392,"results":"113","hashOfConfig":"73"},{"size":6452,"mtime":1622224555223,"results":"114","hashOfConfig":"73"},{"size":3513,"mtime":1621126301933,"results":"115","hashOfConfig":"73"},{"size":7598,"mtime":1621904178937,"results":"116","hashOfConfig":"73"},{"size":3670,"mtime":1620159547585,"results":"117","hashOfConfig":"73"},{"size":6792,"mtime":1621389059718,"results":"118","hashOfConfig":"73"},{"size":2256,"mtime":1620148192894,"results":"119","hashOfConfig":"73"},{"size":216,"mtime":1621895999022,"results":"120","hashOfConfig":"73"},{"size":6455,"mtime":1621904130998,"results":"121","hashOfConfig":"73"},{"size":4995,"mtime":1621885740114,"results":"122","hashOfConfig":"73"},{"size":4500,"mtime":1620153100844,"results":"123","hashOfConfig":"73"},{"size":2315,"mtime":1618839575634,"results":"124","hashOfConfig":"73"},{"size":4543,"mtime":1621096176188,"results":"125","hashOfConfig":"73"},{"size":1929,"mtime":1622302772022,"results":"126","hashOfConfig":"73"},{"size":2814,"mtime":1621965931004,"results":"127","hashOfConfig":"73"},{"size":6790,"mtime":1619204011914,"results":"128","hashOfConfig":"73"},{"size":671,"mtime":1619106572881,"results":"129","hashOfConfig":"73"},{"size":1247,"mtime":1620706861190,"results":"130","hashOfConfig":"73"},{"size":742,"mtime":1620149076914,"results":"131","hashOfConfig":"73"},{"size":1934,"mtime":1620693733020,"results":"132","hashOfConfig":"73"},{"size":6509,"mtime":1620077727642,"results":"133","hashOfConfig":"73"},{"size":2162,"mtime":1619392014881,"results":"134","hashOfConfig":"73"},{"size":1541,"mtime":1619392010254,"results":"135","hashOfConfig":"73"},{"size":1500,"mtime":1619392118998,"results":"136","hashOfConfig":"73"},{"size":11236,"mtime":1620156908278,"results":"137","hashOfConfig":"73"},{"size":12545,"mtime":1621607230885,"results":"138","hashOfConfig":"73"},{"size":4207,"mtime":1622052432036,"results":"139","hashOfConfig":"73"},{"size":11516,"mtime":1621190358118,"results":"140","hashOfConfig":"73"},{"size":9557,"mtime":1621363533314,"results":"141","hashOfConfig":"73"},{"size":5837,"mtime":1622423847119,"results":"142","hashOfConfig":"73"},{"size":2155,"mtime":1621885797099,"results":"143","hashOfConfig":"73"},{"size":865,"mtime":1623037071804,"results":"144","hashOfConfig":"73"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"1w9aazz",{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"147"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"147"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"147"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"147"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"147"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"147"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"147"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"147"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"147"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"147"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"147"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"147"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"147"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"147"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},"1mz972p",{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"147"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"147"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"147"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"147"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"147"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"147"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"147"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"147"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"147"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"147"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"147"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"147"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"261","usedDeprecatedRules":"147"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"147"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"147"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"147"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"147"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"147"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"147"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"147"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"147"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"147"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"147"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"147"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"147"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"147"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"147"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"147"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"147"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"147"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"147"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"147"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"147"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"147"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"147"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"147"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"147"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"147"},"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/index.js",[],["346","347"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/App.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/reportWebVitals.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Register.js",["348"],"import React, { useState, useRef } from \"react\"\nimport SignHeader from \"./headers/SignHeader\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport {useHistory} from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport moment from 'moment'\n\nexport default function Register() {\n    const history = useHistory()\n    const { setMessage } = useMessage()\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const nameRef = useRef()\n    const {signUp, continueWithGoogle} = useAuth()\n    const [awaitingResponse, setAwaitingResponse] = useState(false) \n\n\n    async function handleSubmit (e) {\n        e.preventDefault()\n        try {\n            setAwaitingResponse(true)\n            await signUp(nameRef.current.value, emailRef.current.value, passwordRef.current.value)\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n            setAwaitingResponse(false)\n        }\n    }\n\n    async function handleContinueWithGoogle() {\n        try {\n            await continueWithGoogle()\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignIn() {\n        history.push('/login')\n    }\n\n    return (\n        <div className='login-page'>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Create your account</h3>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br />\n                    <label>Full name <br />\n                        <input ref={nameRef} type='text' required />\n                    </label>\n                    <br /><br />\n                    <label>Password <br />\n                        <input ref={passwordRef}  type=\"password\" name=\"password\" id=\"password\" required/>\n                    </label>\n                    <br />\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Create account</button>\n                    <br /><br />\n                </form>\n                <h4 className='d-flex jc-center'>or</h4>\n                <br />\n                <button className='clear-btn-secondary' disabled={awaitingResponse} onClick={handleContinueWithGoogle} >\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                        height='18px' width='18px'\n                    />\n                    Continue with Google\n                </button>\n            </div>\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Already have an account?</p>\n                <p className='action-link' onClick={handleClickSignIn}>Sign in</p>\n            </div>\n            \n            <div className='login-spacer'></div>\n        </div>\n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Landing.js",["349","350","351","352"],"import React, {useState, useEffect} from \"react\"\nimport LandingHeader from \"./headers/LandingHeader\";\nimport { useHistory } from 'react-router-dom'\nimport {useTheme} from '../contexts/ThemeContext'\n\nconst src_dashboard = 'https://firebasestorage.googleapis.com/v0/b/rowing-a06ba.appspot.com/o/landing%2Fdashboard_page.png?alt=media&token=11d6adb2-1f37-41c1-9b7a-ec75b9d44129'\nconst src_session = 'https://firebasestorage.googleapis.com/v0/b/rowing-a06ba.appspot.com/o/landing%2Fsession_page.png?alt=media&token=4ddffe42-46f8-4894-b3f7-c4c0e0286c97'\nconst src_statistics = 'https://firebasestorage.googleapis.com/v0/b/rowing-a06ba.appspot.com/o/landing%2Fstats_page.png?alt=media&token=677c4680-1e32-4f0f-9c15-9df73ec3a4b0'\nconst src_club_profile = ''\nconst src_subreddit = 'https://firebasestorage.googleapis.com/v0/b/rowing-a06ba.appspot.com/o/landing%2Fsubreddit_page.png?alt=media&token=5860433e-803f-4b49-a0dc-f54b083b0312'\n\n\nexport default function Landing() {\n    const history = useHistory()\n    const {setThemeColor, setTintColor} = useTheme()\n\n    const [selectedTab, setSelectedTab] = useState(1)\n    const heroTabs = [\n        {src: src_dashboard, title: 'Dashboard'},\n        {src: src_session, title: 'Live Workout'},\n        {src: src_statistics, title: 'Athlete Statistics'}\n    ]\n\n    useEffect(() => {\n        setThemeColor(0) // light mode\n        setTintColor(3)\n    }, [])\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    return (\n        <div style={{minHeight: '100vh'}} className='landing-page'>\n            <LandingHeader />\n            <div className='landing-container-12 landing-hero-section' >\n                <div>\n                    <h1 className='fw-m'>The ultimate training platform for rowers</h1>\n                    <br /><br />\n                    <h3 className='fw-s c-c' style={{lineHeight: '150%'}}>\n                        With Ergsync you can join live group workouts, easily track \n                        your progress over time, and join a growing community of other rowers.\n                        Just connect your Concept2 RowErg to get started. \n                    </h3>\n                    <br /><br />\n                    <button className='solid-btn cta-button'  onClick={handleClickSignUp}>Get started free</button>\n                </div>\n                <img src={heroTabs[selectedTab].src} style={{width: '100%',  borderRadius: 5, border: '10px solid var(--bc)'}} />\n                <div></div>\n                <div className='d-flex jc-space-between ai-center'>\n                    {heroTabs.map( (tab, idx) => \n                        <h3 className={idx === selectedTab ? 'landing-tab-option-selected' : 'landing-tab-option'} key={idx}\n                            onClick={() => setSelectedTab(idx)}\n                        >\n                            {tab.title}\n                        </h3>\n                    )}\n                </div>\n            </div>\n            <div className='landing-container-11 landing-how-section'>\n                <div>\n                    <h1 className='fw-l mb-15' style={{color: 'black'}}>How it works</h1>\n                    <h3 className='fw-s c-cs mb-15'>\n                        Whether you're a rowing coach or an athlete, you can improve your training\n                        with <strong>Ergsync</strong> in just a few simple steps\n                    </h3>\n                </div>\n                <div></div>\n                <div className='trans-container' style={{height: 300, padding: 30}}>\n                    <h2 className='fw-l'>For Athletes</h2>\n                    <br />\n                    <h3 style={{lineHeight: '150%'}}>\n                        To get started, all you need is a Concept2 RowErg and a computer.\n                        Then just connect your ergomter to your computer via bluetooth, join a live\n                        group workout, and row online with your teammates in realtime. \n                    </h3>\n                </div>\n                <div className='trans-container' style={{height: 300, padding: 30}}>\n                    <h2 className='fw-l'>For Coaches</h2>\n                    <br />\n                    <h3 style={{lineHeight: '150%'}}>\n                        To get started, all you need is a computer and an internet connection.\n                        Once you create your team on Ergsync, you can schedule workouts, join your\n                        team's live workouts and analyze their performance in realtime, and review\n                        your team's results when they complete a workout.\n                    </h3>\n                </div>\n            </div>\n            <div className='landing-container-11 landing-questions-section'>\n                <div>\n                    <h1 className='fw-l mb-10' style={{color: 'black'}}>Questions?</h1>\n                    <h3 className='c-cs mb-30'>We're here to help</h3>\n                    <h3 className='mb-30'>\n                        If you have any questions or suggestions for improvement, feel free to post\n                        them on our subreddit\n                    </h3>\n                    <button className='solid-btn' onClick={() => window.open('https://www.reddit.com/r/Ergsync/')}>\n                        r / Ergsync\n                    </button>\n                </div>\n\n            </div>\n            <div className='landing-c'></div>\n            <div style={{padding: 30}}>\n                <h5>© 2021 Ergsync. All rights reserved.</h5>\n            </div>\n        </div>\n        \n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/ThemeContext.js",["353","354","355","356"],"import React, {useState, useContext, useEffect} from \"react\"\nimport {useAuth} from './AuthContext'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst ThemeContext = React.createContext() \n\nexport function useTheme() {\n    return useContext(ThemeContext)\n}\n\nexport function ThemeProvider({children}) {\n    const {currentUser, thisUser, fetchThisUser} = useAuth()\n\n    const [isDarkMode, setIsDarkMode] = useState(thisUser ? thisUser.colorTheme === 1 : false)\n    const [tintColor, setTintColor] = useState( thisUser ? thisUser.tintColor  : 0)\n    const [themeColor, setThemeColor] = useState( (thisUser && thisUser.themeColor) ? thisUser.themeColor : 0 )\n\n    const tintColors = [\n        {name: 'Default Blue', extension: 'default'},   // default \n        {name: 'Green', extension: 'green'},\n        {name: 'Purple', extension: 'discord'},\n        {name: 'Mint', extension: 'mint'}\n    ]\n\n    const themeColors = [\n        {name: 'Light Mode', extension: 'l', iconName: 'sun'},\n        {name: 'Dark Mode', extension: 'd', iconName: 'moon'},\n        {name: 'Blue Mode', extension: 'b', iconName: 'water'}\n    ]\n\n    const value = {\n        isDarkMode, setIsDarkMode,\n        tintColor, setTintColor, tintColors,\n        themeColor, setThemeColor, themeColors\n    }\n\n    const cssVars = [\n        '--bgc-nav',\n        '--bgc',\n        '--bgc-hover',\n        '--bgc-light',\n        '--bgc-semilight',\n        '--bgc-settings',\n        '--bgc-input',\n        '--bc',\n        '--bc-chart',\n        '--color',\n        '--color-header',\n        '--color-secondary',\n        '--color-tertiary',\n        '--color-yellow-text',\n        '--box-shadow',\n        '--box-shadow-dark',\n        '--float-border'\n    ]\n\n    useEffect(() => {\n        let extension = themeColors[themeColor].extension\n        let root = document.documentElement\n        cssVars.forEach(name => {\n            root.style.setProperty(name, `var(${name}-${extension})`)\n        })\n\n        async function updateData() {\n            try {\n                await api.patch(`/users/${thisUser._id}/themeColor`, {themeColor: themeColor})\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        if (thisUser) {updateData()}\n    }, [themeColor])\n\n    useEffect(() => {\n        const extension = tintColors[tintColor].extension\n        const root = document.documentElement\n\n        root.style.setProperty('--tint-color', `var(--color-${extension})`)\n        root.style.setProperty('--tint-color-translucent', `var(--color-translucent-${extension})`)\n\n        async function updateData() {\n            try {\n                await api.patch(`/users/${thisUser._id}/tintColor`, {tintColor: tintColor})\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        if (thisUser) { updateData() }\n    }, [tintColor])\n\n    return (\n        <ThemeContext.Provider value={value}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PrivateRoute.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/Login.js",["357"],"import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport SignHeader from './headers/SignHeader'\nimport moment from 'moment'\n\nexport default function Login() {\n    const { setMessage } = useMessage()\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const {signIn, continueWithGoogle } = useAuth()\n    const history = useHistory()\n    const [awaitingResponse, setAwaitingResponse] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            setAwaitingResponse(true)\n            await signIn(emailRef.current.value, passwordRef.current.value)\n        } catch (e) {\n            setMessage({title: e.message, isError: true, timestamp: moment()})\n            setAwaitingResponse(false)\n        }\n    }\n\n    async function handleContinueWithGoogle() {\n        try {\n            await continueWithGoogle()\n        } catch(e) {\n            setMessage({title: e.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    function handleClickForgotPassword() {\n        history.push('/reset')\n    }\n\n    return (\n        <div className='login-page'>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Sign in to your account</h3>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br />\n                    <label>Password <br />\n                        <input ref={passwordRef}  type=\"password\" name=\"password\" id=\"password\" required/>\n                    </label>\n                    <br />\n                    <p className='action-link' onClick={handleClickForgotPassword}>Forgot password?</p>\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Log In</button>\n                    <br /><br />\n                </form>\n                <h4 className='d-flex jc-center'>or</h4>\n                <br />\n                <button className='clear-btn-secondary' disabled={awaitingResponse} onClick={handleContinueWithGoogle} >\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                        height='18px' width='18px'\n                    />\n                    Continue with Google\n                </button>\n            </div>\n\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Don't have an account?</p>\n                <p className='action-link' onClick={handleClickSignUp}>Sign up</p>\n            </div>\n\n            <div className='login-spacer'></div>\n        </div>\n        \n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/AuthContext.js",["358"],"import React, { useEffect, useState, useContext } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { auth } from \"../firebase\"\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const history = useHistory()\n    const [currentUser, setCurrentUser] = useState()\n    const [thisUser, setThisUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signUp(displayName, email, password) {\n    // Description: Standard register with email\n        \n        return auth.createUserWithEmailAndPassword(email, password)\n        .then((userCredential) => {userCredential.user.updateProfile({displayName: displayName})})\n    }\n\n    function continueWithGoogle() {\n    // Description: Sign (In \\ Up) with google pop up\n        const provider = new firebase.auth.GoogleAuthProvider()\n        return auth.signInWithRedirect(provider)\n    }\n\n    function signIn(email, password) {\n    // Description: Standard sign in with email/password\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function signOut() {\n        return auth.signOut()\n    }\n\n    async function postUser(user) {\n        try {\n            await api.post('/users', {\n                displayName: user.displayName,\n                uid: user.uid,\n                iconURL: user.photoURL\n            })\n        } catch (error) { console.log(error) }\n    }\n\n    async function __fetchThisUser(user) {\n        try {\n            const res = await api.get(`/users/uid/${user.uid}`)\n            if (!res.data) {\n                await postUser(user)\n                await __fetchThisUser(user)\n                return\n            } else if (res.data && !res.data.iconURL && user.photoURL) {\n                api.patch(`/users/${res.data._id}/iconURL`, {iconURL: user.photoURL})\n            }\n            setThisUser(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function fetchThisUser() {\n        if (! currentUser) {return}\n        __fetchThisUser(currentUser)\n    }\n\n    useEffect(() => {\n    // Description: Register authState Listener on mount\n        const unsubscribe = auth.onAuthStateChanged( async (user) => {\n            setCurrentUser(user)\n            if (user) {\n                await __fetchThisUser(user)\n                const currentPath = window.location.pathname\n                if (currentPath.includes('login') || currentPath.includes('register')) {\n                    history.push('/dashboard')\n                }\n            }\n            setLoading(false)\n        })\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser, setCurrentUser,\n        thisUser, fetchThisUser,\n        signUp,\n        continueWithGoogle,\n        signIn,\n        signOut\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/firebase.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/LandingHeader.js",["359"],"import React from \"react\"\nimport {useHistory} from \"react-router-dom\";\n\n\n\nexport default function LandingHeader() {\n    const history = useHistory()\n\n    function handleClickSignIn() {\n        history.push('/login')\n    }\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    return (\n        <div className='landing-header d-flex jc-space-between ai-center'>\n            <div className='d-flex jc-flex-start ai-center' onClick={() => history.push('/')} style={{cursor: 'pointer'}}> \n                <img src='/images/logo-0.png' height={35} width={35} className='mr-10' style={{borderRadius: '50%'}} />\n                <h2 className='logo-text' \n                    style={{marginRight: 40}}\n                >\n                    {process.env.REACT_APP_COMPANY_NAME}\n                </h2>\n            </div>\n            <div className='d-flex jc-center ai-center'>\n                <button onClick={handleClickSignIn}style={{marginRight: 20}} className='clear-btn fw-m'>Log In</button>\n                <button onClick={handleClickSignUp} className='solid-btn fw-m'>Sign Up</button>\n            </div>\n        </div>\n\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SignHeader.js",["360","361"],"import React, {useEffect} from \"react\"\nimport {useHistory} from \"react-router-dom\"\n\nexport default function SignHeader() {\n    const history = useHistory()\n\n    return (\n        <div className='landing-header d-flex jc-flex-start ai-center'>\n            <div className='d-flex jc-flex-start ai-center' onClick={() => history.push('/')} style={{cursor: 'pointer'}}> \n                <img src='/images/logo-0.png' height={35} width={35} className='mr-10' style={{borderRadius: '50%'}} />\n                <h2 className='logo-text' \n                    style={{marginRight: 40}}\n                >\n                    {process.env.REACT_APP_COMPANY_NAME}\n                </h2>\n            </div>\n        </div>\n\n    );\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/MainHeader.js",["362","363","364","365","366"],"import React, {useEffect, useState} from \"react\"\nimport {useTheme} from \"../../contexts/ThemeContext\"\nimport {useAuth} from '../../contexts/AuthContext'\nimport {Link, useHistory} from 'react-router-dom'\nimport DropdownMenu from './DropdownMenu'\n\nexport default function MainHeader(props) {\n    const {isDarkMode, setIsDarkMode} = useTheme()\n    const {currentUser, thisUser} = useAuth()\n    const [path, setPath] = useState('')\n    const history = useHistory()\n\n    const [hideMenu, setHideMenu] = useState(true)\n    \n    const activeClass = (pathname) => {\n        return path.includes(pathname) ? 'link-active' : ''\n    }\n    useEffect(() => {\n        setPath(window.location.pathname.split('/')[1])\n    }, [])\n\n    return (\n        <div className=\"d-flex jc-space-between ai-center main-header\" style={{...props.style}}>\n            <div>\n                <div className='d-flex jc-flex-start ai-center'> \n                    <img src='/images/logo-0.png' height={35} width={35} className='mr-10' style={{borderRadius: '50%'}} />\n                    <h3 onClick={() => history.push('/dashboard')} className='logo-text' \n                        style={{marginRight: 40}}\n                    >\n                        {process.env.REACT_APP_COMPANY_NAME}\n                    </h3>\n                    <div className='d-inline-flex jc-flex-start ai-center search-bar' style={{display: 'none'}}>\n                        <i className='bi bi-search' style={{color: 'var(--color-secondary)'}} />\n                        <input placeholder='Search' style={{width: '300px', borderColor: 'transparent'}} type='text'/>\n                    </div>\n                </div>\n            </div>\n            <div className='d-flex jc-flex-end ai-center'>\n                <Link className={`${activeClass('dashboard') } header-link`} to='/dashboard' >\n                    Dashboard\n                </Link>\n                <Link className={`${activeClass('training') } header-link`} to='/training/statistics' >\n                    Training\n                </Link>\n                <Link className={`${activeClass('explore') } header-link`} to='/explore/clubs' >\n                    Explore\n                </Link>\n                <div className='d-flex jc-center ai-center' onClick={() => setHideMenu(false)}\n                    style={{cursor: 'pointer'}} \n                >\n                    {thisUser.iconURL ? \n                        <img src={thisUser.iconURL} className='user-icon' style={{margin: 0}} />\n                        :\n                        <div className='user-icon-default'>\n                            <i className='bi bi-person' />\n                        </div>\n                    }\n                </div>\n            </div>\n            <DropdownMenu hideSelf={hideMenu} setHideSelf={setHideMenu} />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/SubHeader.js",["367"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default function SubHeader(props) {\n\n    const activeClass = (pathname) => {\n        return props.subPath === pathname ? 'sub-link-active' : ''\n    }\n\n    return (\n        <div className='sub-header' style={props.style}>\n            <div className='d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center' \n                    style={{marginTop: props.iconURL && -20, marginBottom: 12}}\n                >\n                    {props.iconURL && \n                        <img height={60} width={60} src={props.iconURL} \n                            style={{\n                                border: '0px solid var(--bc)', borderRadius: '5px',\n                                marginRight: 10, objectPosition: 'center', objectFit: 'cover'\n                            }} \n                        />\n                    }\n                    <h2>{props.title}</h2>\n                </div>\n                <div className='d-flex jc-flex-end ai-center'>\n                    {props.children}\n                </div>\n            </div>\n            <div className='d-flex jc-flex-start'>\n                {props.items && props.items.map( (item, idx) => (\n                    <Link key={idx} className={`${activeClass(item.path)} header-link`}\n                        to={props.path + item.path}\n                        style={{paddingBottom: 11}}\n                    >\n                        {item.title}\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Clubs.js",["368","369","370","371","372"],"import React, {useState, useRef} from 'react'\nimport ExploreHeader from './ExploreHeader'\nimport MainHeader from '../headers/MainHeader'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Loading from '../misc/Loading'\nimport Paginator from '../misc/Paginator'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Clubs() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const [results, setResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const searchRef = useRef()\n    const [submittedSearch, setSubmittedSearch] = useState(null)    // club name\n    const [currPage, setCurrPage] = useState(1)\n\n    function handleCreateClub() {\n        history.push('/club-create')\n    }\n\n    function handleClickClub(club) {\n        history.push(`/clubs/${club.customURL}/general`)\n    }\n    \n    async function handleSubmitSearch(e) {\n        e.preventDefault()\n        if ( !searchRef.current.value) {return}\n\n        setSubmittedSearch(searchRef.current.value)\n        await searchClubs(searchRef.current.value, 1)\n        setCurrPage(1)\n    }\n\n    async function onClickPrevious() {\n        await searchClubs(submittedSearch, currPage - 1)\n        setCurrPage( curr => curr - 1 )\n    }\n\n    async function onClickNext() {\n        await searchClubs(submittedSearch, currPage + 1)\n        setCurrPage( curr => curr + 1 )\n    }\n\n    async function searchClubs(clubName, pageNum) {\n        setLoading(true)\n        setResults(null)\n        try {\n            const res = await api.get(`/clubs/search?name=${clubName}&page=${pageNum}&pagesize=15`)\n            setResults(res.data)\n            setSubmittedSearch(clubName)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    return (\n    <div>\n        <MainHeader />\n        <ExploreHeader subPath='/clubs' />\n        <div className='main-container'>\n            <br /><br />\n            <div className='d-flex jc-space-between ai-center'>\n                <form onSubmit={handleSubmitSearch}>\n                    <div className='search-bar' style={{backgroundColor: 'var(--bgc-light)'}}>\n                        <i className='bi bi-search' />\n                        <input ref={searchRef} type='text' placeholder='Find a club by name' style={{borderColor: 'transparent', width: 250}} /> \n                    </div>\n                </form>\n                \n                <button onClick={handleCreateClub}className='solid-btn-secondary'>Create a Club</button>\n            </div>\n            <br />\n            <div className='float-container'>\n                <table style={{width: '100%'}} className='data-table'>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(submittedSearch && results && !loading) && results.clubs.map((club, index) => \n                            <tr key={index} onClick={() => handleClickClub(club)} style={{cursor: 'pointer'}}>\n                                <td >\n                                    <div className='d-flex jc-flex-start ai-center'>\n                                        <img src={club.iconURL} className='club-icon-medium mr-10'/>\n                                        <h4 className='page-link'>{club.name}</h4>\n                                    </div>\n                                    \n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                {( (submittedSearch && !loading && !results.clubs.length) || !submittedSearch ) &&\n                    <div className='search-message'>\n                    {(submittedSearch && !loading) ? \n                        !results.clubs.length && `We couldn't find any clubs matching the name \"${submittedSearch}\"`\n                        :\n                        'Use the search bar above to find clubs'\n                    }\n                    </div>\n                }\n                {loading && <Loading />}\n            </div>\n            <br />\n            {(submittedSearch && !loading) && \n                <Paginator resultsCount={results.count} currPage={currPage}\n                    onClickNext={onClickNext}\n                    onClickPrevious={onClickPrevious}\n                />\n            }\n            \n            \n        </div>\n        \n    </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/ExploreHeader.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/CreateClub.js",["373","374"],"import React, {useEffect, useState} from 'react'\nimport MainHeader from './headers/MainHeader'\nimport SubHeader from './headers/SubHeader'\nimport {useMessage} from '../contexts/MessageContext'\nimport {storage} from '../firebase'\nimport {useAuth} from '../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {useHistory} from 'react-router-dom'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst srcBanner = 'https://styles.redditmedia.com/t5_2qljq/styles/bannerBackgroundImage_zfhrcn1w7u911.jpg?width=4000&format=pjpg&s=88d594d779756f76ef8a5e0073e1d2959cd501bf'\n\nexport default function CreateClub() {\n    const {setMessage} = useMessage()\n    const {thisUser} = useAuth()\n    const history = useHistory()\n\n    const [name, setName] = useState('')\n    const [customURL, setCustomURL] = useState('')\n    const [description, setDescription] = useState('')\n    const [isPrivate, setIsPrivate] = useState(false)\n\n    const [URLIsAvailable, setURLIsAvailable] = useState(false)\n\n    const [tempIconURL, setTempIconURL] = useState()\n    const [iconFile, setIconFile] = useState()\n    const [tempBannerURL, setTempBannerURL] = useState()\n    const [bannerFile, setBannerFile] = useState()\n    const inputStyle = {\n        width: '400px'\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        // Upload club image\n        if (!URLIsAvailable) {\n            setMessage({title: 'The club URL you have requested is not available. Try another.', isError: true, timestamp: moment()})\n            return\n        }\n        let iconURL\n        try {\n            await storage.ref('clubicons').child(customURL).put(iconFile);\n            iconURL = await storage.ref('clubicons').child(customURL).getDownloadURL()\n        } catch(error) {\n            console.log(error.message)\n        }\n\n        let bannerURL = undefined\n        if (tempBannerURL) {\n            try {\n                await storage.ref('clubbanners').child(customURL).put(bannerFile);\n                bannerURL = await storage.ref('clubbanners').child(customURL).getDownloadURL()\n            } catch(error) {\n                console.log(error)\n            }\n        }\n        \n        const clubData = {\n            name: name,\n            customURL: customURL,\n            description: description,\n            iconURL: iconURL,\n            bannerURL: bannerURL,\n            isPrivate: isPrivate\n        }\n\n        try {\n            const res = await api.post('/clubs', clubData)\n            await api.post('/clubmemberships', {user: thisUser._id, club: res.data._id})\n            setMessage({title: 'Club created', isError: false, timestamp: moment()})\n            history.push(`/clubs/${customURL}/general`)\n        } catch (error) {\n            setMessage({title: `Error creating club. ${error.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleCustomURLChange(e) {\n        const validRegex = new RegExp(/^([a-zA-Z0-9-]{0,20})$/)\n        console.log()\n        if (validRegex.test(e.target.value)) {\n            setCustomURL(e.target.value)\n        }\n    }\n\n    function handleClickUserDefaultBanner() {\n        setTempBannerURL(null)\n        setBannerFile(null)\n        setMessage({title: 'Set default banner', isError: false, timestamp: moment()})\n    }\n\n    useEffect( () => {\n        if (!iconFile) {return}\n        const imgURL = URL.createObjectURL(iconFile)\n        setTempIconURL(imgURL)\n    }, [iconFile])\n\n    useEffect(() => {\n        if (!bannerFile) {return}\n        setTempBannerURL(URL.createObjectURL(bannerFile))\n    }, [bannerFile])\n\n    useEffect(() => {\n        async function checkAvailability() {\n            if (!customURL.length) {return}\n            try {\n                const res = await api.get(`/clubs/isavailable?customURL=${customURL}`)\n                setURLIsAvailable(res.data.isAvailable)\n            } catch (error) { console.log(error) }\n        }\n        checkAvailability()\n    }, [customURL])\n\n    return (\n        <div>\n            <MainHeader />\n            <SubHeader title='Create a Club' />\n            <br /><br />\n            <div className='main-container'>\n                <div className='float-container' style={{padding: '30px 30px', marginBottom: 100}}>\n                    <form className='create-club' id='form-create-club' onSubmit={handleSubmit}>\n                        <label>\n                            Club Name *<br />\n                            <input style={inputStyle} type='text' value={name} onChange={e => setName(e.target.value)} required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Club Banner <br />\n                            <input onChange={e => setBannerFile(e.target.files[0])} type='file' accept='image/*'\n                                style={{display: 'none'}}\n                            />\n                             <div className='banner-image-input'>\n                                 <img src={tempBannerURL ? tempBannerURL : srcBanner} />\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <button className='clear-btn-secondary' style={{float: 'right'}} onClick={handleClickUserDefaultBanner} type='button'>\n                            Use default banner\n                        </button>\n                        <br /><br />\n                        <label >\n                            Club Icon *<br />\n                            <input onChange={e => setIconFile(e.target.files[0])} type='file' accept='image/*' required \n                                style={{display: 'none'}}\n                            />\n                            <div className='icon-image-input'>\n                                {tempIconURL && <img src={tempIconURL ? tempIconURL : ''} /> }\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Description *<br />\n                            <textarea \n                                style={{width: '400px', resize: 'none'}} maxLength='200' value={description} \n                                onChange={e => setDescription(e.target.value)} \n                                rows='5'\n                            />\n                        </label>\n                        <br /><br />\n                        <label>\n                            Custom URL *<br />\n                            <p className='d-inline'>{window.location.hostname}/clubs/</p>\n                            <input value={customURL} onChange={handleCustomURLChange} required/>\n                            <br />\n                            {customURL.length > 0 && \n                                <div className='d-flex jc-flex-start ai-center' \n                                    style={{color: URLIsAvailable ? 'var(--color-success)' : 'var(--color-error)'}}\n                                >\n                                    <i className={URLIsAvailable ? 'bi bi-check-circle-fill' : 'bi bi-exclamation-circle-fill'} \n                                        style={{marginRight: 10}}\n                                    />\n                                    <p>{URLIsAvailable ? 'This club url is available' : 'This club url is not available' } </p>\n                                </div>\n                            }\n                        </label>\n                        <br /><br />\n                        <label>\n                            Privacy <br />\n                            <input type='checkbox' checked={isPrivate} onChange={e => setIsPrivate(e.target.checked)} className='mr-10'/>\n                            <p className='d-inline mr-5'>Make your club invite only</p>\n                            <i className={`bi bi-${isPrivate ? 'lock' : 'unlock'}-fill c-cs`} style={{fontSize: 20}}/>\n                        </label>\n                    </form>\n                    <br />\n                    <div className='d-flex jc-center ai-center'>\n                        <button form='form-create-club' className='solid-btn' type='submit'>Create Club</button>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Loading.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/Dashboard.js",["375","376","377"],"import React, { useEffect, useState} from \"react\"\nimport MainHeader from \"../headers/MainHeader\"\nimport UserInfoCard from './UserInfoCard'\nimport ClubsInfoCard from './ClubsInfoCard'\nimport SocialInfoCard from './SocialInfoCard'\nimport NewSessionForm from './NewSessionForm'\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport Loading from '../misc/Loading'\nimport ActivityCard from '../feed/ActivityCard'\nimport FeedLoader from '../feed/FeedLoader'\nimport axios from \"axios\"\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Dashboard() {\n    const { currentUser, thisUser } = useAuth()\n    const history = useHistory()\n\n    const [myClubs, setMyClubs] = useState([])\n    const [todaySessions, setTodaySessions] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [showSessionForm, setShowSessionForm] = useState(false)\n\n    const [activities, setActivities] = useState([])\n    const [loadingActivities, setLoadingActivities] = useState(true)\n    const [canLoadMoreActivities, setCanLoadMoreActivities] = useState(true)\n\n    useEffect(() => {\n        async function fetchData() {\n            await fetchClubs()\n            await fetchSessions()\n            setLoading(false)\n        }\n        fetchData()\n\n        fetchFeed()\n    }, [])\n\n    async function fetchClubs() {\n        const url = `/clubmemberships/user/${thisUser._id}`\n        const res = await api.get(url)\n        setMyClubs(res.data)\n    }\n\n    async function fetchSessions() {\n        const query = {\n            year: moment().year(),\n            month: moment().month(),\n            day: moment().date(),\n            sparse: 0\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        try {\n            const res = await api.get(`/sessions/user/${thisUser._id}?${queryString}`)\n            setTodaySessions(res.data)\n        } catch (error) { console.log(error) }\n    }\n\n    function routeToSession(session) {\n        history.push(`/sessions/${session._id}`)\n    }\n\n    function handleClickCalendar() {\n        history.push(`/training/calendar`)\n    }\n\n    async function fetchFeed() {\n        setLoadingActivities(true)\n        const pageSize = 5\n        const currentPage = Math.ceil(activities.length / pageSize)\n        try {\n            const url = `/feed/dashboard?user=${thisUser._id}&page=${currentPage + 1}&pagesize=${pageSize}`\n            const res = await api.get(url)\n            setActivities(curr => [...curr, ...res.data])\n            setCanLoadMoreActivities(res.data.length >= pageSize)\n        } catch (error) {\n            console.log(error.response.data.message)\n        }\n        setLoadingActivities(false)\n    }\n\n    function handleClickLoadMoreActivities() {\n        if (loadingActivities || !canLoadMoreActivities) {return}\n        fetchFeed()\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0}} />\n            <br /><br />\n            <div className='main-container'\n                style={{  display: 'grid', gridTemplateColumns: '1fr 4fr', gap: 75, padding: '0px 75px'\n            }}\n            >\n                <div style={{gridColumn: 1}} >\n                    <UserInfoCard style={{width: 300}} />\n                    <br /><br />\n                    <ClubsInfoCard clubs={myClubs} style={{width: 300}} />\n                    <br /><br />\n                    <SocialInfoCard style={{width: 300}} />\n                    <br /><br />\n                </div>\n                \n                <div style={{gridColumn: '2/3', gridRow: 1}}>\n                    <div>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <h3>Today's Workouts</h3>\n                            <div>\n                                <button className='clear-btn-secondary mr-20' onClick={handleClickCalendar}>\n                                    View Calendar\n                                </button>\n                                <button className='solid-btn-secondary' onClick={() => setShowSessionForm(true)}>\n                                    New Workout\n                                </button>\n                            </div>\n                            \n                        </div>\n                        <br />\n                        <NewSessionForm \n                            setShowSessionForm={setShowSessionForm}\n                            showSessionForm={showSessionForm}\n                            fetchSessions={fetchSessions}\n                            myClubs={myClubs}\n                        />\n                        {loading ? <Loading /> : \n                        <div className='float-container'>\n                            <table style={{width: '100%'}} >\n                                <thead>\n                                    <tr >\n                                        <th >Host</th>\n                                        <th >Title</th>\n                                        <th >Start Time</th>\n                                    </tr>\n                                </thead>\n                                <tbody >\n                                    {todaySessions.map( (session, i) => (\n                                    <tr key={i} onClick={() => routeToSession(session)} >\n                                        <td className='d-flex jc-flex-start ai-center' style={{gap: '10px'}}>\n                                            {session.club && <img src={session.club.iconURL} className='club-icon' />}\n                                            {!session.club && (\n                                                session.hostUser.iconURL ? \n                                                    <img src={session.hostUser.iconURL} className='user-icon' />\n                                                    :\n                                                    <div className='user-icon-default'>\n                                                        <i className='bi bi-person' />\n                                                    </div>\n                                            )}\n                                            <p> {session.club ? session.club.name : currentUser.displayName} </p>\n                                        </td>\n                                        <td>\n                                            {session.title}\n                                        </td>\n                                        <td>\n                                            {moment(session.startAt).format('LT')}\n                                        </td>\n                                    </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            {!todaySessions.length && \n                                <p className='c-cs fw-xs' style={{textAlign: 'center', padding: 15}}>\n                                    You have no workouts scheduled for today\n                                </p>\n                            }\n                        </div>}\n                    </div>\n\n                    <br /><br /><br />\n                    <div className='d-flex jc-flex-start ai-center'>\n                        <h3 className='mr-10'>Activity Feed</h3>\n                        <div className='tooltip'>\n                            <i className='bi bi-question-circle icon-btn-circle' />  \n                            <div className='tooltip-text'>\n                                <h5>See your recent activities, and activities of athletes you follow</h5>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                    <br />\n                    {activities.map( (ac, idx) => \n                        <div key={idx}>\n                            <ActivityCard activity={ac} />\n                        </div>\n                    )}\n                    <FeedLoader \n                        pluralUnit='activities' \n                        canLoadMore={canLoadMoreActivities}\n                        loading={loadingActivities}\n                        handleClickLoadMore={handleClickLoadMoreActivities}\n                        feedEndMessage='No more activities to show'\n                    />\n                    <div style={{height: 100}}></div>\n                </div>\n            </div>\n        </div>\n        \n    )   \n\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/UserInfoCard.js",["378","379","380","381","382"],"import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport Loading from '../misc/Loading'\nimport Pending from '../misc/Pending'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {formatNumber} from '../../scripts/Numbers'\nimport CustomGroupedBar from '../charts/CustomGroupedBar'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function UserInfoCard(props) {\n    const {currentUser, thisUser, fetchThisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const history = useHistory()\n    const [stats, setStats] = useState(null)\n    const [partnerStats, setPartnerStats] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const [follows, setFollows] = useState({\n        followees: [],\n        followers: []\n    })\n    const [loadingFollows, setLoadingFollows] = useState(true)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n\n    const [selectedTimeframe, setSelectedTimeframe] = useState('week')\n\n    const [menuHidden, setMenuHidden] = useState(true)\n    const [followType, setFollowType] = useState('followees')\n    const [selectedPartner, setSelectedPartner] = useState(null)\n\n    const selfGraphStyle = {\n        backgroundColor: '--tint-color-translucent',\n        borderColor: '--tint-color',\n        label: thisUser.displayName\n    }\n    \n    const partnerGraphStyle = {\n        backgroundColor: '--color-translucent-purple',\n        borderColor: '--color-purple',\n        label: thisUser.trainingPartner ? thisUser.trainingPartner.displayName : 'partner'\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const res = await api.get(`/users/${thisUser._id}/statistics`)\n                setStats(res.data)\n                if (thisUser.hasOwnProperty('trainingPartner') && thisUser.trainingPartner !== null) {\n                    const res = await api.get(`/users/${thisUser.trainingPartner._id}/statistics`)\n                    setPartnerStats(res.data)\n                }\n\n            } catch (error) {\n                console.log(error)\n            } \n            setLoading(false)\n            \n        }\n        async function fetchFollowing() {\n            try {\n                let res = await api.get(`/follows/user/${thisUser._id}/followees`)\n                setFollows(curr => ({...curr, followees: res.data}))\n                res = await api.get(`/follows/user/${thisUser._id}/followers`)\n                setFollows(curr => ({...curr, followers: res.data}))\n            } catch (error) {\n                console.log(error.message)\n            }\n            setLoadingFollows(false)\n        }\n\n        fetchData()\n        fetchFollowing()\n        console.log('fetching stats')\n    }, [])\n\n    function handleClickMenu() {\n        setMenuHidden(false)\n    }\n\n    function handleClickCancel() {\n        setSelectedPartner(null)\n        setMenuHidden(true)\n    }\n\n    async function handleClickSubmit() {\n        if (selectedPartner === null) {\n            setMessage({title: 'Please select a training partner first', isError: true, timestamp: moment()})\n            return\n        } \n        setLoadingUpdate(true)\n        setTimeout( async () => {\n            try {\n                const res = await api.patch(`/users/${thisUser._id}/trainingPartner`, {trainingPartner: selectedPartner._id})\n                setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            } catch (error) {\n                setMessage({title: `Error setting training partner. ${error.response.data.message}`, isError: true, timestamp: moment()})\n            }\n            setLoadingUpdate(false)\n            setMenuHidden(true)\n            window.location.reload()\n        }, (1*1000));\n    }\n\n    async function handleClickRemovePartner() {\n        setLoadingUpdate(true)\n        setTimeout( async () => {\n            try {\n                const res = await api.patch(`/users/${thisUser._id}/trainingPartner`, {trainingPartner: null})\n                setMessage({title: 'Removed training partner', isError: false, timestamp: moment()})\n            } catch (error) {\n                setMessage({title: `Error removing training partner. ${error.response.data.message}`, isError: true, timestamp: moment()})\n            }\n            setLoadingUpdate(false)\n            setMenuHidden(true)\n            window.location.reload()\n        }, (1*1000));\n    }\n\n    const graphInfo = {\n        week: {\n            labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            labelFreq: 1, maxLabelLength: 1\n        },\n        month: {\n            labels: Array(moment().daysInMonth()).fill(0).map((l, i) => i + 1),\n            labelFreq: 10, maxLabelLength: 2\n        },\n        year: {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            labelFreq: 3, maxLabelLength: 3\n        }\n    }\n\n    return (\n        <div style={{...props.style}} className='bs-bb'>\n            {loading ? <Loading /> :\n            <div className='float-container' style={{padding: '20px 20px'}} >\n                <div className='d-flex jc-space-between ai-center mb-15'>\n                    <h3>{thisUser.trainingPartner ? 'Meters Compared' : 'Your Meters'}</h3>\n                    <div className='tooltip'>\n                        <i className='bi bi-three-dots icon-btn-circle' onClick={handleClickMenu}/>\n                        <div className='tooltip-text'>\n                            <p>Pick a Training partner</p>\n                        </div>\n                    </div>\n                </div>\n                <div className='fullscreen-blur d-flex jc-center ai-center' style={{display: menuHidden && 'none'}}>\n                    <div style={{width: 600, padding: '20px 20px'}} className='float-container'>\n                        <h2>Compare your meters with a friend</h2>\n                        <br />\n                        <p >Help yourself stay on top of your training goals by comparing your meters with a friend</p>\n                        <br /><br />\n                        <div className='d-flex jc-space-between ai-center'>\n                            <select value={followType} onChange={e => setFollowType(e.target.value)}>\n                                <option value='followees'>I'm following</option>\n                                <option value='followers'>Following me</option>\n                            </select>\n                            {selectedPartner !== null && \n                                <div style={{border: '1px solid var(--color-yellow)', borderRadius: 5}}\n                                    className='d-flex jc-flex-start ai-center bs-bb'\n                                >\n                                    <p style={{padding: 7, color: 'var(--color-yellow-text)', backgroundColor: 'var(--color-translucent-yellow)'}}>\n                                        Selected Partner\n                                    </p>\n                                    <p style={{padding: 7}}>{selectedPartner.displayName}</p>\n                                </div>\n                                \n                            }\n                        </div>\n                        <br />\n                        {loadingFollows ? <div className='loading-message'><Pending />Loading followers...</div>\n                            :\n                            <div className='trans-container' style={{height: 200, overflow: 'scroll', padding: 0}}>\n                                {follows[followType].length === 0 &&\n                                    <p className='c-cs' style={{padding: 15}}>You have no {followType}</p>\n                                }\n                                {follows[followType].map((user, idx) => (\n                                    <div key={idx} className='clickable-container d-flex jc-space-between ai-center'>\n                                        <div className='d-flex ai-center'>\n                                            {user.iconURL ? \n                                                <img src={user.iconURL} className='user-icon-small mr-20'/>\n                                                :\n                                                <div className='user-icon-default-small'>\n                                                        <i className='bi bi-person' />\n                                                    </div>\n                                            }\n                                            <p>{user.displayName}</p>\n                                        </div>\n                                        <button className='clear-btn-secondary' onClick={() => setSelectedPartner({...user})}>\n                                            Set training partner\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n\n                        }\n                        <br />\n                        <div className='d-flex jc-space-between'>\n                            <button className='error-btn-secondary' onClick={handleClickRemovePartner} disabled={!thisUser.trainingPartner}>\n                                Remove current partner\n                            </button>\n                            <div className='d-flex jc-flex-end'>\n                                <button className='clear-btn-cancel mr-20' onClick={handleClickCancel}>Cancel</button>\n                                <button className='solid-btn-secondary' onClick={handleClickSubmit} disabled={selectedPartner === null}>\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                        \n                        {loadingUpdate && <div className='loading-message'><Pending />Processing your request...</div>}\n                    </div>\n                </div>\n\n                {(thisUser.trainingPartner && true) && \n                    <div className='bgc-container d-flex jc-space-between' style={{margin: '20px 0px', padding: 10}}>\n                        <div className='d-flex ai-center'>\n                            <div style={{height: 10, width: 10, borderRadius: 3, backgroundColor: `var(${selfGraphStyle.borderColor})`}} \n                                className='mr-5'\n                            />\n                            <p className='c-cs'>You</p>\n                        </div>\n                        <div className='d-flex ai-center'>\n                            <div style={{height: 10, width: 10, borderRadius: 3, backgroundColor: `var(${partnerGraphStyle.borderColor})`}} \n                                className='mr-5'\n                            />\n                            <p className='c-cs'>{thisUser.trainingPartner.displayName}</p>\n                        </div>\n                    </div>\n                }\n                <div>\n                    <div className='d-flex jc-space-between ai-center mb-5' >\n                        <h2 className='lc-1 c-tc fw-s'>\n                            {formatNumber(stats.aggregate[`${selectedTimeframe}Meters`])} m\n                        </h2>\n                        {thisUser.trainingPartner && \n                            <h2 className='lc-1 fw-s' style={{color: `var(${partnerGraphStyle.borderColor})`}}>\n                                {formatNumber(partnerStats.aggregate[`${selectedTimeframe}Meters`])} m\n                            </h2>\n                        }\n                    </div>\n                    <br />\n                    <CustomGroupedBar \n                        height={115}\n                        labelFreq={ graphInfo[selectedTimeframe].labelFreq }\n                        maxLabelLength={ graphInfo[selectedTimeframe].maxLabelLength }\n                        data={{\n                            labels: graphInfo[selectedTimeframe].labels,\n                            label: 'Meters',\n                            datasets: thisUser.trainingPartner ? \n                                [\n                                    {data: stats.plottable[`${selectedTimeframe}Meters`], ...selfGraphStyle},\n                                    {data: partnerStats.plottable[`${selectedTimeframe}Meters`], ...partnerGraphStyle},\n                                ]\n                                : [ {data: stats.plottable[`${selectedTimeframe}Meters`], ...selfGraphStyle} ]\n                        }}\n                    />\n                </div>\n                <br />\n                <div className='d-flex jc-space-between ai-center'>\n                    {['week', 'month', 'year'].map( (timeframe, idx) =>\n                        <h5 className={`${timeframe === selectedTimeframe ? 'menu-option-active' : 'menu-option' } tt-c`}\n                            key={idx} onClick={() => setSelectedTimeframe(timeframe)}\n                        >\n                            {timeframe}\n                        </h5>\n                    )}\n                </div>\n                <br />\n                <div className='d-flex jc-center' onClick={() => history.push('/training/statistics')}>\n                    <button className='clear-btn-secondary' style={{flex: 1}}>View Stats</button>\n                </div>\n            </ div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/NewSessionForm.js",["383","384"],"import React, {useEffect, useRef, useState} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport DatePicker from '../misc/DatePicker'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function NewSessionForm(props) {\n    const {thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const sessionTitleRef = useRef()\n    const sessionPrivacyRef = useRef()\n\n    const [sessionMoment, setSessionMoment] = useState(moment())\n\n    // workout items\n    const maxItems = 4\n    const itemExamples = ['ex.  2k Warmup', 'ex.  15k Steady State', '', '']\n    const [hideItems, setHideItems] = useState([\n        false, false, true, true\n    ])\n    const [visibleItems, setVisibleItems] = useState(2)\n    const [sessionItems, setSessionItems] = useState( Array(maxItems).fill('') )\n\n\n    async function handleCreateSession(e) {\n        e.preventDefault()\n        const sessionData = {\n            title: sessionTitleRef.current.value,\n            hostUser: thisUser._id,\n            startAt: sessionMoment.toDate(),\n            isAccessibleByLink: sessionPrivacyRef.current.value === 'link',\n            club: ['link', 'self'].includes(sessionPrivacyRef.current.value) ? undefined : sessionPrivacyRef.current.value,\n            workoutItems: sessionItems.filter((item, i) => i < visibleItems)\n        }\n        try {\n            const res = await api.post('/sessions', sessionData)\n            setMessage({title: 'Created session', isError: false, timestamp: moment()})\n            props.setShowSessionForm(false)\n            props.fetchSessions()\n        } catch(err) {\n            setMessage({title: `Error creating session. ${err.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleItemChange(e, itemIndex) {\n        const items = [...sessionItems]\n        items[itemIndex] = e.target.value\n        setSessionItems(items)\n    }\n\n    function handleAddItem() {\n        if (visibleItems === maxItems) {return}\n        const hide = [...hideItems]\n        for (let i = 0; i < hide.length; i++) {\n            if (hide[i]) {\n                hide[i] = false\n                break\n            }\n        }\n        setHideItems(hide)\n        setVisibleItems(curr => curr + 1)\n\n    }\n\n    function handleRemoveItem(itemIndex) {\n        if (visibleItems === 1) {return}\n        const hide = [...hideItems]\n        hide[itemIndex] = true\n        setHideItems(hide)\n        setVisibleItems(curr => curr - 1)\n    }\n\n    return (\n        <div className='float-container'\n            style={{\n                display: !props.showSessionForm && 'none',\n                marginBottom: props.showSessionForm ? '40px' : '0px',\n                padding: '0px 30px',\n            }}\n        >\n            <br />\n            <h3 style={{ textAlign: 'left'}}>Create a Workout</h3>\n            <div className='trans-container' style={{margin: '20px 0px', borderLeft: 'none', borderRight: 'none', borderRadius: 0, padding: '15px 30px'}}>\n                <div className='d-flex jc-flex-start ai-center mb-10'>\n                    <i className='bi bi-info-circle mr-10 c-cs' />\n                    <h4 className='c-cs fw-m'>Please Note</h4>\n                </div>\n                <p className='c-cs'>At this time, we do not support interval workouts.</p>\n            </div>\n            <form onSubmit={handleCreateSession}>\n                <div className='d-flex jc-flex-start'>\n                    <div style={{flex: 1, marginRight: 30}}>\n                        <div className='d-flex jc-flex-start ai-center'>\n                            \n                        </div> \n                        <label style={{marginRight:'20px'}}>\n                            Start at<br />\n                            <DatePicker initMoment={sessionMoment} setMoment={setSessionMoment}/>\n                        </label>\n                        <br />\n                        <label>\n                            Title <br />\n                            <input type='text' ref={sessionTitleRef} required/>\n                        </label><br /><br />\n                        <label>\n                            Who can join <br />\n                            <select ref={sessionPrivacyRef}>\n                                <option value=\"self\">Only Me</option>\n                                <option value=\"link\">Anyone with link</option>\n                                {props.myClubs.map((club, idx) => (\n                                    <option key={idx} value={club._id}>\n                                        {club.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label>\n                        \n                    </div>\n                    <div style={{flex: 1}}>\n                        <label>Activities</label>\n                        <div >\n                            {Array(maxItems).fill(null).map((item, i) => (\n                                <div key={i} className='d-flex jc-space-between ai-center' \n                                    style={{display: hideItems[i] ? 'none' : 'flex'}}\n                                >\n                                    <input \n                                        required={i < visibleItems}\n                                        placeholder={itemExamples[i]}\n                                        value={sessionItems[i]} \n                                        onChange={e => handleItemChange(e, i)} \n                                        type='text'\n                                        style={{display: 'block', flex: 1,  marginBottom: '5px', marginRight: 10}}\n                                    />\n                                    <button \n                                        type='button' className='icon-btn' \n                                        onClick={() => handleRemoveItem(i)}\n                                        style={{opacity: i+1 === visibleItems && visibleItems !== 1 ? '100%' : '0%'}}\n                                        disabled={i+1 !== visibleItems || visibleItems === 1}\n                                    >-</button>\n                                </div>\n                            ))}\n                            <button \n                                type='button' className='icon-btn'\n                                hidden={visibleItems === maxItems}\n                                onClick={handleAddItem}\n                            >\n                                +\n                            </button>\n                        </div>\n                        \n                    </div>   \n                </div>\n                <br />\n                <div className='d-flex jc-space-between'>\n                    <button  className='solid-btn-secondary' type='submit'>Create</button>\n                    <button type='button' onClick={()=>props.setShowSessionForm(false)} className='clear-btn-cancel'>Close</button>\n                </div>\n            </form>\n            <br />\n        </div>\n    )\n}\n\n\n\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/ClubsInfoCard.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/Session.js",["385","386","387","388","389"],"import React, {useEffect, useState, useCallback} from \"react\"\nimport MainHeader from \"../headers/MainHeader\"\nimport SessionInfoCard from './SessionInfoCard'\nimport LiveActivityTable from './LiveActivityTable'\nimport ResultsTable from './ResultsTable'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from \"axios\"\nimport moment from 'moment'\nimport {useParams} from 'react-router-dom'\nimport Chat from '../chat/Chat'\n\nimport {PM5} from './connect_pm5/pm5'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Session(props) {\n    const {sessionID} = useParams()\n    const {currentUser, thisUser} = useAuth()\n    const [session, setSession] = useState(null)\n    const [activities, setActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [ergConnected, setErgConnected] = useState(false)\n    const [activityInProgress, setActivityInProgress] = useState(null)\n\n    const [C2Data, setC2Data] = useState(null)\n\n    const pm5 = new PM5(\n        () => { console.log('connecting')}, // cbConnecting\n        () => { setErgConnected(true) },    // cbConnected\n        () => { setErgConnected(false) },   // cbDisconnected\n        (m) => {                             // cbMessage\n            setC2Data(curr => ({...curr, ...m.data}))       \n        }\n    )\n\n    useEffect(() => {\n        // confirm page refresh\n        window.onbeforeunload = (event) => {\n            const e = event || window.event;\n            e.preventDefault();\n            if (e) {\n              e.returnValue = ''; // Legacy method for cross browser support\n            }\n            return ''; // Legacy method for cross browser support\n          };\n\n        const disconnect = () => {\n            if ( pm5.connected() ) { pm5.doDisconnect() } \n            window.onbeforeunload = () => {}\n        }\n        return disconnect\n    }, [])\n\n    useEffect(() => {\n        const activityRefreshRate = 7 * 1000\n        const sessionRefreshRate = 60 * 1000\n\n        async function fetchData() {\n            await fetchSession()\n            await fetchActivities()\n            setLoading(false)\n        }\n        fetchData()\n\n        const activityInterval = setInterval(() => fetchActivities(), activityRefreshRate)\n        const sessionInterval = setInterval(() => fetchSession(), sessionRefreshRate)\n\n        return () => {\n            clearInterval(activityInterval)\n            clearInterval(sessionInterval)\n        }\n    }, [])\n\n    async function fetchSession() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}`)\n            setSession(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function fetchActivities() {\n        try {\n            const res = await api.get(`/sessions/${sessionID}/activities`)\n            \n            setActivities(res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                for (let j = 0; j < res.data[i].length; j++) {\n                    if (res.data[i][j].user._id === thisUser._id && !res.data[i][j].isCompleted) {\n                        setActivityInProgress(res.data[i][j])\n                        return\n                        // Assume there is only one? -> potential bug\n                        // Should be the case, but this state is possible (almost impossible)\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const [lastPatchTime, setLastPatchTime] = useState(moment())\n    useEffect(() => {\n        if (moment().diff(lastPatchTime, 'seconds') < 10) {return}\n        else if (! activityInProgress) { return }\n\n        const updatedActivity = {\n            ...activityInProgress,\n            ...C2Data\n        }\n        \n        async function patchActivity() {\n            try {\n                await api.patch(`/activities/${activityInProgress._id}`, updatedActivity)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        patchActivity()\n            .then( setLastPatchTime(moment()) )\n    }, [C2Data])\n\n    function handleClickConnect() {\n        if (!navigator.bluetooth) {\n            alert('This browser does not support bluetooth.');\n        } else if (pm5.connected()) {\n            return\n        } else {\n            pm5.doConnect()\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0, borderBottom: '1px solid var(--bc)'}} />\n            {loading ? <Loading /> :\n            <div className='main-container session-page' style={{ padding: 0}} >\n                <div className='d-flex jc-flex-start ai-flex-start' >\n                    <div className='workout-menu' style={{\n                        width: 350, minWidth: 300, height: 'calc(100vh - var(--main-nav-height) - 1px', position: 'sticky',\n                        top: 'calc(var(--main-nav-height) + 1px)',\n                        }}\n                    >\n                        <div style={{ height: 150, padding: '0px 20px'}}>\n                            <br />\n                            <SessionInfoCard session={session} />\n                        </div>\n                            \n                        <Chat roomID={sessionID} height={'calc(100vh - 1px - var(--main-nav-height) - 150px)'}/>\n                        \n                    </div>\n                    <div className='session-sections' style={{flex: 1, padding: '0px 0px'}}>\n                        <br /><br />\n                        <h3 className='fw-s session-section-title'>Activities</h3>\n                        <div className='session-section-container float-container'>\n                            {session.workoutItems.map((item, i) => (\n                                <div key={i}>\n                                    <LiveActivityTable \n                                        activities={activities[i]}\n                                        activityInProgress={activityInProgress}\n                                        setActivityInProgress={setActivityInProgress}\n                                        activityTitle={item} \n                                        session={session}\n                                        workoutItemIndex={i}\n                                        fetchActivities={fetchActivities}\n                                        ergConnected={ergConnected}\n                                        handleClickConnect={handleClickConnect}\n                                        zIndexHeader={i}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n\n                        <br /><br />\n\n                        <h3 className='fw-s session-section-title'>Results</h3>\n                        <div className='session-section-container float-container'>\n                            {session.workoutItems.map((item, i) => (\n                                <div key={i}>\n                                    <ResultsTable \n                                        activities={activities[i]} \n                                        activityTitle={item} \n                                        zIndexHeader={session.workoutItems.length + i}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                        <div style={{height: 200}} />\n                    </div>\n                </div>\n            </div>\n            }\n            \n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/MembersInfoCard.js",["390","391","392"],"import React, {useState, useEffect} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function MembersInfoCard(props) {\n    const {thisUser} = useAuth()\n    const [session, setSession] = useState(props.session)\n    const [isMember, setIsMember] = useState(false)\n\n    useEffect(() => {\n        setSession(props.session)\n        setIsMember(props.session.members.some(m => m._id === thisUser._id))\n    }, [props])\n\n    async function handleClickJoin() {\n        try {\n            await api.patch(`/sessions/${session._id}/join`, {user: thisUser._id})\n        } catch (error) {\n            console.log(error)\n        }\n        props.fetchData()\n    }\n\n    return (\n        <div style={{...props.style}}>\n            <div>\n                <div className='d-flex jc-space-between ai-center'>\n                    <h4 style={{fontWeight: '500'}}>Members <small>( {session.members.length} )</small></h4>\n                    <button \n                        onClick={handleClickJoin} \n                        className='solid-btn-secondary'\n                        disabled={isMember}\n                        style={{display: isMember && 'none'}}\n                    >\n                        Join\n                    </button>\n                </div>\n                <table style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {session.members.map(member => (\n                            <tr>\n                                <td className='d-flex jc-flex-start ai-center'>\n                                    {member.iconURL && <img src={member.iconURL} className='user-icon-small' />}\n                                    {!member.iconURL &&\n                                        <div className='user-icon-default-small'>\n                                            <i className='bi bi-person' />\n                                        </div>\n                                    }\n                                    <p>{member.displayName}</p>\n                                </td>\n                                \n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}",["393","394"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/SessionInfoCard.js",["395","396","397"],"import React, {useEffect, useState} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport ClubIcon from '../icons/ClubIcon'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function SessionInfoCard(props) {\n    const [session, setSession] = useState(props.session)\n\n    useEffect(() => {\n        setSession(props.session)\n    }, [props])\n    return (\n        <div style={{...props.style}}>\n            <h3 className='mb-20'>\n                {session.title}\n            </h3>\n            <div className='d-flex jc-flex-start ai-flex-start' style={{padding: '0px 10px'}}>\n                <div className='mr-10'>\n                    {session.club && <ClubIcon club={session.club} />}\n                    {!session.club && (\n                        session.hostUser.iconURL ? \n                            <img className='user-icon' src={session.hostUser.iconURL} />\n                            :\n                            <div className='user-icon-default'>\n                                <i className='bi bi-person' />\n                            </div>\n                    )}\n                </div>\n                \n                <div >\n                    <p className='c-cs fw-s mb-10'>\n                        Host - {session.club ? session.club.name : session.hostUser.displayName}\n                    </p>\n                    <h5 className='c-cs'>\n                        {moment(props.session.startAt).calendar()}\n                    </h5>\n                </div>\n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/LiveActivityTable.js",["398","399","400","401","402"],"import React, {useEffect, useState} from 'react'\nimport C2Screen from '../misc/C2Screen'\nimport C2Results from '../misc/C2Results'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport 'moment-duration-format'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function LiveActivityTable(props) {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [hideSelf, setHideSelf] = useState(true)\n    const [hideInstructions, setHideInstructions] = useState(true)\n\n    const [activities, setActivities] = useState(\n        props.activities.filter(ac => !ac.isCompleted)\n    )\n    const [ergConnected, setErgConnected] = useState(props.ergConnected)\n    const [activityInProgress, setActivityInProgress] = useState(props.activityInProgress)\n    const [startDisabled, setStartDisabled] = useState(false)\n\n    const [selectedActivityIDs, setSelectedActivityIDs] = useState(new Set())\n    const [didCompleteActivity, setDidCompleteActivity] = useState(false)\n\n    const [usersCompletedCount, setUsersCompletedCount] = useState(0)\n    const [usersActiveCount, setUsersActiveCount] = useState(0)\n    \n\n    useEffect(() => {\n        setActivities(props.activities.filter(ac => !ac.isCompleted))\n        \n        const completedIDs = new Set()\n        const activeIDs = new Set()\n\n        props.activities.forEach(ac => {\n            if (ac.user._id === thisUser._id && ac.isCompleted) {\n                setDidCompleteActivity(true)\n            }\n            if (ac.isCompleted) {completedIDs.add(ac.user._id)}\n            else {activeIDs.add(ac.user._id)}\n        })\n\n        setUsersActiveCount(activeIDs.size)\n        setUsersCompletedCount(completedIDs.size)\n\n    }, [props.activities])\n\n    useEffect(() => {\n        setErgConnected(props.ergConnected)\n    }, [props.ergConnected])\n\n    useEffect(() => {\n        setActivityInProgress(props.activityInProgress)\n        if (activityInProgress) {setHideInstructions(true)}\n    }, [props.activityInProgress])\n\n    async function handleClickFinish() {\n        if (! activityInProgress) {\n            // extra check: this should not be possible\n            console.log('error finishing: no activity in progress')\n            return\n        } else if (activityInProgress.workoutItemIndex !== props.workoutItemIndex) {\n            // extra check: this should not be possible\n            console.log('error finishing activity: incorrect WorkoutItemIndex')\n        }\n        removeSelectedActivity(activityInProgress._id)\n        try {\n            await api.patch(`/activities/${activityInProgress._id}/complete`)\n            props.setActivityInProgress(null)\n\n        } catch (error) {\n            console.log(error)\n        }\n        setDidCompleteActivity(true)\n    }\n\n    async function handleClickStartWorkout() {\n        setStartDisabled(true)\n\n        if (activityInProgress) {\n            // extra check: cannot start while activity in progress\n            // present error message to user ?\n        }\n        else if (! ergConnected) {\n            setMessage({title: 'Connect your ergometer before starting a workout.', isError: true, timestamp: moment()})\n        } else {\n            const activity = {\n                user: thisUser._id,\n                workoutItemIndex: props.workoutItemIndex,\n                session: props.session._id\n            }\n            try {\n                const res = await api.post('/activities', activity)\n                handleClickActivity(res.data._id)\n                props.setActivityInProgress(res.data)\n                props.fetchActivities()\n            } catch (error) {\n                console.log(error)\n            }\n    \n            setHideSelf(false)\n            setHideInstructions(true)\n        }\n        setStartDisabled(false)\n    }\n\n    function handleClickActivity(activityID) {\n        if ( ! selectedActivityIDs.has(activityID) ) {\n            setSelectedActivityIDs(new Set([...selectedActivityIDs, activityID ]))\n        }\n    }\n\n    function removeSelectedActivity(activityID) {\n        selectedActivityIDs.delete(activityID)\n        setSelectedActivityIDs( new Set(selectedActivityIDs) )\n    }\n\n    function handleClickConfigureWorkout() {\n        setMessage({title: \"We're working on this. Please set up this workout on your machine manually.\", isError: false, timestamp: moment()})\n    }\n\n    return (\n        <div style={{marginBottom: hideSelf ? 0 : 30}} className='live-activity-table'>\n            <div className='d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center clickable-container-np' \n                    style={{ minHeight: '55px', padding: '0px 5px', cursor: 'pointer'}} \n                    onClick={() => setHideSelf(curr => !curr)}\n                >\n                    <i className={`bi bi-chevron-${hideSelf ? 'right' : 'down'} icon-btn-circle c-cs mr-10`}/>\n                    <h4>{props.activityTitle}</h4>\n                </div>\n                <div className='d-flex jc-flex-end ai-center'>\n                    {activityInProgress ?\n                        activityInProgress.workoutItemIndex === props.workoutItemIndex &&\n                            <button className='clear-btn-cancel mr-10' onClick={handleClickFinish}> Finish </button>\n                        :\n                        !didCompleteActivity && (hideInstructions ? \n                            <button className='clear-btn-cancel mr-10' onClick={() => setHideInstructions(false)} > Begin </button> \n                            :\n                            <button className='clear-btn-cancel mr-10' onClick={() => setHideInstructions(true)} > Cancel </button>\n                        )\n                    }\n                    <div \n                        style={{\n                            height: '40px', width: '95px',\n                            borderLeft: '1px solid var(--bc)',\n                            padding: '0px 15px'\n                        }}\n                    >\n                        <div className='d-flex ai-center jc-space-between' style={{width: '100%'}}>\n                            <h5 style={{color: 'var(--color-secondary)', display: 'inline', textAlign: 'left'}}> \n                                Active\n                            </h5>\n                            <h5 style={{color: 'var(--tint-color)', display: 'inline', textAlign: 'right'}} >\n                                {usersActiveCount}\n                            </h5>\n                        </div>\n                        <div className='d-flex ai-center jc-space-between' style={{width: '100%'}}>\n                            <h5 style={{color: 'var(--color-secondary)', display: 'inline', textAlign: 'left'}}> \n                                Complete\n                            </h5>\n                            <h5 style={{color: 'var(--tint-color)', display: 'inline', textAlign: 'right'}} >\n                                {usersCompletedCount}\n                            </h5>\n                        </div>\n                    </div>\n                    \n                    <div className='d-flex ai-center jc-center tooltip' style={{ height: 40, width: 125, borderLeft: '1px solid var(--bc)'}}>\n\n                        <div className='tooltip-text'><h6>\n                            {didCompleteActivity ? 'Activity complete' : 'Activity incomplete'}\n                        </h6></div>\n                        <i className={didCompleteActivity ? 'bi bi-check-circle' : 'bi bi-exclamation-triangle'}\n                            style={{fontSize: 25, color: didCompleteActivity ? 'var(--color-success)':'var(--color-yellow-text'}} \n                        />\n                    </div>\n                </div>\n            </div>\n            <div style={{margin: '0px 20px', borderLeft: '2px solid var(--bc)'}}>\n                <div style={{ display: hideInstructions && 'none', padding: '10px 25px', marginBottom: 20 }} className='c-cs'>\n                    <h4 className='c-cs'>Activity Intsructions</h4>\n                    <br />\n                    <div style={{padding: '0px 20px'}}>\n                        <div className='d-flex jc-flex-start ai-center'>\n                            <h4 className='number-item mr-30'>1</h4>\n                            <button onClick={props.handleClickConnect} className='clear-btn-secondary mr-10'>\n                                {ergConnected ? 'Reconnect' : 'Connect Ergometer'}\n                            </button> \n                            <p style={{ color: ergConnected ? 'var(--color-success)' : 'var(--color-error)'}}>\n                                {ergConnected ? ' Connected' : ' Not Connected'}\n                            </p>\n                        </div>\n                        \n                        <br />\n                        <div className='d-flex jc-flex-start ai-center'>\n                            <h4 className='number-item mr-30'>2</h4>\n                            <button onClick={handleClickConfigureWorkout} className='clear-btn-secondary mr-10'> \n                                Push workout to my erg\n                            </button>\n                        </div>\n                        \n                        <br />\n                        <button onClick={handleClickStartWorkout} className='solid-btn-secondary'\n                            style={{display: 'block'}}\n                            disabled={startDisabled}\n                        >\n                            Start Workout\n                        </button>\n                    </div>\n                </div >\n                    \n                <div className='d-flex jc-space-around ai-flex-start' \n                    style={{display: hideSelf ? 'none' : 'flex', flexWrap: 'wrap'}}\n                >\n                    {activities.filter(ac => selectedActivityIDs.has(ac._id)).map(ac =>(\n                        <C2Screen \n                            activity={ac} \n                            style={{height: 'auto', width: '275px', margin: '15px 10px'}} \n                            handleClickClose={() => removeSelectedActivity(ac._id)}\n                        />\n                    ))} \n                </div>\n\n                <div style={{display: hideSelf ? 'none': 'block'}}>\n                    <table className='data-table workout-table' style={{width: '100%'}}>\n                        <thead >\n                            <tr>\n                                <th>Name</th>\n                                <th>Pace</th>\n                                <th>Ave Pace</th>\n                                <th>Distance</th>\n                                <th>Stroke Rate</th>\n                                <th>Elapsed Time</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {activities.map((ac, index) => (\n                                <tr key={index} onClick={() => handleClickActivity(ac._id)}\n                                    style={{ borderLeft: ac.user._id == thisUser._id ? '3px solid var(--tint-color)' : 'none' }} \n                                >\n                                    <td>{ac.user.displayName}</td>\n                                    <td>{moment.duration(ac.currentPace, 'seconds').format('hh:mm:ss')}</td>\n                                    <td>{moment.duration(ac.averagePace, 'seconds').format('hh:mm:ss')}</td>\n                                    <td>{ac.distance.toFixed()}</td>\n                                    <td>{ac.strokeRate}</td>\n                                    <td>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                                </tr>\n                            ))}\n                            \n                        </tbody>\n                    </table>\n                    {!activities.length &&\n                        <p className='empty-table-message'>No activities in progress</p>\n                    }\n                </div>\n                \n            </div>\n        </div>\n        \n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Screen.js",["403","404"],"import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport 'moment-duration-format'\nimport './c2screen.css'\n\nexport default function C2Screen(props) {\n    const [activity, setActivity] = useState(props.activity)\n\n    const thinBorder='1px solid #0e1e18'\n    const border='2px solid #0e1e18'\n    const thickBorder='5px solid #0e1e18'\n\n    useEffect(() => {\n        setActivity(props.activity)\n    }, [props.activity])\n\n    return (\n        <div style={props.style} className='c2screen-meta'>\n            <h5 className='screen-title fw-xl' style={{fontSize: 14}}>View Detail</h5>\n            <div className='c2screen' style={{ display: 'grid',  gridTemplateColumns: 'repeat(3, 1fr)'}}>\n                <h5 style={{gridColumn: '1/3', borderRight: border}} className='medium'>\n                    {moment.duration(activity.elapsedTime, 'seconds').format('hh:mm:ss')}\n                </h5>\n\n                <h5 className='medium'>\n                    {activity.strokeRate}<small className='small'>s/m</small>\n                </h5>\n\n                <h5 className='big d-inline' style={{gridColumn: '1/4', borderBottom: border, borderTop: border}}>\n                    {moment.duration(activity.currentPace, 'seconds').format('hh:mm:ss')}\n                    <small className='small'> ave / 500m </small>\n                </h5>\n\n                <h5 className='medium' style={{gridColumn: '1/3', borderRight: border}}>\n                    {activity.distance.toFixed()} <small className='small'>m</small>\n                </h5>\n\n                <h5 className='medium d-inline' className='medium' style={{gridColumn: '1/4', borderTop: thickBorder}}>\n                    {moment.duration(activity.averagePace, 'seconds').format('hh:mm:ss')}\n                    <small className='small'> ave /500m </small>\n                </h5>\n                    \n            </div>\n        </div>\n    )\n}\n/*\nimport React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport 'moment-duration-format'\nimport './c2screen.css'\n\n\n\n\nexport default function C2Screen(props) {\n    const [activity, setActivity] = useState(props.activity)\n\n    const thinBorder='1px solid #0e1e18'\n    const border='2px solid #0e1e18'\n    const thickBorder='5px solid #0e1e18'\n\n    useEffect(() => {\n        setActivity(props.activity)\n    }, [props.activity])\n\n    return (\n        <div style={props.style} className='c2screen-meta'>\n            <div className='screen-outer d-flex jc-space-between ai-center'>\n                <h4>\n                    {activity.user.displayName}\n                </h4>\n                <button onClick={props.handleClickClose}>Close</button>\n            </div>\n\n            <div className='c2screen' style={{ display: 'grid',  gridTemplateColumns: 'repeat(3, 1fr)'}}>\n                <h5 style={{gridColumn: '1/3', borderRight: border}} className='medium'>\n                    {moment.duration(activity.elapsedTime, 'seconds').format('hh:mm:ss')}\n                </h5>\n                <h5 className='medium d-inline'>\n                    {activity.strokeRate}<h5 className='small d-inline'>s/m</h5>\n                </h5>\n                <h5 className='big' style={{gridColumn: '1/4', borderBottom: border, borderTop: border}}>\n                    {moment.duration(activity.currentPace, 'seconds').format('hh:mm:ss')} \n                    <h5 className='small' style={{display: 'inline'}}>\n                        /500m \n                    </h5>\n                </h5>\n                <h5 className='medium' style={{gridColumn: '1/3', borderRight: border}}>\n                    {activity.distance.toFixed()}<h5 className='small' style={{display: 'inline'}}>m</h5>\n                </h5>\n                <h5 className='medium' style={{gridColumn: '1/4', borderTop: thickBorder}}>\n                    {moment.duration(activity.averagePace, 'seconds').format('hh:mm:ss')}\n                    <h5 className='small' style={{display: 'inline'}}>\n                        ave /500m\n                    </h5>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\n*/","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"/*\n * Minimal usage:\n *\n *  function cb_connecting() {\n *       // stuff to do while browser is connecting to PM5\n *  }\n *\n *  function cb_connected() {\n *       // do this when browser connects to PM5\n *  }\n *\n *  function cb_disconnected() {\n *      // stuff to do when disconnected from PM5\n *  }\n *\n *  function cb_message(m) {\n *      // message received here.\n *  }\n *\n *  m = new PM5(cb_connecting, cb_connected, cb_disconnected, cb_message);\n *\n *  // Chrome connections to Bluetooth devices can only occur\n *  // on user gesture (https://webbluetoothcg.github.io/web-bluetooth/#ua-bluetooth-address).\n *  document.querySelector('#connect').addEventListener('click', function() {\n *      if (m.connected()) {\n *          m.doDisconnect();\n *      } else {\n *          m.doConnect();\n *      }\n *  });\n */\n\n/*\n * From https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nvar EventTarget = function() {\n    this.listeners = {};\n};\n\nEventTarget.prototype.listeners = null;\nEventTarget.prototype.addEventListener = function(type, callback) {\n    if (!(type in this.listeners)) {\n        this.listeners[type] = [];\n    }\n    this.listeners[type].push(callback);\n};\n\nEventTarget.prototype.removeEventListener = function(type, callback) {\n    if (!(type in this.listeners)) {\n        return;\n    }\n    var stack = this.listeners[type];\n    for (var i = 0, l = stack.length; i < l; i++) {\n        if (stack[i] === callback){\n            stack.splice(i, 1);\n            return;\n        }\n    }\n};\n\nEventTarget.prototype.dispatchEvent = function(event) {\n    if (!(event.type in this.listeners)) {\n        return true;\n    }\n    var stack = this.listeners[event.type].slice();\n\n    for (var i = 0, l = stack.length; i < l; i++) {\n        stack[i].call(this, event);\n    }\n    return !event.defaultPrevented;\n};\n\n/*\n * From the Concept2 Performance Monitor Bluetooth Smart Communications\n * Interface Definition spec, v1.25, 8/29/17 11:19AM.\n *\n * Verify discovered services:\n * - https://googlechrome.github.io/samples/web-bluetooth/discover-services-and-characteristics.html\n *\n * Inspired from https://github.com/GoogleChromeLabs/rowing-monitor\n */\nconst services = {\n    discovery:      { id: 'ce060000-43e5-11e4-916c-0800200c9a66' },\n    information:    { id: 'ce060010-43e5-11e4-916c-0800200c9a66' },\n    control:        { id: 'ce060020-43e5-11e4-916c-0800200c9a66' },\n    rowing:         { id: 'ce060030-43e5-11e4-916c-0800200c9a66' }\n};\nconst characteristics = {\n    informationService: {\n        serialNumber: {\n            id:         'ce060012-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        hardwareRevision: {\n            id:         'ce060013-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        firmwareRevision: {\n            id:         'ce060014-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        },\n        manufacturerName: {\n            id:         'ce060015-43e5-11e4-916c-0800200c9a66',\n            service:    services.information\n        }\n    },\n    controlService: {\n        transmit: {\n            id:         'ce060021-43e5-11e4-916c-0800200c9a66',\n            service:    services.control\n        },\n        receive: {\n            id:         'ce060022-43e5-11e4-916c-0800200c9a66',\n            service:    services.control\n        }\n    },\n    rowingService: {\n        generalStatus: {\n            id:         'ce060031-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStatus: {\n            id:         'ce060032-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStatus2: {\n            id:         'ce060033-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        generalStatusRate: {\n            id:         'ce060034-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        strokeData: {\n            id:         'ce060035-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalStrokeData: {\n            id:         'ce060036-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        splitIntervalData: {\n            id:         'ce060037-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalSplitIntervalData: {\n            id:         'ce060038-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        endOfWorkoutSummaryData: {\n            id:         'ce060039-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalEndOfWorkoutSummaryData: {\n            id:         'ce06003a-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        heartRateBeltInformation: {\n            id:         'ce06003b-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        additionalEndOfWorkoutSummaryData2: {\n            id:         'ce06003c-43e5-11e4-916c-0800200c9a66', /* multiplexed only */\n            service:    services.rowing\n        },\n        forceCurveData: {\n            id:         'ce06003d-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        },\n        multiplexedInformation: {\n            id:         'ce060080-43e5-11e4-916c-0800200c9a66',\n            service:    services.rowing\n        }\n    }\n};\n\nexport class PM5 {\n    /*\n     */\n    constructor(cb_connecting, cb_connected, cb_disconnected, cb_message) {\n        this.idObjectMap = new Map();\n        this.eventTarget = new EventTarget();\n\n        this.cb_connecting = cb_connecting;\n        this.cb_connected = cb_connected;\n        this.cb_disconnected = cb_disconnected;\n        this.cb_message = cb_message;\n    }\n\n    /*\n     */\n    doConnect() {\n        this.connect()\n        .then(() => {\n            this.cb_connecting();\n            return this.addEventListener('multiplexed-information', this.cb_message)\n        })\n        .then(() => {\n            return this.addEventListener('disconnect', this.cb_disconnected);\n        })\n        .then(() => {\n            this.cb_connected();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    /*\n     */\n    doDisconnect() {\n        this.removeEventListener('multiplexed-information', this.cb_message)\n        .then(() => {\n            this.disconnect();\n            this.removeEventListener('multiplexed-information', this.cb_message)\n        })\n        .then(() => {\n            return this.removeEventListener('disconnect', this.cb_disconnected);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    /*\n     */\n    addEventListener(type, callback) {\n        this.eventTarget.addEventListener(type, callback);\n        switch (type) {\n            case 'general-status':\n                return this._addGeneralStatusListener();\n                break;\n\n            case 'workout-end':\n                return this._addWorkoutEndListener();\n                break;\n\n            case 'multiplexed-information':\n                return this._addMultiplexedInformationListener();\n                break;\n\n            case 'additional-status':\n                return this._addAdditionalStatus();\n                break;\n\n            case 'additional-status2':\n                return this._addAdditionalStatus2();\n                break;\n\n            case 'stroke-data':\n                return this._addStrokeData();\n                break;\n\n            case 'additional-stroke-data':\n                return this._addAdditionalStrokeData();\n                break;\n\n            case 'split-interval-data':\n                return this._addSplitIntervalData();\n                break;\n\n            case 'additional-split-interval-data':\n                return this._addAdditionalSplitIntervalData();\n                break;\n\n            case 'force-curve-data':\n                /*\n                 * XXX We get this back:\n                 *\n                 *   NotFoundError: No Characteristics matching UUID\n                 *   ce06003d-43e5-11e4-916c-0800200c9a66 found in\n                 *   Service with UUID ce060030-43e5-11e4-916c-0800200c9a66.\n                 *\n                 * It _looks_ like this characteristic doesn't appear\n                 * in this service as per the spec. Have to get in touch\n                 * with Concept2 to see if this is the case, and what\n                 * service we need to associate this characteristic with.\n                 */\n                // return this._addForceCurveData();\n                break;\n\n            case 'additional-workout-end':\n                return this._addAdditionalEndOfWorkoutSummaryData();\n                break;\n\n            case 'heart-rate-belt-information':\n                return this._addHeartRateBeltInformation();\n                break;\n\n            case 'additional-workout-end2':\n                return this._addAdditionalEndOfWorkoutSummaryData2();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /*\n     */\n    removeEventListener(type, callback) {\n        this.eventTarget.removeEventListener(type, callback);\n\n        /*\n         * We can only modify characteristics if we are connected.\n         */\n        if (!this.connected()) {\n            return Promise.resolve();\n        }\n\n        switch (type) {\n            case 'general-status':\n                return this._removeGeneralStatusListener();\n                break;\n\n            case 'workout-end':\n                return this._removeWorkoutEndListener();\n                break;\n\n            case 'multiplexed-information':\n                return this._removeMultiplexedInformationListener();\n                break;\n\n            case 'additional-status':\n                return this._removeAdditionalStatus();\n                break;\n\n            case 'additional-status2':\n                return this._removeAdditionalStatus2();\n                break;\n\n            case 'stroke-data':\n                return this._removeStrokeData();\n                break;\n\n            case 'additional-stroke-data':\n                return this._removeAdditionalStrokeData();\n                break;\n\n            case 'split-interval-data':\n                return this._removeSplitIntervalData();\n                break;\n\n            case 'additional-split-interval-data':\n                return this._removeAdditionalSplitIntervalData();\n                break;\n\n            case 'force-curve-data':\n                return this._removeForceCurveData();\n                break;\n\n            case 'additional-workout-end':\n                return this._removeAdditionalEndOfWorkoutSummaryData();\n                break;\n\n            case 'heart-rate-belt-information':\n                return this._removeHeartRateBeltInformation();\n                break;\n\n            case 'additional-workout-end2':\n                return this._removeAdditionalEndOfWorkoutSummaryData2();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /*\n     */\n    connect() {\n        if (!navigator.bluetooth) {\n            return Promise.reject('Bluetooth not available');\n        }\n\n        return navigator.bluetooth.requestDevice({\n            filters: [{\n                services: [\n                    services.discovery.id\n                ]\n            }],\n            optionalServices: [\n                services.information.id,\n                services.control.id,\n                services.rowing.id\n            ]\n        })\n        .then(device => {\n            this.device = device;\n            this.device.addEventListener('gattserverdisconnected', _gattDisconnect => {\n                console.log('gattserverdisconnected');\n                this.device.removeEventListener('gattserverdisconnected', _gattDisconnect);\n                this.idObjectMap.clear();\n                this.eventTarget.dispatchEvent({ type: 'disconnect'});\n            });\n            return device.gatt.connect();\n        })\n        .then(server => {\n            this.server = server;\n            return Promise.resolve();\n        })\n        .catch(error => {\n            console.log(error);\n            return Promise.reject(error);\n        });\n    }\n\n    /*\n     */\n    disconnect() {\n        if (!this.connected()) {\n            console.log(\"disconnect: wasn't connected\");\n            return;\n        }\n        this.device.gatt.disconnect();\n    }\n\n    /*\n     */\n    connected() {\n        return this.device && this.device.gatt && this.device.gatt.connected;\n    }\n\n    /*\n     */\n    _getService(service) {\n        const serviceObject = this.idObjectMap.get(service.id);\n\n        if (serviceObject) {\n            return Promise.resolve(serviceObject);\n        }\n\n        return this.server.getPrimaryService(service.id)\n            .then(s => {\n                this.idObjectMap.set(service.id, s);\n                return Promise.resolve(s);\n            })\n            .catch(error => {\n                console.log('getPrimaryService(' + service.id + ')');\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     * 0x003d is not multiplexed.\n     */\n    _cbForceCurveData(monitor, e) {\n        const v = new Uint8Array(e.target.value.buffer);\n        const numCharacteristics = (v[0] >> 4) & 0x0f;\n        const numDataPoints = v[0] & 0x0f;\n        const sequenceNumber = v[1];\n        let data = [];\n\n        for (let i = 2; i <= numDataPoints*2; i += 2) {\n            data.push(v[i] + (v[i+1] << 8));\n        }\n\n        const event = {\n            type: 'force-curve-data',\n            source: monitor,\n            raw: e.target.value,\n            data: {\n                numCharacteristics: numCharacteristics,\n                numDataPoints: numDataPoints,\n                sequeneNumber: sequenceNumber,\n                data: data\n            }\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * distance             = N/A\n     * workoutType          = CSAFE_PM_GET_WORKOUTTYPE\n     * intervalType         = CSAFE_PM_GET_INTERVALTYPE\n     * workoutState         = CSAFE_PM_GET_WORKOUTSTATE\n     * rowingState          = CSAFE_PM_GET_ROWINGSTATE\n     * strokeState          = CSAFE_PM_GET_STROKESTATE\n     * totalWorkDistance    = CSAFE_PM_GET_WORKDISTANCE\n     * workoutDuration      = CSAFE_PM_GET_WORKOUTDURATION\n     * workoutDurationType  = CSAFE_PM_GET_WORKOUTDURATION\n     * dragFactor           = CSAFE_PM_GET_DRAGFACTOR\n     */\n    _extractGeneralStatus(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        let data = {\n            elapsedTime:        (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            distance:           (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1,\n            workoutType:        v[o+6],\n            intervalType:       v[o+7],\n            workoutState:       v[o+8],\n            rowingState:        v[o+9],\n            strokeState:        v[o+10],\n            totalWorkDistance:  (v[o+11] + (v[o+12] << 8) + (v[o+13] << 16)),\n            workoutDuration:    (v[o+14] + (v[o+15] << 8) + (v[o+16] << 16)),\n            workoutDurationType:v[o+17],\n            dragFactor:         v[o+18]\n        };\n\n        /*\n         * C2 BT CID: page 11, 0x0031 characteristic\n         * \"Workout Duration Lo (if time, 0.01 sec lsb)\"\n         *\n         * enum DurationTypes {\n         *      CSAFE_TIME_DURATION = 0,\n         *      CSAFE_CALORIES_DURATION = 0x40,\n         *      CSAFE_DISTANCE_DURATION = 0x80,\n         *      CSAFE_WATTS_DURATION = 0xc0\n         * }\n         */\n        if (data.workoutDurationType == 0x0) {\n            data.workoutDuration *= 0.01;\n        }\n\n        return data;\n    }\n\n    /*\n     */\n    _cbGeneralStatus(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'general-status',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractGeneralStatus(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime      = N/A\n     * speed            = CSAFE_GETSPEED\n     * strokeRate       = CSAFE_PM_GET_STROKESTATE\n     * heartRate        = CSAFE_PM_GET_AVG_HEARTRATE\n     * currentPace      = N/A\n     * averagePace      = CSAFE_PM_GET_TOTAL_AVG_500MPACE\n     * restDistance     = CSAFE_PM_GET_RESTDISTANCE\n     * restTime         = CSAFE_PM_GET_RESTTIME\n     */\n    _extractAdditionalStatus(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {\n            elapsedTime:        (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            speed:              (v[o+3] + (v[o+4] << 8)) * 0.001,\n            strokeRate:         v[o+5],\n            heartRate:          v[o+6],\n            currentPace:        (v[o+7] + (v[o+8] << 8)) * 0.01,\n            averagePace:        (v[o+9] + (v[o+10] << 8)) * 0.01,\n            restDistance:       (v[o+11] + (v[o+12] << 8)),\n            restTime:           (v[o+13] + (v[o+14] << 8) + (v[o+15] << 16)) * 0.01\n        };\n\n        if (multiplexed) {\n            r.averagePower = v[o+16] + (v[o+17] << 8);\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStatus(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-status',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStatus(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * intervalCount        = CSAFE_PM_GET_WORKOUTINTERVALCOUNT\n     * averagePower         = CSAFE_PM_GET_TOTAL_AVG_POWER\n     * totalCalories        = CSAFE_PM_GET_TOTAL_AVG_CALORIES\n     * splitAveragePace     = CSAFE_PM_GET_SPLIT_AVG_500MPACE\n     * splitAveragePower    = CSAFE_PM_GET_SPLIT_AVG_POWER\n     * splitAverageCalories = CSAFE_PM_GET_SPLIT_AVG_CALORIES\n     * lastSplitTime        = CSAFE_PM_GET_LAST_SPLITTIME\n     * lastSplitDistance    = CSAFE_PM_GET_LAST_SPLITDISTANCE\n     */\n    _extractAdditionalStatus2(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.intervalCount =         v[o+3];\n            r.totalCalories =         (v[o+4] + (v[o+5] << 8));\n            r.splitAveragePace =      (v[o+6] + (v[o+7] << 8)) * 0.01;\n            r.splitAveragePower =     (v[o+8] + (v[o+9] << 8));\n            r.splitAverageCalories =  (v[o+10] + (v[o+11] << 8));\n            r.lastSplitTime =         (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n            r.lastSplitDistance =     (v[o+15] + (v[o+16] << 8) + (v[o+17] << 16));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.intervalCount =         v[o+3];\n            r.averagePower =          (v[o+4] + (v[o+5] << 8));\n            r.totalCalories =         (v[o+6] + (v[o+7] << 8));\n            r.splitAveragePace =      (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.splitAveragePower =     (v[o+10] + (v[o+11] << 8));\n            r.splitAverageCalories =  (v[o+12] + (v[o+13] << 8));\n            r.lastSplitTime =         (v[o+14] + (v[o+15] << 8) + (v[o+16] << 16));\n            r.lastSplitDistance =     (v[o+17] + (v[o+18] << 8) + (v[o+19] << 16));\n        };\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStatus2(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-status2',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStatus2(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime          = N/A\n     * distance             = N/A\n     * driveLength          = CSAFE_PM_GET_STROKESTATS\n     * driveTime            = CSAFE_PM_GET_STROKESTATS\n     * strokeRecoveryTime   = CSAFE_PM_GET_STROKESTATS\n     * strokeDistance       = CSAFE_PM_GET_STROKESTATS\n     * peakDriveForce       = CSAFE_PM_GET_STROKESTATS\n     * averageDriveForce    = CSAFE_PM_GET_STROKESTATS\n     * workPerStroke        = CSAFE_PM_GET_STROKESTATS\n     * strokeCount          = CSAFE_PM_GET_STROKESTATS\n     */\n    _extractStrokeData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.distance =              (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1;\n            r.driveLength =           v[o+6] * 0.01;\n            r.driveTime =             v[o+7] * 0.01;\n            r.strokeRecoveryTime =    (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.strokeDistance =        (v[o+10] + (v[o+11] << 8)) * 0.01;\n            r.peakDriveForce =        (v[o+12] + (v[o+13] << 8)) * 0.1;   /* XXX pounds */\n            r.averageDriveForce =     (v[o+14] + (v[o+15] << 8)) * 0.1;   /* XXX pounds */\n            r.strokeCount =           (v[o+16] + (v[o+17] << 8));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.distance =              (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1;\n            r.driveLength =           v[o+6] * 0.01;\n            r.driveTime =             v[o+7] * 0.01;\n            r.strokeRecoveryTime =    (v[o+8] + (v[o+9] << 8)) * 0.01;\n            r.strokeDistance =        (v[o+10] + (v[o+11] << 8)) * 0.01;\n            r.peakDriveForce =        (v[o+12] + (v[o+13] << 8)) * 0.1;   /* XXX pounds */\n            r.averageDriveForce =     (v[o+14] + (v[o+15] << 8)) * 0.1;   /* XXX pounds */\n            r.workPerStroke =         (v[o+16] + (v[o+17] << 8));\n            r.strokeCount =           (v[o+18] + (v[o+19] << 8));\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbStrokeData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'stroke-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractStrokeData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime              = N/A\n     * strokePower              = CSAFE_PM_GET_STROKE_POWER\n     * strokeCalories           = CSAFE_PM_GET_STROKE_CALORICBURNRATE\n     * strokeCount              = CSAFE_PM_GET_STROKESTATS\n     * projectedWorkTime        = N/A\n     * projectedWorkDistance    = N/A\n     * workPerStroke            = N/A\n     */\n    _extractAdditionalStrokeData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        if (multiplexed) {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.strokePower =           (v[o+3] + (v[o+4] << 8));\n            r.strokeCalories =        (v[o+5] + (v[o+6] << 8));\n            r.strokeCount =           (v[o+7] + (v[o+8] << 8));\n            r.projectedWorkTime =     (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16));\n            r.projectedWorkDistance = (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n            r.workPerStroke =         (v[o+15] + (v[o+16] << 8));\n        } else {\n            r.elapsedTime =           (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01;\n            r.strokePower =           (v[o+3] + (v[o+4] << 8));\n            r.strokeCalories =        (v[o+5] + (v[o+6] << 8));\n            r.strokeCount =           (v[o+7] + (v[o+8] << 8));\n            r.projectedWorkTime =     (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16));\n            r.projectedWorkDistance = (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalStrokeData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-stroke-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalStrokeData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime              = N/A\n     * distance                 = N/A\n     * splitIntervalTime        = N/A\n     * splitIntervalDistance    = N/A\n     * intervalRestTime         = N/A\n     * intervalRestDistance     = N/A\n     * splitIntervalType        = N/A\n     * splitIntervalNumber      = N/A\n     */\n    _extractSplitIntervalData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        return {\n            elapsedTime:            (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            distance:               (v[o+3] + (v[o+4] << 8) + (v[o+5] << 16)) * 0.1,\n            splitIntervalTime:      (v[o+6] + (v[o+7] << 8) + (v[o+8] << 16)) * 0.1,\n            splitIntervalDistance:  (v[o+9] + (v[o+10] << 8) + (v[o+11] << 16)),\n            intervalRestTime:       v[o+12] + (v[o+13] << 8),\n            intervalRestDistance:   v[o+14] + (v[o+15] << 8),\n            splitIntervalType:      v[o+16],\n            splitIntervalNumber:    v[o+17]\n        };\n    }\n\n    /*\n     */\n    _cbSplitIntervalData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'split-interval-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractSplitIntervalData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * elapsedTime                      = N/A\n     * splitIntervalAverageStrokeRate   = N/A\n     * splitIntervalWorkHeartrate       = N/A\n     * splitIntervalRestHeartRate       = N/A\n     * splitIntervalAveragePace         = N/A\n     * splitIntervalTotalCalories       = N/A\n     * splitIntervalAverageCalories     = N/A\n     * splitIntervalSpeed               = N/A\n     * splitIntervalPower               = N/A\n     * splitAverageDragFactor           = N/A\n     * splitIntervalNumber              = N/A\n     */\n    _extractAdditionalSplitIntervalData(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n\n        return {\n            elapsedTime:                    (v[o+0] + (v[o+1] << 8) + (v[o+2] << 16)) * 0.01,\n            splitIntervalAverageStrokeRate: v[o+3],\n            splitIntervalWorkHeartrate:     v[o+4],\n            splitIntervalRestHeartRate:     v[o+5],\n            splitIntervalAveragePace:       (v[o+6] + (v[o+7] << 8)) * 0.1,\n            splitIntervalTotalCalories:     (v[o+8] + (v[o+9] << 8)),\n            splitIntervalAverageCalories:   (v[o+10] + (v[o+11] << 8)),\n            splitIntervalSpeed:             (v[o+12] + (v[o+13] << 8)) * 0.001,\n            splitIntervalPower:             (v[o+14] + (v[o+15] << 8)),\n            splitAverageDragFactor:         v[o+16],\n            splitIntervalNumber:            v[o+17]\n        };\n    }\n\n    /*\n     */\n    _cbAdditionalSplitIntervalData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-split-interval-data',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalSplitIntervalData(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     * CSAFE equivalent commands:\n     *\n     * logEntryDate         = N/A\n     * logEntryTime         = N/A\n     * timeElapsed          = N/A\n     * distance             = N/A\n     * avgStrokeRate        = N/A\n     * endingHeartRate      = N/A\n     * averageHeartRate     = N/A\n     * minHeartRate         = N/A\n     * maxHeartRate         = N/A\n     * dragFactorAverage    = N/A\n     * recoveryHeartRate    = N/A\n     * workoutType          = N/A\n     * averagePace          = N/A\n     */\n    _extractEndOfWorkoutSummary(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =      (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =      (v[o+2] + (v[o+3] << 8));\n        r.timeElapsed =       (v[o+4] + (v[o+5] << 8) + (v[o+6] << 16)) * 0.01;\n        r.distance =          (v[o+7] + (v[o+8] << 8) + (v[o+9] << 16)) * 0.1;\n        r.avgStrokeRate =     v[o+10];\n        r.endingHeartRate =   v[o+11];\n        r.averageHeartRate =  v[o+12];\n        r.minHeartRate =      v[o+13];\n        r.maxHeartRate =      v[o+14];\n        r.dragFactorAverage = v[o+15];\n        r.recoveryHeartRate = v[o+16];\n        r.workoutType =       v[o+17];\n\n        if (!multiplexed) {\n            r.averagePace = (v[o+18] + (v[o+19] << 8)) * 0.1;\n        }\n\n        return r;\n    }\n\n    /*\n     */\n    _cbEndOfWorkoutSummaryData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'workout-end',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractEndOfWorkoutSummary(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractAdditionalEndOfWorkoutSummary(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =        (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =        (v[o+2] + (v[o+3] << 8));\n\n        if (!multiplexed) {\n            r.splitIntervalType =   v[o+4];\n        }\n\n        r.splitIntervalSize =   (v[o+5] + (v[o+6] << 8));\n        r.splitIntervalCount =  v[o+7];\n        r.totalCalories =       (v[o+8] + (v[o+9] << 8));\n        r.watts =               (v[o+10] + (v[o+11] << 8));\n        r.totalRestDistance =   (v[o+12] + (v[o+13] << 8) + (v[o+14] << 16));\n        r.intervalRestTime =    (v[o+15] + (v[o+16] << 8));\n        r.averageCalories =     (v[o+17] + (v[o+18] << 8));\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalEndOfWorkoutSummaryData(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-workout-end',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalEndOfWorkoutSummary(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractHeartRateBeltInformation(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.manufacturerId =  v[o+0];\n        r.deviceType =      v[o+1];\n        r.beltId =          v[o+2] + (v[o+3] << 8) + (v[o+4] << 16) + (v[o+5] << 24);\n\n        return r;\n    }\n\n    /*\n     */\n    _cbHeartRateBeltInformation(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'heart-rate-belt-information',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractHeartRateBeltInformation(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _extractAdditionalEndOfWorkoutSummaryData2(e, multiplexed = false) {\n        const o = multiplexed ? 1 : 0;\n        const v = new Uint8Array(e.target.value.buffer);\n        const r = {};\n\n        r.logEntryDate =      (v[o+0] + (v[o+1] << 8));\n        r.logEntryTime =      (v[o+2] + (v[o+3] << 8));\n        r.averagePace =       (v[o+4] + (v[o+5] << 8));\n        r.gameIdentifierWorkoutVerified = v[o+6];\n        r.gameScore =         (v[o+7] + (v[o+8] << 8));\n        r.ergMachineType =    v[o+9];\n\n        return r;\n    }\n\n    /*\n     */\n    _cbAdditionalEndOfWorkoutSummaryData2(monitor, e, multiplexed = false) {\n        const event = {\n            type: multiplexed ? 'multiplexed-information' : 'additional-workout-end2',\n            source: monitor,\n            raw: e.target.value,\n            data: monitor._extractAdditionalEndOfWorkoutSummaryData2(e, multiplexed)\n        };\n\n        monitor.eventTarget.dispatchEvent(event);\n    }\n\n    /*\n     */\n    _cbMultiplexedInformation(monitor, e) {\n        const characteristic = e.target.value.getUint8();\n\n        /* XXX make this a jump table */\n        switch (characteristic) {\n            case 0x31: monitor._cbGeneralStatus(monitor, e, true); break;\n            case 0x32: monitor._cbAdditionalStatus(monitor, e, true); break;\n            case 0x33: monitor._cbAdditionalStatus2(monitor, e, true); break;\n            case 0x35: monitor._cbStrokeData(monitor, e, true); break;\n            case 0x36: monitor._cbAdditionalStrokeData(monitor, e, true); break;\n            case 0x37: monitor._cbSplitIntervalData(monitor, e, true); break;\n            case 0x38: monitor._cbAdditionalSplitIntervalData(monitor, e, true); break;\n            case 0x39: monitor._cbEndOfWorkoutSummaryData(monitor, e, true); break;\n            case 0x3a: monitor._cbAdditionalEndOfWorkoutSummaryData(monitor, e, true); break;\n            case 0x3b: monitor._cbHeartRateBeltInformation(monitor, e, true); break;\n            case 0x3c: monitor._cbAdditionalEndOfWorkoutSummaryData2(monitor, e, true); break;\n            default:\n                console.log('unhandled characteristic ' + characteristic.toString(16));\n                break;\n        }\n    }\n\n    /*\n     */\n    _getCharacteristic(characteristic) {\n        const characteristicObject = this.idObjectMap.get(characteristic.id);\n\n        if (characteristicObject) {\n            return Promise.resolve(characteristicObject);\n        }\n\n        return this._getService(characteristic.service)\n            .then(service => {\n                return service.getCharacteristic(characteristic.id);\n            })\n            .then(c => {\n                this.idObjectMap.set(characteristic.id, c);\n                return Promise.resolve(c);\n            })\n            .catch(error => {\n                console.log('getCharacteristic(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _setupCharacteristicValueListener(characteristic, callback) {\n        const monitor = this;\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.startNotifications();\n            })\n            .then(c => {\n                c.addEventListener('characteristicvaluechanged', e => {\n                    callback(monitor, e);\n                });\n                return Promise.resolve();\n            })\n            .catch(error => {\n                console.log('_setupCharacteristicValueListener(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _teardownCharacteristicValueListener(characteristic, callback) {\n        const monitor = this;\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.stopNotifications();\n            })\n            .then(c => {\n                c.removeEventListener('characteristicvaluechanged', e => {\n                    callback(monitor, e);\n                });\n                return Promise.resolve();\n            })\n            .catch(error => {\n                console.log('_teardownCharacteristicValueListener(' + characteristic.id + ') failed: ' + error);\n                return Promise.reject(error);\n            });\n    }\n\n    /*\n     */\n    _addWorkoutEndListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.endOfWorkoutSummaryData, this._cbEndOfWorkoutSummaryData\n        );\n    }\n\n    /*\n     */\n    _removeWorkoutEndListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.endOfWorkoutSummaryData, this._cbEndOfWorkoutSummaryData\n        );\n    }\n\n    /*\n     */\n    _addGeneralStatusListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.generalStatus, this._cbGeneralStatus\n        );\n    }\n\n    /*\n     */\n    _removeGeneralStatusListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.generalStatus, this._cbGeneralStatus\n        );\n    }\n\n    /*\n     */\n    _addMultiplexedInformationListener() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.multiplexedInformation, this._cbMultiplexedInformation\n        );\n    }\n\n    /*\n     */\n    _removeMultiplexedInformationListener() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.multiplexedInformation, this._cbMultiplexedInformation\n        );\n    }\n\n    _addAdditionalStatus() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus, this._cbAdditionalStatus\n        );\n    }\n\n    _removeAdditionalStatus() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus, this._cbAdditionalStatus\n        );\n    }\n\n    _addAdditionalStatus2() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus2, this._cbAdditionalStatus2\n        );\n    }\n\n    _removeAdditionalStatus2() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStatus2, this._cbAdditionalStatus2\n        );\n    }\n\n    _addStrokeData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.strokeData, this._cbStrokeData\n        );\n    }\n\n    _removeStrokeData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.strokeData, this._cbStrokeData\n        );\n    }\n\n    _addAdditionalStrokeData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalStrokeData, this._cbAdditionalStrokeData\n        );\n    }\n\n    _removeAdditionalStrokeData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalStrokeData, this._cbAdditionalStrokeData\n        );\n    }\n\n    _addSplitIntervalData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.splitIntervalData, this._cbSplitIntervalData\n        );\n    }\n\n    _removeSplitIntervalData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.splitIntervalData, this._cbSplitIntervalData\n        );\n    }\n\n    _addAdditionalSplitIntervalData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.additionalSplitIntervalData, this._cbAdditionalSplitIntervalData\n        );\n    }\n\n    _removeAdditionalSplitIntervalData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.additionalSplitIntervalData, this._cbAdditionalSplitIntervalData\n        );\n    }\n\n    _addForceCurveData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbForceCurveData\n        );\n    }\n\n    _removeForceCurveData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbForceCurveData\n        );\n    }\n\n    _addAdditionalEndOfWorkoutSummaryData() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData\n        );\n    }\n\n    _removeAdditionalEndOfWorkoutSummaryData() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData\n        );\n    }\n\n    _addHeartRateBeltInformation() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbHeartRateBeltInformation\n        );\n    }\n\n    _removeHeartRateBeltInformation() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbHeartRateBeltInformation\n        );\n    }\n\n\n    _addAdditionalEndOfWorkoutSummaryData2() {\n        return this._setupCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData2\n        );\n    }\n\n    _removeAdditionalEndOfWorkoutSummaryData2() {\n        return this._teardownCharacteristicValueListener(\n                characteristics.rowingService.forceCurveData, this._cbAdditionalEndOfWorkoutSummaryData2\n        );\n    }\n\n    /*\n     */\n    _getStringCharacteristicValue(characteristic) {\n        const decoder = new TextDecoder('utf-8');\n\n        return this._getCharacteristic(characteristic)\n            .then(c => {\n                return c.readValue()\n            })\n            .then(v => {\n                return decoder.decode(v);\n            });\n    }\n\n    /*\n     */\n    getSerialNumber() {\n        return this._getStringCharacteristicValue(characteristics.informationService.serialNumber);\n    }\n\n    /*\n     */\n    getHardwareRevision() {\n        return this._getStringCharacteristicValue(characteristics.informationService.hardwareRevision);\n    }\n\n    /*\n     */\n    getFirmwareRevision() {\n        return this._getStringCharacteristicValue(characteristics.informationService.firmwareRevision);\n    }\n\n    /*\n     */\n    getManufacturerName() {\n        return this._getStringCharacteristicValue(characteristics.informationService.manufacturerName);\n    }\n\n    /*\n     */\n    getMonitorInformation() {\n        const monitorInformation = {};\n\n        return this.getSerialNumber()\n            .then(serialNumber => {\n                monitorInformation.serialNumber = serialNumber;\n                return this.getHardwareRevision();\n            })\n            .then(hardwareRevision => {\n                monitorInformation.hardwareRevision = hardwareRevision;\n                return this.getFirmwareRevision();\n            })\n            .then(firmwareRevision => {\n                monitorInformation.firmwareRevision = firmwareRevision;\n                return this.getManufacturerName();\n            })\n            .then(manufacturerName => {\n                monitorInformation.manufacturerName = manufacturerName;\n                return Promise.resolve(monitorInformation);\n            })\n            .catch(error => {\n                console.log(error);\n                return Promise.reject(error);\n            });\n    }\n};\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/connect_pm5/pm5-printables.js",["431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"export const pm5printables = {\n    empty: function(v) {\n        return v.toString();\n    },\n    ms2hms: function(msecs) {\n        return new Date(msecs).toISOString().substr(11, 8);\n    },\n    secs2hms: function(secs) {\n        return new Date(secs * 1000).toISOString().substr(11, 10);\n    },\n    metres: function(m) {\n        return m.toLocaleString() + 'm';\n    },\n    workoutType: function(wtype) {\n        switch (wtype) {\n            case 0: return [wtype, 'Just row, no splits']; break;\n            case 1: return [wtype, 'Just row, splits']; break;\n            case 2: return [wtype, 'Fixed dist, no splits']; break;\n            case 3: return [wtype, 'Fixed dist, splits']; break;\n            case 4: return [wtype, 'Fixed time, no splits']; break;\n            case 5: return [wtype, 'Fixed time, splits']; break;\n            case 6: return [wtype, 'Fixed time, interval']; break;\n            case 7: return [wtype, 'Fixed dist, interval']; break;\n            case 8: return [wtype, 'Variable, interval']; break;\n            case 9: return [wtype, 'Variable, undef rest, interval']; break;\n            case 10: return [wtype, 'Fixed, calorie']; break;\n            case 11: return [wtype, , 'Fixed, watt-minutes']; break;\n            case 12: return [wtype, , 'Fixed cals, interval']; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    intervalType: function(itype) {\n        switch (itype) {\n            case 0: return [itype, 'Time']; break;\n            case 1: return [itype, 'Distance']; break;\n            case 2: return [itype, 'Rest']; break;\n            case 3: return [itype, 'Time, rest undefined']; break;\n            case 4: return [itype, 'Distance, rest undefined']; break;\n            case 5: return [itype, 'Rest, undefined']; break;\n            case 6: return [itype, 'Calorie']; break;\n            case 7: return [itype, 'Calorie, rest undefined']; break;\n            case 8: return [itype, 'Watt-minute']; break;\n            case 9: return [itype, 'Watt-minute, rest undefined']; break;\n            case 255: return [itype, 'None'];\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    workoutState: function(wstate) {\n        switch (wstate) {\n            case 0: return [wstate, 'Wait To Begin']; break;\n            case 1: return [wstate, 'Workout Row']; break;\n            case 2: return [wstate, 'Countdown Pause']; break;\n            case 3: return [wstate, 'Interval Rest']; break;\n            case 4: return [wstate, 'Interval Work Time']; break;\n            case 5: return [wstate, 'Interval Work Distance']; break;\n            case 6: return [wstate, 'Interval Rest End To Work Time']; break;\n            case 7: return [wstate, 'Interval Rest End To Work Distance']; break;\n            case 8: return [wstate, 'Interval Work Time To Rest']; break;\n            case 9: return [wstate, 'Interval Work Distance To Rest']; break;\n            case 10: return [wstate, 'Workout End']; break;\n            case 11: return [wstate, 'Terminate']; break;\n            case 12: return [wstate, 'Workout Logged']; break;\n            case 13: return [wstate, 'Rearm']; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    rowingState: function(rstate) {\n        switch (rstate) {\n            case 0: return 'Inactive'; break;\n            case 1: return 'Active'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    strokeState: function(sstate) {\n        switch (sstate) {\n            case 0: return 'Waiting To Reach Min Speed'; break;\n            case 1: return 'Waiting To Accelerate'; break;\n            case 2: return 'Driving'; break;\n            case 3: return 'Dwelling After Drive'; break;\n            case 4: return 'Recovery'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    workoutDuration: function(wduration) {\n        /* XXX Figure out how to handle this one */\n        /*\n         * enum DurationTypes {\n         *      CSAFE_TIME_DURATION = 0,\n         *      CSAFE_CALORIES_DURATION = 0x40,\n         *      CSAFE_DISTANCE_DURATION = 0x80,\n         *      CSAFE_WATTS_DURATION = 0xc0\n         * }\n         */\n        /*\n        if (data.workoutDurationType == 0x0) {\n            data.workoutDuration *= 0.01;\n        }\n        */\n        return wduration.toString();\n    },\n    workoutDurationType: function(wdurationtype) {\n        switch (wdurationtype) {\n            case 0: return 'Time'; break;\n            case 0x40: return 'Calories'; break;\n            case 0x80: return 'Distance'; break;\n            case 0xc0: return 'Watts'; break;\n            default:\n                break;\n        }\n        return 'unknown';\n    },\n    as_is: function(n) {\n        return n.toString();\n    },\n    fixed: function(n) {\n        return n.toFixed();\n    },\n    m_per_second: function(n) {\n        return n.toFixed() + \"m/s\";\n    },\n    heartRate: function(n) {\n        return n == 255 ? 'N/A' : n;\n    },\n    watts: function(n) {\n        return n.toFixed().toLocaleString() + 'W';\n    },\n    calories: function(n) {\n        return n.toLocaleString() + 'cals';\n    },\n    metres_fixed: function(n) {\n        return n.toFixed().toLocaleString() + 'm';\n    },\n    splitIntervalType: function(n) {\n        return n.toString();\n    },\n    logDate: function(n) {\n        let month = n & 0x0f;                   /* bits 0 to 3 */\n        let day = (n >> 4) & 0x1f;              /* bits 4 to 8 */\n        let year = 2000 + ((n >> 9) & 0x7f);    /* bits 9 to 13 (15); epoch is 2000 */\n\n        return day + \"/\" + month + \"/\" + year;\n    },\n    logTime: function(n) {\n        let h = (n >> 8) & 0xff;                /* top byte */\n        let m = n & 0xff;                       /* bottom byte */\n\n        return h + \":\" + m;\n    },\n    gameId: function(n) {\n        let game_id = n & 0x0f;\n        let workout_verified = (n >> 4) & 0x0f; /* JavaScript uses >>> for zero-fill right shift! */\n        let r = '';\n\n        switch (game_id) {\n            case 0: r = 'None '; break;\n            case 1: r = 'Fish '; break;\n            case 2: r = 'Dart '; break;\n            case 3: r = 'Target basic '; break;\n            case 4: r = 'Target advanced '; break;\n            case 5: r = 'Cross Training '; break;\n            default:\n                break;\n        }\n\n        r += '(' + (!workout_verified ? 'un' : '') + 'verified)';\n\n        return r;\n    },\n    erg_machine_type: function(n) {\n        let r = '';\n\n        switch (n) {\n            case 0: r = 'Static D'; break;\n            case 1: r = 'Static C'; break;\n            case 2: r = 'Static A'; break;\n            case 3: r = 'Static B'; break;\n            case 5: r = 'Static E'; break;\n            case 7: r = 'Static Simulator'; break;\n            case 8: r = 'Static Dynamic'; break;\n            case 16: r = 'Slides A'; break;\n            case 17: r = 'Slides B'; break;\n            case 18: r = 'Slides C'; break;\n            case 19: r = 'Slides D'; break;\n            case 20: r = 'Slides E'; break;\n            case 32: r = 'Slides Dynamic'; break;\n            case 64: r = 'Static Dyno'; break;\n            case 128: r = 'Static Ski'; break;\n            case 143: r = 'Static Ski (simulator)'; break;\n            case 192: r = 'Bike'; break;\n            case 193: r = 'Bike (arms)'; break;\n            case 194: r = 'Bike (no arms)'; break;\n            case 207: r = 'Bike (simulator)'; break;\n            case 208: r = 'Num'; break;\n            default:\n                break;\n        }\n\n        return r;\n    }\n};\n\nexport const pm5fields = {\n    elapsedTime: {\n        label: 'Elapsed Time',\n        printable: pm5printables['secs2hms']\n    },\n    distance: {\n        label: 'Distance',\n        printable: pm5printables['metres'],\n    },\n    workoutType: {\n        label: 'Workout Type',\n        printable: pm5printables['workoutType'],\n    },\n    intervalType: {\n        label: 'Interval Type',\n        printable: pm5printables['intervalType'],\n    },\n    workoutState: {\n        label: 'Workout State',\n        printable: pm5printables['workoutState'],\n    },\n    rowingState: {\n        label: 'Rowing State',\n        printable: pm5printables['rowingState'],\n    },\n    strokeState: {\n        label: 'Stroke State',\n        printable: pm5printables['strokeState'],\n    },\n    totalWorkDistance: {\n        label: 'Total Work Distance',\n        printable: pm5printables['metres'],\n    },\n    workoutDuration: {\n        label: 'Workout Duration',\n        printable: pm5printables['workoutDuration'],\n    },\n    workoutDurationType: {\n        label: 'Workout Duration Type',\n        printable: pm5printables['workoutDurationType'],\n    },\n    dragFactor: {\n        label: 'Drag Factor',\n        printable: pm5printables['as_is'],\n    },\n    speed: {\n        label: 'Speed',\n        printable: pm5printables['m_per_second'],\n    },\n    strokeRate: {\n        label: 'Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    heartRate: {\n        label: 'Heart Rate',\n        printable: pm5printables['heartRate'],\n    },\n    currentPace: {\n        label: 'Current Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    averagePace: {\n        label: 'Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    restDistance: {\n        label: 'Rest Distance',\n        printable: pm5printables['metres'],\n    },\n    restTime: {\n        label: 'Rest Time',\n        printable: pm5printables['secs2hms'],\n    },\n    intervalCount: {\n        label: 'Interval Count',\n        printable: pm5printables['as_is'],\n    },\n    averagePower: {\n        label: 'Average Power',\n        printable: pm5printables['watts'],\n    },\n    totalCalories: {\n        label: 'Total Calories',\n        printable: pm5printables['calories'],\n    },\n    splitAveragePace: {\n        label: 'Split Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    splitAveragePower: {\n        label: 'Split Average Power',\n        printable: pm5printables['watts'],\n    },\n    splitAverageCalories: {\n        label: 'Split Average Calories',\n        printable: pm5printables['calories'],\n    },\n    lastSplitTime: {\n        label: 'Last Split Time',\n        printable: pm5printables['secs2hms'],\n    },\n    lastSplitDistance: {\n        label: 'Last Split Distance',\n        printable: pm5printables['metres'],\n    },\n    driveLength: {\n        label: 'Drive Length',\n        printable: pm5printables['metres_fixed'],\n    },\n    driveTime: {\n        label: 'Drive Time',\n        printable: pm5printables['secs2hms'],\n    },\n    strokeRecoveryTime: {\n        label: 'Stroke Recovery Time',\n        printable: pm5printables['secs2hms'],\n    },\n    strokeDistance: {\n        label: 'Stroke Distance',\n        printable: pm5printables['metres_fixed'],\n    },\n    peakDriveForce: {\n        label: 'Peak Drive Force',\n        printable: pm5printables['watts'],\n    },\n    averageDriveForce: {\n        label: 'Average Drive Force',\n        printable: pm5printables['fixed'],\n    },\n    workPerStroke: {\n        label: 'Work Per Stroke',\n        printable: pm5printables['fixed'],\n    },\n    strokeCount: {\n        label: 'Stroke Count',\n        printable: pm5printables['as_is'],\n    },\n    strokePower: {\n        label: 'Stroke Power',\n        printable: pm5printables['watts'],\n    },\n    strokeCalories: {\n        label: 'Stroke Calories',\n        printable: pm5printables['calories'],\n    },\n    strokeCount: {\n        label: 'Stroke Count',\n        printable: pm5printables['as_is'],\n    },\n    projectedWorkTime: {\n        label: 'Projected Work Time',\n        printable: pm5printables['secs2hms'],\n    },\n    projectedWorkDistance: {\n        label: 'Projected Work Distance',\n        printable: pm5printables['metres'],\n    },\n    workPerStroke: {\n        label: 'Work Per Stroke',\n        printable: pm5printables['watts'],\n    },\n    splitIntervalTime: {\n        label: 'Split Interval Time',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalDistance: {\n        label: 'Split Interval Distance',\n        printable: pm5printables['metres'],\n    },\n    intervalRestTime: {\n        label: 'Interval Rest Time',\n        printable: pm5printables['secs2hms'],\n    },\n    intervalRestDistance: {\n        label: 'Interval Rest Distance',\n        printable: pm5printables['metres'],\n    },\n    splitIntervalType: {\n        label: 'Split Interval Type',\n        printable: pm5printables['splitIntervalType'],\n    },\n    splitIntervalNumber: {\n        label: 'Split Interval Number',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalAverageStrokeRate: {\n        label: 'Split Interval Average Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalWorkHeartrate: {\n        label: 'Split Interval Work Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalRestHeartRate: {\n        label: 'Split Interval Rest Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalAveragePace: {\n        label: 'Split Interval Average Pace',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalTotalCalories: {\n        label: 'Split Interval Total Calories',\n        printable: pm5printables['calories'],\n    },\n    splitIntervalAverageCalories: {\n        label: 'Split Interval Average Calories',\n        printable: pm5printables['calories'],\n    },\n    splitIntervalSpeed: {\n        label: 'Split Interval Speed',\n        printable: pm5printables['secs2hms'],\n    },\n    splitIntervalPower: {\n        label: 'Split Interval Power',\n        printable: pm5printables['watts'],\n    },\n    splitAverageDragFactor: {\n        label: 'Split Average Drag Factor',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalNumber: {\n        label: 'Split Interval Number',\n        printable: pm5printables['as_is'],\n    },\n    logEntryDate: {\n        label: 'Log Entry Date',\n        printable: pm5printables['logDate'],\n    },\n    logEntryTime: {\n        label: 'Log Entry Time',\n        printable: pm5printables['logTime'],\n    },\n    timeElapsed: {\n        label: 'Time Elapsed',\n        printable: pm5printables['secs2hms'],\n    },\n    avgStrokeRate: {\n        label: 'Average Stroke Rate',\n        printable: pm5printables['as_is'],\n    },\n    endingHeartRate: {\n        label: 'Ending Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    averageHeartRate: {\n        label: 'Average Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    minHeartRate: {\n        label: 'Min Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    maxHeartRate: {\n        label: 'Max Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    dragFactorAverage: {\n        label: 'Drag Factor Average',\n        printable: pm5printables['as_is'],\n    },\n    recoveryHeartRate: {\n        label: 'Recovery Heart Rate',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalSize: {\n        label: 'Split/Interval Type',\n        printable: pm5printables['as_is'],\n    },\n    splitIntervalCount: {\n        label: 'Split/Interval Count',\n        printable: pm5printables['as_is'],\n    },\n    watts: {\n        label: 'Watts',\n        printable: pm5printables['watts']\n    },\n    totalRestDistance: {\n        label: 'Total Rest Distance',\n        printable: pm5printables['metres']\n    },\n    averageCalories: {\n        label: 'Average Calories',\n        printable: pm5printables['calories']\n    },\n    gameIdentifierWorkoutVerified: {\n        label: 'Game Identifer / Workout Verified',\n        printable: pm5printables['gameId']\n    },\n    gameScore: {\n        label: 'Game score',\n        printable: pm5printables['as_is']\n    },\n    ergMachineType: {\n        label: 'Erg Machine Type',\n        printable: pm5printables['erg_machine_type']\n    }\n};\n",["485","486"],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomBar.js",["487"],"import React, {useEffect, useState} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport {useTheme} from '../../contexts/ThemeContext'\n\n/*\n    - Custom Bar Chart\n    - Height -> from props\n    - width -> fill width of container\n*/\n\nexport default function CustomBar(props) {\n    const [data, setData] = useState(props.data)\n    const {themeColor} = useTheme()\n    const [localTheme, setLocalTheme] = useState(themeColor)\n\n    useEffect(() => {\n        setData(props.data)\n    }, [props])\n\n\n    // Force rerenders on color theme change\n    useEffect(() => {\n        setLocalTheme(themeColor)\n    }, [themeColor])\n\n    return (\n        <div style={{height: props.height}}>\n            <Bar\n                data={{\n                    labels: data.labels,\n                    datasets: [\n                        {\n                            label: data.label,\n                            data: data.dataset,\n                            backgroundColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.backgroundColor),\n                            borderWidth: 1,\n                            borderColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.borderColor),\n                            hoverBackgroundColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue(data.borderColor),\n                            hoverBorderColor: getComputedStyle(document.documentElement)\n                            .getPropertyValue(data.borderColor)\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    title: {\n                        display: false,\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false,\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                autoSkip: false,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                fontFamily: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--font-family'),\n                                maxRotation: 0,\n                                minRotation: 0,\n                                callback: function(value, index, values) {\n                                    if (index % props.labelFreq === 0 || index === values.length - 1) {\n                                        if (value.length > props.maxLabelLength) {\n                                            return value.substr(0, props.maxLabelLength)\n                                        }\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                drawTicks: false,\n                                display: true,\n                                drawBorder: false, \n                                color: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--bc-chart'),\n                                zeroLineWidth: 0,\n                                \n                            },\n                            ticks: { \n                                suggestedMin: 0,\n                                fontFamily: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--font-family'),\n                                display: props.showYTicks,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                callback: function (value, index, values) {\n                                    if (index === 0 || index === values.length - 1 || index === Math.floor(values.length/2)) {\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Statistics.js",["488","489","490","491"],"\nimport React, {useState, useEffect, useRef} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport Loading from '../misc/Loading'\nimport Pending from '../misc/Pending'\nimport CustomBar from '../charts/CustomBar'\nimport CustomLine from '../charts/CustomLine'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Statistics() {\n    const {thisUser} = useAuth()\n\n    // general stats (top)\n    const [timeframe1, setTimeframe1] = useState(1)         // month\n    const [selectedMetric, setSelectedMetric] = useState(0) // meters\n    \n    // analysis stats (bottom)\n    const [timeframe2, setTimeframe2] = useState(1)         // month\n\n    const [stats, setStats] = useState(null)\n    const [progressStats, setProgressStats] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const [loadingSearch, setLoadingSearch] = useState(false)\n    const [distanceFilter, setDistanceFilter] = useState('10000')\n    const distanceComparatorRef = useRef()\n    const [prevQueryString, setPrevQueryString] = useState('')\n    const [prevQueryReadable, setPrevQueryReadable] = useState('')\n    const [prevQuery, setPrevQuery] = useState({\n        metric: 'Distance',\n        value: 10000,\n        comparator: '<='\n    })\n\n    const [hideFilterForm, setHideFilterForm] = useState(true)\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                let res = await api.get(`/users/${thisUser._id}/statistics-general`)\n                setStats(res.data)\n\n                const queryString = `gte=0&lte=${distanceFilter}`\n                res = await api.get(`users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQueryReadable('Distance   <=   10,000 m')\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: '<='}))\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    function plottable() {\n        return [\n            ...stats.plottable\n                [timeframes[timeframe1].key]\n                [metrics[selectedMetric].key]\n        ]\n    }\n\n    function aggregate(metricID) {\n        return stats.aggregate\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    function delta(metricID) {\n        return -1 * stats.delta\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    const metrics = {\n        0: { key: 'meters', label: 'meters', unit: 'm', graphTitle: 'Meters rowed', formatted: () => aggregate(0).toLocaleString()},\n        1: { key: 'time', label: 'seconds', unit: '', graphTitle: 'Hours rowed', \n            formatted: () => moment.duration(Math.round(aggregate(1)), 'seconds').format('h [hrs]  m [mins]')\n        },\n        2: { key: 'calories', label: 'calories', unit: 'cal', graphTitle: 'Calories burned', formatted: () => aggregate(2).toLocaleString()}\n    }\n\n    const timeframes = {\n        0: { key: 'week',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'week')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 1\n        },\n        1: { key: 'month',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'month')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 5\n        },\n        2: { key: 'year',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'year')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'month')) {\n                    labels.push(curr.format('MMM YYYY'))\n                    curr.add(1, 'month')\n                }\n                return labels\n            },\n            labelFreq: 2\n        }\n    }\n\n    async function handleSubmit(e) {\n        setLoadingSearch(true)\n        e.preventDefault()\n        let queryString\n        switch(distanceComparatorRef.current.value) {\n            case '>=': \n                queryString = `gte=${distanceFilter}&lte=1000000`\n                break\n            case '<=': \n                queryString = `gte=0&lte=${distanceFilter}`\n                break\n            case '=':\n                queryString = `gte=${distanceFilter}&lte=${distanceFilter}`\n                break\n        }\n        // Prevent duplicate queries\n        if (queryString !== prevQueryString) {\n            try {\n                const res = await api.get(`/users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: distanceComparatorRef.current.value}))\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        setTimeout(() => {\n            setLoadingSearch(false)\n            setHideFilterForm(true)\n        }, 0.5*1000)\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/statistics' />\n            <br />\n            <br />\n            {loading ?  <Loading /> :\n                <div \n                    className='main-container statistics-page'\n                    style={{\n                        display: 'grid', gap: '40px',\n                        gridTemplateColumns: 'repeat(3, 1fr)',\n                        padding: '0px var(--ps-nav)',\n                        marginBottom: '100px'\n                    }}\n                >\n                    <div style={{gridColumn: '1/4', marginBottom: -20}}>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <h3>Overview</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe1 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe1(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    {Object.values(metrics).map((metric, metricID) => (\n                        <div key={metricID} className='float-container' style={{padding: '10px 20px'}}>\n                            <h4 className='c-cs tt-c fw-s mb-5'>{metric.key} </h4>\n                            <h3 className='fw-s'>\n                                {metric.formatted()} {metric.unit}\n                            </h3>\n                            <div className='d-flex jc-flex-start ai-center'>\n                                <i className={`bi bi-arrow-${delta(metricID) >= 0 ? 'up':'down'}-short mr-5`} \n                                    style={{fontSize: 20, color: delta(metricID) >= 0 ? 'var(--color-green)':'var(--color-red)'}}\n                                />\n                                <h5 style={{color: delta(metricID) >= 0 ? 'var(--color-green)':'var(--color-red)'}} className='mr-10'>\n                                    {Math.abs(delta(metricID))} %\n                                </h5>\n                                <h6 className='c-cs'>vs last {timeframes[timeframe1].key}</h6>\n                            </div>\n                        </div>\n                    ))}\n\n                    <div id='general' style={{gridColumn: '1/4'}}>\n                        <div id='general-container' className='float-container' style={{padding: 20}}>\n                            <h3>Meters Rowed</h3>\n                            <br />\n                            <div>\n                                <CustomBar \n                                    height='175px' \n                                    labelFreq={timeframes[timeframe1].labelFreq}\n                                    maxLabelLength={10}\n                                    showYTicks={true}\n                                    data={{\n                                        labels: timeframes[timeframe1].labels(),\n                                        label: metrics[selectedMetric].label,\n                                        dataset: plottable(),\n                                        backgroundColor: `--color-translucent-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`,\n                                        borderColor: `--color-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div id='progress' style={{gridColumn: '1/4'}}>\n                        <div id='progress-header' className='d-flex jc-space-between ai-center'>\n                            <h3>Analysis</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 \n                                        key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe2 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe2(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div className='d-flex jc-flex-start'>\n                            <div className='d-inline-flex jc-flex-start ai-center mr-20'\n                                style={{ border: '1px solid var(--bc)', borderRadius: 5, overflow: 'hidden'}}\n                            >\n                                <p style={{backgroundColor: 'var(--bgc-light)', padding: '7px 10px'}}\n                                    className='mr-10'\n                                >\n                                    Workout Filter\n                                </p>\n                                <p style={{padding: '7px 10px', whiteSpace: 'pre'}} className='fw-s'>\n                                    {prevQuery.metric + '   ' + prevQuery.comparator + '   ' + prevQuery.value.toLocaleString() + ' m'}\n                                </p>\n                            </div>\n                            <div className='clear-btn-secondary' onClick={() => setHideFilterForm(false)} >\n                                <i className=\"bi bi-pencil\"/>\n                                Edit filter\n                            </div>\n                        </div>\n                        <div style={{display: hideFilterForm && 'none'}}>\n                            <form onSubmit={handleSubmit} className='float-container'\n                                style={{ margin: '20px 0px', padding: 20}} \n                            >\n                                <h4 >Edit Workout Filter</h4>\n                                <br />\n                                <div \n                                    className='d-inline-flex jc-flex-start ai-center'\n                                >\n                                    <p className='mr-10'>Distance</p>\n                                    <select ref={distanceComparatorRef} className='mr-20'>\n                                        <option value='<='>Less than</option>\n                                        <option value='='>Equal to</option>\n                                        <option value='>='>Greater than</option>\n                                    </select>\n                                    <input className='mr-10'\n                                        value={distanceFilter}\n                                        onChange={(e) => setDistanceFilter(e.target.value)}\n                                        type='number' required/>\n                                    <h5 style={{fontWeight: '500'}}>m</h5>\n                                </div>\n                                <br />\n                                <br />\n                                <div className='d-flex jc-space-between ai-center' style={{ marginTop: '10px'}}>\n                                    <button type='submit' className='solid-btn-secondary mr-20'>\n                                        <i className='bi bi-search' style={{fontSize: 18}} />\n                                        Search\n                                    </button>\n\n                                    {loadingSearch && <Pending /> }\n                                    {loadingSearch && <p className='c-tc'>Loading results...</p>}\n                                    <button onClick={() => setHideFilterForm(true)}type='button' className='clear-btn-cancel'>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        <br />\n                        <div style={{padding: '20px 20px'}} className='float-container'>\n                            <h3>Workout Pace Trend</h3>\n                            <br />\n                            <CustomLine \n                                height='175px' \n                                data={{\n                                    label: 'Pace / 500m',\n                                    dataset: [...progressStats.plottable[timeframes[timeframe2].key] ],\n                                    backgroundColor: '--tint-color-translucent',\n                                    borderColor: '--tint-color'\n                                }}\n                            />\n                        </div>\n                    </div>\n                \n                    <div style={{height: '175px'}}></div>\n                </div>\n            }\n        </div>\n    )\n}\n\n/*\nimport React, {useState, useEffect, useRef} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport Loading from '../misc/Loading'\nimport CustomBar from '../charts/CustomBar'\nimport CustomLine from '../charts/CustomLine'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Statistics() {\n    const {thisUser} = useAuth()\n\n    // general stats (top)\n    const [timeframe1, setTimeframe1] = useState(1)         // month\n    const [selectedMetric, setSelectedMetric] = useState(0) // meters\n    \n    // analysis stats (bottom)\n    const [timeframe2, setTimeframe2] = useState(1)         // month\n\n    const [stats, setStats] = useState(null)\n    const [progressStats, setProgressStats] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const [loadingSearch, setLoadingSearch] = useState(false)\n    const [distanceFilter, setDistanceFilter] = useState('10000')\n    const distanceComparatorRef = useRef()\n    const [prevQueryString, setPrevQueryString] = useState('')\n    const [prevQueryReadable, setPrevQueryReadable] = useState('')\n    const [prevQuery, setPrevQuery] = useState({\n        metric: 'Distance',\n        value: 10000,\n        comparator: '<='\n    })\n\n    const [hideFilterForm, setHideFilterForm] = useState(true)\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                let res = await api.get(`/users/${thisUser._id}/statistics-general`)\n                setStats(res.data)\n\n                const queryString = `gte=0&lte=${distanceFilter}`\n                res = await api.get(`users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQueryReadable('Distance   <=   10,000 m')\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: '<='}))\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    function plottable() {\n        return [\n            ...stats.plottable\n                [timeframes[timeframe1].key]\n                [metrics[selectedMetric].key]\n        ]\n    }\n\n    function aggregate(metricID) {\n        return stats.aggregate\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    function delta(metricID) {\n        return -1 * stats.delta\n            [timeframes[timeframe1].key]\n            [metrics[metricID].key]\n    }\n\n    const metrics = {\n        0: { key: 'meters', label: 'meters', unit: 'm', graphTitle: 'Meters rowed', formatted: () => aggregate(0).toLocaleString()},\n        1: { key: 'time', label: 'seconds', unit: '', graphTitle: 'Hours rowed', \n            formatted: () => moment.duration(Math.round(aggregate(1)), 'seconds').format('h [hrs]  m [mins]')\n        },\n        2: { key: 'calories', label: 'calories', unit: 'cal', graphTitle: 'Calories burned', formatted: () => aggregate(2).toLocaleString()}\n    }\n\n    const timeframes = {\n        0: { key: 'week',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'week')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 1\n        },\n        1: { key: 'month',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'month')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'day')) {\n                    labels.push(curr.format('M/D'))\n                    curr.add(1, 'day')\n                }\n                return labels\n            },\n            labelFreq: 5\n        },\n        2: { key: 'year',\n            labels: () => {\n                const end = moment()\n                const start = end.clone().subtract(1, 'year')\n                const labels = []\n                const curr = start.clone()\n                while (! curr.isAfter(end, 'month')) {\n                    labels.push(curr.format('MMM YYYY'))\n                    curr.add(1, 'month')\n                }\n                return labels\n            },\n            labelFreq: 2\n        }\n    }\n\n    async function handleSubmit(e) {\n        setLoadingSearch(true)\n        e.preventDefault()\n        let queryString\n        switch(distanceComparatorRef.current.value) {\n            case '>=': \n                queryString = `gte=${distanceFilter}&lte=1000000`\n                break\n            case '<=': \n                queryString = `gte=0&lte=${distanceFilter}`\n                break\n            case '=':\n                queryString = `gte=${distanceFilter}&lte=${distanceFilter}`\n                break\n        }\n        // Prevent duplicate queries\n        if (queryString !== prevQueryString) {\n            try {\n                const res = await api.get(`/users/${thisUser._id}/statistics-progress?${queryString}`)\n                setProgressStats(res.data)\n                setPrevQueryString(queryString)\n                setPrevQuery(curr => ({...prevQuery, value: distanceFilter, comparator: distanceComparatorRef.current.value}))\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        setTimeout(() => {\n            setLoadingSearch(false)\n            setHideFilterForm(true)\n        }, 0.5*1000)\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/statistics' />\n            <br />\n            <br />\n            {loading ?  <Loading /> :\n                <div \n                    className='main-container statistics-page'\n                    style={{\n                        display: 'grid', gap: '40px',\n                        gridTemplateColumns: 'repeat(3, 1fr)',\n                        padding: '0px var(--ps-nav)',\n                        marginBottom: '100px'\n                    }}\n                >\n                    <div id='general' style={{gridColumn: '1/4'}}>\n                        <div id='general-header' className='d-flex jc-space-between ai-center'>\n                            <h3 >General</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe1 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe1(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div id='general-container' className='float-container'>\n                            <div className='d-flex jc-space-between ai-center last-div-no-br' \n                                style={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', overflow: 'hidden'}} \n                            >\n                                {Object.values(metrics).map((metric, metricID) => (\n                                    <div key={metricID} onClick={() => setSelectedMetric(metricID)}\n                                        className={metricID === selectedMetric ? 'stats-metric-option-selected':'stats-metric-option'}\n                                    >\n                                        <p className='c-cs tt-c fw-s mb-5'>{metric.key} </p>\n                                        <h3 className='fw-s'>\n                                            {metric.formatted()} {metric.unit}\n                                        </h3>\n                                        <div className='d-flex jc-center ai-center'>\n                                            <i className={`bi bi-arrow-${delta(metricID) >= 0 ? 'up':'down'}-short mr-5`} \n                                                style={{fontSize: 20, color: delta(metricID) >= 0 ? 'var(--color-green)':'var(--color-red)'}}\n                                            />\n                                            <h5 style={{color: delta(metricID) >= 0 ? 'var(--color-green)':'var(--color-red)'}}>\n                                                {Math.abs(delta(metricID))} %\n                                            </h5>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <br />\n                            <div style={{padding: '20px 20px'}}>\n                                <CustomBar \n                                    height='175px' \n                                    labelFreq={timeframes[timeframe1].labelFreq}\n                                    maxLabelLength={10}\n                                    showYTicks={true}\n                                    data={{\n                                        labels: timeframes[timeframe1].labels(),\n                                        label: metrics[selectedMetric].label,\n                                        dataset: plottable(),\n                                        backgroundColor: `--color-translucent-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`,\n                                        borderColor: `--color-${delta(selectedMetric) >= 0 ? 'green' : 'red'}`\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div id='progress' style={{gridColumn: '1/4'}}>\n                        <div id='progress-header' className='d-flex jc-space-between ai-center'>\n                            <h3>Analysis</h3>\n                            <div className='d-flex jc-flex-end ai-center' >\n                                {['Week', 'Month', 'Year'].map((item, idx) => (\n                                    <h5 \n                                        key={idx} style={{marginLeft: 30}}\n                                        className={idx === timeframe2 ? 'menu-option-active' : 'menu-option'}\n                                        onClick={() => setTimeframe2(idx)}\n                                    >\n                                        {item}\n                                    </h5>\n                                ))}\n                            </div>\n                        </div>\n                        <br />\n                        <div style={{padding: '20px 20px'}} className='float-container'>\n                            <div className='d-flex jc-flex-start'>\n                                <div className='d-inline-flex jc-flex-start ai-center mr-20'\n                                    style={{\n                                        border: '1px solid var(--bc)',\n                                        borderRadius: '5px',\n                                        overflow: 'hidden'\n                                    }}\n                                >\n                                    <h4 style={{backgroundColor: 'var(--bgc-hover)', padding: '7px 10px'}}\n                                        className='mr-10 c-tc'\n                                    >\n                                        Workout filter\n                                    </h4>\n                                    <p style={{padding: '7px 10px', whiteSpace: 'pre'}} className='fw-s'>\n                                        {prevQuery.metric + '   ' + prevQuery.comparator + '   ' + prevQuery.value.toLocaleString() + ' m'}\n                                    </p>\n                                </div>\n                                <div className='clear-btn-secondary' onClick={() => setHideFilterForm(false)} >\n                                   <i className=\"bi bi-pencil\"/>\n                                   Edit filter\n                                </div>\n                            </div>\n                            <form onSubmit={handleSubmit}\n                                style={{ \n                                    overflow: 'hidden', transform: 'scale(1)',\n                                    padding: '0px 20px', \n                                    marginTop: hideFilterForm ? 0 : 20,\n                                    opacity: hideFilterForm ? 0: 100,\n                                    height: hideFilterForm ? 0 : 210, transition: 'all ease 0.4s',\n                                    backgroundColor: 'var(--bgc)', borderRadius: '5px', border: '1px solid var(--bc)'\n                                }} \n                                \n                            >\n                                <br />\n                                <h4 >Edit Workout Filter</h4>\n                                <br />\n                                <div \n                                    className='d-inline-flex jc-flex-start ai-center'\n                                >\n                                    <p className='mr-10'>Distance</p>\n                                    <select ref={distanceComparatorRef} className='mr-20'>\n                                        <option value='<='>Less than</option>\n                                        <option value='='>Equal to</option>\n                                        <option value='>='>Greater than</option>\n                                    </select>\n                                    <input className='mr-10'\n                                        value={distanceFilter}\n                                        onChange={(e) => setDistanceFilter(e.target.value)}\n                                        type='number' required/>\n                                    <h5 style={{fontWeight: '500'}}>m</h5>\n                                </div>\n                                <br />\n                                <br />\n                                <div className='d-flex jc-space-between' style={{ marginTop: '10px'}}>\n                                    <button type='submit' className='solid-btn-secondary'>\n                                        <i className='bi bi-search' style={{fontSize: 18}} />\n                                        Search\n                                    </button>\n                                    {loadingSearch && <Loading />}\n                                    <button onClick={() => setHideFilterForm(true)}type='button' className='clear-btn-cancel'>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                            <br />\n\n                            <h4>Workout Pace Trend</h4>\n                            <br />\n                            <CustomLine \n                                height='200px' \n                                data={{\n                                    label: 'Pace / 500m',\n                                    dataset: [...progressStats.plottable[timeframes[timeframe2].key] ],\n                                    backgroundColor: '--tint-color-translucent',\n                                    borderColor: '--tint-color'\n                                }}\n                            />\n                        </div>\n                    </div>\n                \n                    <div style={{height: '175px'}}></div>\n                </div>\n            }\n        </div>\n    )\n}\n\n*/","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Activity.js",["492","493","494","495"],"import React, {useState, useEffect, useRef} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport Paginator from '../misc/Paginator'\nimport Loading from '../misc/Loading'\nimport Pending from '../misc/Pending'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Activity() {\n    const {thisUser} = useAuth()\n    const history = useHistory()\n\n    const [results, setResults] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const [hideFilterForm, setHideFilterForm] = useState(true)\n    const [currPage, setCurrPage] = useState(1)\n\n    const [sortedKey, setSortedKey] = useState('createdAt')\n    const [sortAscending, setSortAscending] = useState(true)\n\n    const [submittedQuery, setSubmittedQuery] = useState(null)\n    const [submittedQueryString, setSubmittedQueryString] = useState(null)\n    const [submittedQueryStringReadable, setSubmittedQueryStringReadable] = useState(null)\n    const [selectedSortParam, setSelectedSortParam] = useState(0)\n    const sortOrderRef = useRef()\n    const sortParams = [\n        {title: 'Date', key: 'createdAt', description: {                // 0\n            asc: 'Oldest to Newest', desc: 'Newest to Oldest'\n        }},\n        {title: 'Distance', key: 'distance', description: {             // 1\n            asc: 'Shortest to Longest', desc: 'Longest to Shortest'\n        }},\n        {title: 'Workout Time', key: 'elapsedTime', description: {      // 2    \n            asc: 'Shortest to Longest', desc: 'Longest to Shortest'\n        }},\n        {title: 'Average Pace', key: 'averagePace', description: {      // 3\n            asc: 'Fastest to Slowest', desc: 'Slowest to Fastest'\n        }}\n    ]\n    const comparators = [\n        {title: 'No filter', value: 'none'},\n        {title: 'Greater than', value: '$gte'},\n        {title: 'Less than', value: '$lte'},\n        {title: 'Equal to', value: '$eq'}\n    ]\n    const filters = [\n        {title: 'Distance', key: 'distance', unit: 'm', comparatorRef: useRef('none'), valueRef: useRef(0)},    // 0\n        {title: 'Time', key: 'elapsedTime', unit: 'sec', comparatorRef: useRef('none'), valueRef: useRef(0)}    // 1\n    ]\n\n    const tableColumns = [\n        {title: 'Date', key: 'createdAt'},\n        {title: 'Session Title', key: 'session.title'}, // fix this\n        {title: 'Activity Title', key: 'title'},\n        {title: 'Distance', key: 'distance'},\n        {title: 'Time', key: 'elapsedTime'},\n        {title: 'Type', key: 'workoutType'}\n    ]\n\n    useEffect(() => {\n        fetchData( false, 1 )\n    }, [])\n\n    async function fetchData(useSubmittedQuery, page) {\n        // TODO: convert query obj to querystring\n        setLoading(true)\n        const query = useSubmittedQuery ?  submittedQuery :\n        {\n            pagesize: 15,\n            page: page,\n            sortby: sortOrderRef.current.value +  sortParams[selectedSortParam].key,\n            ...Object.fromEntries(\n                filters.filter(filter => filter.comparatorRef.current.value !== 'none')\n                .map(filter => [\n                    `${filter.key}[${filter.comparatorRef.current.value}]`,\n                    filter.valueRef.current.value\n                ])\n            )\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        const readableQuery = Object.keys(query)\n        .filter(key => key !== 'pagesize' && key !== 'page')\n        .map(key => key + ' = ' + query[key]).join(', ')\n\n        try {\n            const res = await api.get(`/activities/search?user=${thisUser._id}&${queryString}`)\n            setResults({\n                count: res.data.count,\n                activities: sortActivities(res.data.activities)\n            })\n            setCurrPage(page)\n            setSubmittedQuery(query)\n            setSubmittedQueryString(queryString)\n            setSubmittedQueryStringReadable(readableQuery)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        if (! results.count) {return}\n        setResults(curr => (\n            {\n                count: curr.count,\n                activities: sortActivities(curr.activities) \n            }\n        ))\n    }, [sortAscending, sortedKey])\n\n    function sortActivities(inputActivities) {\n        if (sortAscending) {\n            return inputActivities.sort( (a, b) => a[sortedKey] < b[sortedKey] ? -1 : 1)\n        } else {\n            return inputActivities.sort( (a, b) => a[sortedKey] > b[sortedKey] ? -1 : 1)\n        }\n    }\n\n    function onClickPrevious() {\n        fetchData(true, currPage - 1)\n    }\n\n    function onClickNext() {\n        fetchData(true, currPage + 1)\n    }\n\n    function handleSubmitForm(e) {\n        e.preventDefault()\n        fetchData(false, 1)\n        .then(setTimeout(() => {\n            setHideFilterForm(true)\n        }, 0.5*1000))\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/activity' />\n            <div className='main-container' style={{marginBottom: 100}}>\n                <br /><br />\n                <h3>Workout Filter</h3>\n                <br />\n                <div className='d-flex jc-flex-start ai-center'>\n                    <div className='d-inline-flex jc-flex-start ai-center mr-20'\n                        style={{\n                            gap: '0px',\n                            border: '1px solid var(--bc)',\n                            borderRadius: '5px',\n                            overflow: 'hidden'\n                        }}\n                    >\n                        <p style={{backgroundColor: 'var(--bgc-light)', padding: '7px 10px'}}>\n                            Showing results for\n                        </p>\n                        <p style={{padding: '7px 10px', whiteSpace: 'pre'}}>\n                            {submittedQueryStringReadable}\n                        </p>\n                    </div>\n                    <div className='clear-btn-secondary' onClick={() => setHideFilterForm(false)}>\n                        <i className=\"bi bi-pencil\"/>\n                        Edit filter\n                    </div>\n                </div>\n                <form onSubmit={handleSubmitForm} className='float-container'\n                    style={{ \n                        overflow: 'hidden', transform: 'scale(1)',\n                        padding: '0px 20px', \n                        marginTop: hideFilterForm ? 0 : 20,\n                        opacity: hideFilterForm ? 0: 100,\n                        height: hideFilterForm ? 0 : 425, transition: 'all ease 0.4s',\n                    }} \n                >\n                    <br />\n                    <h4 >Edit Workout Filter</h4>\n                    <br />\n                    <div className='d-flex jc-flex-start ai-flex-start' >\n                        <label className='mr-20'>\n                            Sort By <br />\n                            <select value={selectedSortParam} onChange={(e) => setSelectedSortParam(e.target.value)}>\n                                {sortParams.map((param, idx) => (\n                                    <option key={idx} value={idx}>{param.title}</option>\n                                ))}\n                            </select>\n                        </label>\n                        <label className='mr-20'>\n                            Order <br />\n                            <select ref={sortOrderRef}>\n                                <option value='-' defaultValue={true}>{sortParams[selectedSortParam].description.desc}</option>\n                                <option value='+'>{sortParams[selectedSortParam].description.asc}</option>\n                            </select>\n                        </label>\n                    </div>\n                    <br />\n                    {filters.map((filter, idx) => (\n                        <label key={idx} >\n                            {filter.title} <br />\n                            <div className='d-flex jc-flex-start ai-center' style={{ marginBottom: 15}}>\n                                <select ref={filter.comparatorRef} className='mr-20'>\n                                    {comparators.map( (comparator, idx) => (\n                                        <option key={idx} value={comparator.value}>{comparator.title}</option>\n                                    ))}\n                                </select>\n                                <input ref={filter.valueRef} className='mr-10'/>\n                                {filter.unit}\n                            </div>\n                            \n                        </label>\n\n                    ))}\n                    <br />\n                    <div className='d-flex jc-space-between'>\n                        <button type='submit' className='solid-btn-secondary'>\n                            <i className='bi bi-search' style={{fontSize: 18}} />\n                            Search\n                        </button>\n                        <button type='button' className='clear-btn-cancel' onClick={() => setHideFilterForm(true)}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n                <br />\n                {(!loading && submittedQuery !== null) &&\n                    <h4 style={{color: 'var(--color-secondary)'}}>{results.count.toLocaleString()} results</h4>\n                }\n                <br />\n                <div id='results' className='float-container'>\n                    <table style={{width: '100%'}}>\n                        <thead>\n                            <tr>\n                                {tableColumns.map( (col, idx) => (\n                                    <th key={idx} className={sortedKey === col.key ? 'th-sortable th-selected' : 'th-sortable'}\n                                        onClick={() => {\n                                            setSortedKey(col.key)\n                                            setSortAscending(curr => !curr)\n                                        }}\n                                    >\n                                        {col.title}\n                                        <div className={!sortAscending ? 'rotate-180' : ''} style={{display: 'inline-block', marginLeft: '8px'}}>\n                                            <i className='bi bi-triangle-fill' \n                                                style={{\n                                                    fontSize: '10px', color: 'var(--tint-color)',\n                                                    opacity: sortedKey !== col.key && '0%'\n                                                }} \n                                            />\n                                        </div>\n                                        \n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {(!loading && results.count > 0) && results.activities.map((ac, idx) => (\n                            <tr key={idx}>\n                                <td>{moment(ac.createdAt).format('ll')}</td>\n                                <td className='page-link' onClick={() => history.push(`/sessions/${ac.session._id}`)}>\n                                    {ac.session.title}\n                                </td>\n                                <td>{ac.session.workoutItems[ac.workoutItemIndex]}</td>\n                                <td>{ac.distance.toLocaleString()}</td>\n                                <td style={{letterSpacing: 1}}>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                                <td>{ac.workoutType}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                    {( (submittedQuery && !loading && !results.activities.length) &&\n                        <div className='search-message'>\n                            We couldn't find any activities matching those filters\n                        </div>\n                    )}\n                    {loading && <div className='loading-message'><Pending /><p>Loading Results...</p></div>}\n                </div>\n\n                <br />\n                { (!loading && submittedQuery !== null) &&\n                    <Paginator currPage={currPage} resultsCount={results.count} \n                        onClickPrevious={onClickPrevious} onClickNext={onClickNext}\n                    />\n                }\n\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/TrainingHeader.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomScatter.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomLine.js",["496","497","498","499"],"import React, {useState, useEffect} from 'react'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {Line} from 'react-chartjs-2'\nimport moment from 'moment'\n\nexport default function CustomLine(props) {\n    const [data, setData] = useState(props.data)\n    const {themeColor} = useTheme()\n\n    const [localTheme, setLocalTheme] = useState(themeColor)\n\n    const borderColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(data.borderColor)\n    const backgroundColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(data.backgroundColor)\n    const colorMain = getComputedStyle(document.documentElement)\n    .getPropertyValue('--color-header-d')\n    const colorSecondary = getComputedStyle(document.documentElement)\n    .getPropertyValue('--color-secondary-d')\n    const tooltipColor = getComputedStyle(document.documentElement)\n    .getPropertyValue('--bgc-light-d')\n    const bgc = getComputedStyle(document.documentElement)\n    .getPropertyValue('--bgc-light')\n\n    useEffect(() => {\n        setData(props.data)\n    }, [props])\n\n    // Force rerenders on color theme change\n    useEffect(() => {\n        setLocalTheme(themeColor)\n    }, [themeColor])\n\n    return (\n        <div style={{height: props.height}}>\n            <Line \n                data={{\n                    labels: data.labels,\n                    datasets: [\n                        {\n                            label: data.label,\n                            data: data.dataset,\n                            backgroundColor: backgroundColor,\n                            pointRadius: 4,\n                            pointBackgroundColor: borderColor,\n                            pointBackgroundColor: borderColor,\n                            borderColor: borderColor,\n                            borderWidth: 2,\n                            lineTension: 0\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        titleFontSize: 14,\n                        titleFontStyle: 'bold',\n                        titleFontColor: colorMain,\n                        titleMarginBottom: 15,\n                        bodyFontSize: 16,\n                        bodyFontColor: colorMain,\n                        xPadding: 10, yPadding: 10,\n                        callbacks: {\n                            label: (tooltipItem, data) => {\n                                console.log(tooltipItem)\n                                return 'Pace: ' + moment.duration(tooltipItem.value, 'seconds').format('mm:ss')\n                            },\n                            title: (tooltipItem, data) => {\n                                console.log(tooltipItem)\n                                return moment(tooltipItem[0].xLabel).format('LLL')\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            display: true, \n                            gridLines: {\n                                display: false\n                            },\n                            type: 'time',\n                            distribution: 'series',\n                            ticks: {\n                                fontColor: colorSecondary,\n                                fontFamily: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--font-family'),\n                                source: 'data'\n                            }\n                        }],\n                        yAxes: [{\n                            display: true,\n                            gridLines: {\n                                display: true,\n                                color: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--bc-chart'),\n                                zeroLineWidth: 0,\n                                borderDash: [10, 5]\n                            },\n                            ticks: {\n                                fontColor: colorSecondary,\n                                fontFamily: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--font-family'),\n                                callback: function (value, index, values) {\n                                    if (index === 0 || index === values.length - 1 || index === Math.floor(values.length/2)) {\n                                        return moment.duration(value, 'seconds').format('mm:ss')\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                    \n                }}\n            />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/session/ResultsTable.js",["500","501","502","503","504"],"import React, {useEffect, useState} from 'react'\nimport C2Screen from '../misc/C2Screen'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport 'moment-duration-format'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function ResultsTable(props) {\n    const {currentUser} = useAuth()\n\n    const [hideSelf, setHideSelf] = useState(true)\n    const [sortedKey, setSortedKey] = useState('name')\n    const [sortAscending, setSortAscending] = useState(true)\n\n    const tableColumns = [\n        {title: 'Name', key: 'name'},\n        {title: 'Ave Pace', key: 'averagePace'},\n        {title: 'Distance', key: 'distance'},\n        {title: 'Stroke Rate', key: 'strokeRate'},\n        {title: 'Elapsed Time', key: 'elapsedTime'}\n    ]\n\n    const [activities, setActivities] = useState(props.activities.filter(ac => ac.isCompleted))\n\n    useEffect(() => {\n        const completedActivities = props.activities.filter(ac => ac.isCompleted)\n        if (hideSelf) {\n            setActivities(completedActivities)\n        } else {\n            setActivities( sortActivities([...completedActivities]) )\n        }\n    }, [props.activities])\n\n    useEffect(() => {\n        if (hideSelf) {return}\n        setActivities([...sortActivities(activities)])\n    }, [sortAscending, sortedKey])\n\n    function sortActivities(inputActivities) {\n        if (sortAscending) {\n            return inputActivities.sort( (a, b) => a[sortedKey] < b[sortedKey] ? -1 : 1)\n        } else {\n            return inputActivities.sort( (a, b) => a[sortedKey] > b[sortedKey] ? -1 : 1)\n        }\n    }\n\n    function handleClickActivity() {\n        // what to do here ? \n        // send to new page with in depth stats on activity ?\n    }\n\n    return (\n        <div style={{marginBottom: hideSelf ? 0 : 30}}>\n            <div className='d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center clickable-container-np' \n                    style={{ minHeight: '55px', padding: '0px 5px', cursor: 'pointer'}} \n                    onClick={() => setHideSelf(curr => !curr)}\n                >\n                    <i className={`bi bi-chevron-${hideSelf ? 'right' : 'down'} icon-btn-circle c-cs mr-10`}/>\n                    <h4>{props.activityTitle}</h4>\n                </div>\n            </div>\n\n            <div style={{display: hideSelf && 'none', margin: '0px 20px', borderLeft: '2px solid var(--bc)'}}>\n                <table className='data-table workout-table' style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            {tableColumns.map((col, idx) => (\n                                <th key={idx} className={sortedKey === col.key ? 'th-sortable th-selected' : 'th-sortable'}\n                                    onClick={() => {\n                                        setSortedKey(col.key)\n                                        setSortAscending(curr => !curr)\n                                    }}\n                                >\n                                    {col.title}\n                                    <div className={!sortAscending ? 'rotate-180':''} style={{display: 'inline-block', marginLeft: '8px'}}>\n                                        <i className='bi bi-triangle-fill' \n                                            style={{\n                                                fontSize: '10px', color: 'var(--tint-color)',\n                                                opacity: sortedKey !== col.key && '0%'\n                                            }} \n                                        />\n                                    </div>\n                                    \n                                </th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {activities.map((ac, index) => (\n                            <tr key={index} onClick={() => handleClickActivity(ac._id)}\n                                style={{ borderLeft: ac.uid == currentUser.uid ? '3px solid var(--tint-color)' : 'none' }}\n                            >\n                                <td>{ac.user.displayName}</td>\n                                <td>{moment.duration(ac.averagePace, 'seconds').format('hh:mm:ss')}</td>\n                                <td>{ac.distance.toFixed()}</td>\n                                <td>{ac.strokeRate}</td>\n                                <td>{moment.duration(ac.elapsedTime, 'seconds').format('hh:mm:ss')}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                    \n                </table>\n                {!activities.length &&\n                    <p className='empty-table-message'>No completed activities</p>\n                }\n            </div>\n        </div>\n        \n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/headers/DropdownMenu.js",["505","506","507"],"import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {useAuth} from '../../contexts/AuthContext'\n\nexport default function DropdownMenu(props) {\n    const {currentUser, thisUser, signOut} = useAuth()\n    const {isDarkMode, setIsDarkMode, tintColor, tintColors, setTintColor, themeColors, setThemeColor} = useTheme()\n    const history = useHistory()\n\n    const [hideSelf, setHideSelf] = useState(props.hideSelf)\n\n    const border = '1px solid var(--bc)'\n    const itemPadding = '12px 25px'\n    const itemStyle = {\n        cursor: 'pointer', \n        padding: itemPadding\n    }\n    const iconStyle={ fontSize: '20px' , color: 'var(--color)', marginRight: 15}\n\n    const tabs = [\n        {title: 'Profile', iconName: 'person', path: `/athletes/${thisUser._id}`},\n        {title: 'Settings', iconName: 'gear', path: '/settings'}\n    ]\n\n    useEffect(() => {\n        setHideSelf(props.hideSelf)\n    }, [props.hideSelf])\n\n    return (\n        <div hidden={hideSelf} onClick={() => props.setHideSelf(true)}\n            style={{\n                height: '100vh', width: '100vw', position: 'absolute',\n                top: '0px', right: '0px',\n                zIndex: 11\n            }} \n        >\n            <div className='float-container dropdown-menu' hidden={hideSelf}\n                style={{\n                    width: '300px', position: 'fixed', top: '70px', right: '40px',\n                    backgroundColor: 'var(--bgc-hover)', zIndex: 20,\n                    padding: '0px 0px', textAlign: 'left',\n                    backgroundColor: 'var(--bgc-light)', \n                    border: isDarkMode ? '1px solid var(--bc)' : 'none',\n                    boxShadow: 'var(--box-shadow-dark)'\n                }}\n            >\n                <div style={{padding: '20px 25px'}}>\n                    <h4 className='fw-s'>{currentUser.displayName}</h4>   \n                </div>\n\n                <h5 className='fw-m dropdown-menu-section-title'>My Stuff</h5>\n\n                <div>\n                    {tabs.map((tab, idx) => (\n                        <div key={idx} className='d-flex jc-flex-start ai-center onhover-bgc-hover' style={itemStyle}\n                            onClick={() => history.push(tab.path)}\n                        >\n                            <i className={`bi bi-${tab.iconName}`} style={iconStyle} />\n                            <p className='fw-s'>{tab.title}</p>\n                        </div>\n                    ))}\n                </div>\n\n                <h5 className='fw-m dropdown-menu-section-title'>Appearance</h5>\n\n                <div style={{padding: itemPadding}} className='d-flex jc-space-between ai-center'>\n                    <div className='d-flex jc-flex-start ai-center'>\n                        <i className='bi bi-palette' style={iconStyle} />\n                        <p className='fw-s'>Color Mode</p>\n                    </div>\n                    \n                    <div className='d-flex jc-flex-end ai-center'>\n                        {themeColors.map( (tc, idx) => \n                            <div key={idx} className='tooltip ml-5' style={{marginRight: 0}} onClick={() => setThemeColor(idx)}>\n                                <i className={`bi bi-${tc.iconName} icon-btn-circle`} />\n                                <div className='tooltip-text'>\n                                    <h6>{tc.name}</h6>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div style={{padding: itemPadding, borderBottom: border}} className='d-flex jc-space-between ai-center'>\n                    <div className='d-flex jc-flex-start ai-center'>\n                        <i className='bi bi-paint-bucket' style={iconStyle} />\n                        <p className='fw-s'>Tint Color</p>\n                    </div>\n                    \n                    <div className='d-flex jc-flex-end ai-center'>\n                        {tintColors.map( (tc, idx) => \n                            <div key={idx} className='tooltip ml-10' onClick={() => setTintColor(idx)}\n                                style={{height: 14, width: 14, borderRadius: 5, backgroundColor: `var(--color-${tc.extension})`}} \n                            >\n                                <div className='tooltip-text'>\n                                    <h6>{tc.name}</h6>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className='d-flex jc-flex-start ai-center onhover-bgc-hover' style={{...itemStyle}}\n                    onClick={signOut}\n                >\n                    <i className=\"bi bi-box-arrow-right\" style={iconStyle}/>\n                    <p className='fw-s'>Log Out</p>\n                </div>\n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Paginator.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Profile.js",["508","509","510"],"\nimport React, {useState, useEffect} from 'react'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {storage} from '../../firebase'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\n\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nexport default function Profile() {\n    const {currentUser, thisUser, fetchThisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [profileDisplayName, setProfileDisplayName] = useState(currentUser.displayName)\n    const [displayName, setDisplayName] = useState(currentUser.displayName)\n    const [isEditingName, setIsEditingName] = useState(false)\n\n    const [profilePhotoURL, setProfilePhotoURL] = useState(currentUser.photoURL)\n    const [photoFile, setPhotoFile] = useState()\n    const [isEditingPhoto, setIsEditingPhoto] = useState(false)\n\n    const [profileBannerURL, setProfileBannerURL] = useState(thisUser.bannerURL ? thisUser.bannerURL : src)\n    const [bannerFile, setBannerFile] = useState()\n    const [isEditingBanner, setIsEditingBanner] = useState(false)\n\n\n    async function handleSubmitName(e) {\n        e.preventDefault()\n        try {\n            const update = { displayName: displayName }\n            await currentUser.updateProfile(update)\n            await api.patch(`/users/${thisUser._id}/displayName`, update)\n\n            setProfileDisplayName(displayName)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch (error) {\n            console.log(error)\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingName(false)\n    }\n\n    async function handleSubmitImage(e) {\n        e.preventDefault()\n        try {\n            await storage.ref('usericons').child(thisUser._id).put(photoFile);\n            const resURL = await storage.ref('usericons').child(thisUser._id).getDownloadURL()\n            await currentUser.updateProfile({\n                photoURL: resURL\n            })\n            await api.patch(`/users/${thisUser._id}/iconURL`, {iconURL: resURL})\n            setProfilePhotoURL(resURL)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n            fetchThisUser()\n        } catch(error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingPhoto(false)\n    }\n\n    async function handleSubmitBanner(e) {\n        e.preventDefault() \n        try {\n            await storage.ref('userbanners').child(thisUser._id).put(bannerFile);\n            const resURL = await storage.ref('userbanners').child(thisUser._id).getDownloadURL()\n            await api.patch(`/users/${thisUser._id}/bannerURL`, {bannerURL: resURL})\n            setProfileBannerURL(resURL)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch(error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setIsEditingBanner(false)\n    }\n\n    return (\n        <div>\n            <h3 id='Profile'>Profile</h3>\n            <br />\n            <div className='settings-list'>\n                <div className='editable-settings-row' style={{display: isEditingName && 'none'}}\n                    onClick={() => setIsEditingName(true)}\n                >\n                    <p>Display Name</p>\n                    <p>{profileDisplayName}</p>\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingName} style={{marginBottom: isEditingName && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingName(false)}>\n                        <p>Display Name</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitName}> \n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Display Name</p>\n                            <input type='text' value={displayName} onChange={e => setDisplayName(e.target.value)} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end' >\n                            <button type='button' className='clear-btn-secondary mr-20' onClick={() => setIsEditingName(false)}>\n                                Cancel\n                            </button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n                <div className='editable-settings-row' style={{display: isEditingPhoto && 'none'}}\n                    onClick={() => setIsEditingPhoto(true)}\n                >\n                    <p>Current Photo</p>\n                    <img className='user-icon' src={profilePhotoURL}/>\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingPhoto} style={{marginBottom: isEditingPhoto && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingPhoto(false)}>\n                        <p>Current Photo</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitImage}>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Current Photo</p>\n                            <input type='file' accept='image/*' onChange={e => setPhotoFile(e.target.files[0])} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end'>\n                            <button type='button' className='clear-btn-secondary mr-20' onClick={() => setIsEditingPhoto(false)}>\n                                Cancel\n                            </button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n                <div className='editable-settings-row' style={{display: isEditingBanner && 'none'}}\n                    onClick={() => setIsEditingBanner(true)}\n                >\n                    <p>Current Banner Photo</p>\n                    <img className='banner-image' src={profileBannerURL} style={{width: 200, height: 50}} />\n                </div>\n                <div className='settings-edit-container' hidden={!isEditingBanner} style={{marginBottom: isEditingBanner && 15}}>\n                    <div className='settings-edit-header' onClick={() => setIsEditingBanner(false)}>\n                        <p>Current Banner Photo</p>\n                        <i className='bi bi-pencil' />\n                    </div>\n                    <br />\n                    <form onSubmit={handleSubmitBanner}>\n                        <div className='d-flex jc-space-between ai-center'>\n                            <p>Current Banner Photo</p>\n                            <input type='file' accept='image/*' onChange={e => setBannerFile(e.target.files[0])} required/>\n                        </div>\n                        <br /><br />\n                        <div className='d-flex jc-flex-end' >\n                            <button type='button' className='clear-btn-secondary mr-20' onClick={() => setIsEditingBanner(false)}>\n                                Cancel\n                            </button>\n                            <button type='submit' className='solid-btn-secondary'>Save</button>\n                        </div>\n                    </form>\n                    <br />\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Preferences.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/settings/Settings.js",["511","512","513"],"\nimport React, {useState, useEffect, useCallback} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport SubHeader from '../headers/SubHeader'\nimport Profile from './Profile'\nimport Preferences from './Preferences'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport Loading from '../misc/Loading'\nimport moment from 'moment'\nimport axios from 'axios'\n\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Settings() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [profileEmail, setProfileEmail] = useState(currentUser.email)\n    const [editingEmail, setEditingEmail] = useState(false)\n    const [email, setEmail] = useState(currentUser.email)\n\n    const menuRef = useCallback(node => {\n        if (node !== null) {\n            setMenuOffset(node.offsetTop - 70)\n        }\n    }, [])\n    const [menuOffset, setMenuOffset] = useState(0)\n\n    async function handleSubmitEmail(e) {\n        e.preventDefault()\n        try {\n            await currentUser.updateEmail(email)\n            setProfileEmail(email)\n            setMessage({title: 'Changes saved', isError: false, timestamp: moment()})\n        } catch (error) {\n            console.log(error)\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n        setEditingEmail(false)\n    }\n\n    async function handleClickResetPassword() {\n        try {\n            await firebase.auth().sendPasswordResetEmail(currentUser.email)\n            setMessage({title: 'Check your email for a reset password link', isError: false, timestamp: moment()})\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSubscribe() {\n        setMessage({\n            title: 'We apologize, but this feature is currently in development',\n            isError: true,\n            timestamp: moment()\n        })\n    }\n\n    function handleClickDeleteAccount() {\n        handleClickSubscribe()\n    }\n\n    const settingsGroups = [\n        {title: 'Membership'},\n        {title: 'Account'},\n        {title: 'Profile'},\n        {title: 'Preferences'}\n    ]\n\n    return (\n        <div>\n            <MainHeader />\n            <SubHeader title='Settings' />\n            <div className='main-container settings-page d-flex jc-flex-start ai-flex-start' style={{zIndex: -1}}>\n                <div id='settings-menu' className='settings-menu' ref={menuRef} style={{top: menuOffset}}>\n                    {settingsGroups.map((group, idx) => (\n                        <p key={idx} style={{marginBottom: 15}} className='menu-link'\n                            onClick={() => {\n                                const elemPos = document.getElementById(group.title).offsetTop\n                                window.scrollTo({top: elemPos - 80})\n                            }}\n                        >\n                            {group.title}\n                        </p>\n                    ))}\n                </div>\n                <div style={{width: 650, maxWidth: 650, minWidth: 650, marginLeft: 150}}>\n                    <h3 id='Membership'>Membership</h3>\n                    <br />\n                    <div className='settings-list'>\n                        <div className='settings-row'>\n                            <p>Member Since</p>\n                            <p>{moment(thisUser.createdAt).format('LL')}</p>\n                        </div>\n                        <div className='settings-row'>\n                            <p>Subscription</p>\n                            <p>None</p>\n                            <button className='clear-btn-secondary' onClick={handleClickSubscribe}>Subscribe Now</button>\n                        </div>\n                    </div>\n                    <h3 id='Account'>Account</h3>\n                    <br />\n                    <div className='settings-list'>\n                        <div className='editable-settings-row' style={{display: editingEmail && 'none'}} onClick={() => setEditingEmail(true)}>\n                            <p>Email Address</p>\n                            <p>{profileEmail}</p>\n                        </div>\n                        <div className='settings-edit-container' hidden={!editingEmail} style={{ marginBottom: editingEmail && 15}}>\n                            <div className='settings-edit-header' onClick={() => setEditingEmail(false)}>\n                                <p>Email Address</p>\n                                <i className='bi bi-pencil' />\n                            </div>\n                            <br />\n                            <form onSubmit={handleSubmitEmail}>\n                                <div className='d-flex jc-space-between ai-center'>\n                                    <p>Email Address</p>\n                                    <input value={email} onChange={(e) => setEmail(e.target.value)} type='email' required />\n                                </div>\n                                <br /><br />\n                                <div className='d-flex jc-flex-end'>\n                                    <button type='button' className='clear-btn-secondary mr-20' onClick={() => setEditingEmail(false)}>\n                                        Cancel\n                                    </button>\n                                    <button type='submit' className='solid-btn-secondary'>Save</button>\n                                </div>\n                            </form>\n                            <br />\n                        </div>\n                        <div className='settings-row'>\n                            <p>Password</p>\n                            <button className='clear-btn-secondary' onClick={handleClickResetPassword}>Reset Password</button>\n                        </div>\n                        <div className='settings-row'>\n                            <p />\n                            <button className='error-btn-secondary' onClick={handleClickDeleteAccount}>Delete your account</button>\n                        </div>\n                    </div>\n                    <Profile />\n                    <Preferences />\n                    <div style={{height: 450}} />\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/contexts/MessageContext.js",["514","515","516","517"],"import React, { useState, useContext, useEffect } from 'react'\nimport { useTheme } from './ThemeContext'\n\nconst MessageContext = React.createContext()\n\nexport function useMessage() {\n    return useContext(MessageContext)\n}\n\nexport function MessageProvider({children}) {\n    // external interface\n    const [message, setMessage] = useState(null)\n    const value = {message, setMessage}\n    // internal interface\n    const [messages, setMessages] = useState([])\n    const [messageTimestamps, setMessageTimestamps] = useState(new Set())\n\n    useEffect(() => {\n        if (message === null) {return}\n        const key = messages.length + 1\n        if (! messageTimestamps.has(message.timestamp.format())) {\n            setMessages([...messages, {...message, isHidden: false, key: key} ])\n            setMessageTimestamps(curr => (new Set([...curr, message.timestamp.format()])) )\n            setTimeout(() => hideMessage(key), 5*1000);\n        }\n        \n    }, [message])\n\n    function hideMessage(messageKey) {\n        setMessages(messages => ([...\n            messages.map( message => {\n                if (message.key === messageKey && !message.isHidden) {\n                    return {...message, isHidden: true}\n                } else {\n                    return message\n                }\n            })\n        ]))\n    }\n\n    const messageWidth = 400 + 4\n    const messageHeight = 50 + 4\n    const xWidth = 40\n\n    return (\n        <MessageContext.Provider value={value}>\n            {children}\n            <div style={{position: 'fixed', left: '50%', marginLeft: -messageWidth/2, bottom: 100, width: messageWidth, textAlign: 'left'}}>\n                {messages !== null && messages.map((message, idx) => (\n                    <div key={idx} className='d-flex jc-flex-start float-container' \n                        style={{\n                            overflow: 'hidden', gap: 0, border: message.isError ? '2px solid var(--color-error)' : '2px solid var(--tint-color)',\n                            marginTop: 10, display: message.isHidden && 'none'\n                        }}\n                        hidden={message.isHidden}\n                    >\n                        <div  onClick={() => hideMessage(message.key)}\n                            style={{\n                                width: xWidth,\n                                backgroundColor: message.isError ? 'var(--color-error)' : 'var(--tint-color)',\n                                cursor: 'pointer'\n                            }}\n                            className='d-flex ai-center jc-center onhover-dark'\n                        >\n                            <i className='bi bi-x' style={{fontSize: 30, color: 'white'}} />\n                        </div>\n                        <div style={{padding: '10px 10px'}}>\n                            {message.isError &&\n                                <div className='d-flex jc-flex-start ai-center mb-5'>\n                                    <i className='bi bi-exclamation-circle mr-10' style={{color: 'var(--color-error)', fontSize: 15}} />\n                                    <h4 style={{color: 'var(--color-error)'}}>\n                                        Something went wrong\n                                    </h4>\n                                </div>\n                            }\n                            <h4>{message.title}</h4>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </MessageContext.Provider>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Club.js",["518","519","520","521","522","523"],"import React, {useState, useEffect} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport SubHeader from '../headers/SubHeader'\nimport ClubHeader from './ClubHeader'\nimport SessionCard from '../feed/SessionCard'\nimport FeedLoader from '../feed/FeedLoader'\nimport Loading from '../misc/Loading'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useParams, useHistory } from 'react-router-dom'\nimport { formatNumber, formatUnit } from '../../scripts/Numbers'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Club(props) {\n    const {clubURL} = useParams()\n    const {thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const history = useHistory()\n\n    const [members, setMembers] = useState()\n    const [membership, setMembership] = useState()\n    const [club, setClub] = useState()\n    const [loading, setLoading] = useState(true)\n\n\n    const [heatmapData, setHeatmapData] = useState()\n    const [loadingHeatmap, setLoadingHeatmap] = useState(true)\n\n    const [canLoadMoreSessions, setCanLoadMoreSessions] = useState(false)\n    const [sessions, setSessions] = useState([])\n    const [loadingSessions, setLoadingSessions] = useState(true)\n\n    const [canEditClub, setCanEditClub] = useState(false)\n\n    useEffect( () => {\n        fetchData()\n    }, [clubURL])\n\n    useEffect(() => {\n        if (!membership) {return}\n        setCanEditClub(membership.role >= 1)\n    }, [membership])\n\n    async function fetchData() {\n        try {\n            const res = await api.get(`/clubs/customURL/${clubURL}`)\n            setClub(res.data)\n            await __fetchMembers(res.data._id)\n            await fetchSessions(res.data._id)\n        } catch(error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    async function __fetchMembers(clubID) {\n        try {\n            let res = await api.get(`/clubmemberships/club/${clubID}`)\n            setMembers(res.data)\n            res = await api.get(`/clubmemberships/ismember?user=${thisUser._id}&club=${clubID}`)\n            setMembership(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function fetchMembers() {\n        if (!club) {return}\n        __fetchMembers(club._id)\n    }\n\n    async function fetchSessions(clubID) {\n        setLoadingSessions(true)\n        const pageSize = 5\n        const currentPage = Math.ceil(sessions.length / pageSize)\n        try {\n            const url = `/feed/club-profile?club=${clubID}&page=${currentPage + 1}&pagesize=${pageSize}`\n            const res = await api.get(url)\n            setSessions(curr => [...curr, ...res.data])\n            setCanLoadMoreSessions(res.data.length >= pageSize)\n        } catch (error) {\n            console.log(error.response.data.message)\n        }\n        setLoadingSessions(false)\n    }\n\n    function handleClickLoadMoreSessions() {\n        if (!club || loadingSessions || !canLoadMoreSessions) {return}\n        fetchSessions(club._id)\n    }\n\n    function routeToMembers() {\n        history.push(`/clubs/${clubURL}/members`)\n    }\n\n    function handleClickEditClub() {\n        if (!membership || membership.role < 1) {\n            setMessage({title: 'You do not have permission to edit this club', isError: true, timestamp: moment()})\n        } else {\n            history.push(`/clubs/${clubURL}/edit`)\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0, zIndex: 1000}}/>\n            {loading ? <Loading /> : !club ? <h2 style={{paddingTop: 40}}>We couldn't find a club at that link</h2> :\n            <div>\n                <ClubHeader title={club.name} subPath='/general' \n                    fetchData={fetchMembers} \n                    club={club} members={members} membership={membership}\n                />\n                <br /><br />\n                <div className='main-container' style={{display: 'grid', gridTemplateColumns: '2fr 1fr', gap: 50}}>\n                    <div>\n                        \n                        <h3>Recent Sessions</h3>\n                        <br />\n                        {sessions.map( (session, idx) => session.club && \n                            <div key={idx}>\n                                <SessionCard session={session} parentID={session._id} />\n                            </div>\n                        )}\n                        <FeedLoader\n                            pluralUnit='sessions'\n                            canLoadMore={canLoadMoreSessions}\n                            loading={loadingSessions}\n                            handleClickLoadMore={handleClickLoadMoreSessions}\n                            feedEndMessage={`${club.name} has no more sessions`}\n                        />\n\n                    </div>\n                    <div style={{ position: 'sticky', top: 'calc(var(--main-nav-height) + 20px)'}}>\n                        <div className='float-container'>\n                            <div className='d-flex jc-space-between ai-center' \n                                style={{backgroundColor: 'var(--tint-color-translucent)', padding: '15px 20px'}} \n                            >\n                                <h4 className='c-tc'>Club Information</h4>\n                                {canEditClub && \n                                    <i className='bi bi-pencil clear-icon-btn' onClick={handleClickEditClub}/>\n                                }\n                            </div>\n                            \n                            <div style={{padding: 20}}>\n                                <p>{club.description}</p>\n                                <br />\n                                <div className='d-flex jc-space-around ai-center' >\n                                    <div style={{ textAlign: 'center'}}>\n                                        <h3>{formatNumber(members.length)}</h3>\n                                        <h5 className='page-link c-cs' onClick={routeToMembers}>{formatUnit('Member', members.length)}</h5>\n                                    </div>\n                                    <div style={{textAlign: 'center', display: 'none'}}>\n                                        <h3>{formatNumber(12345)}</h3>\n                                        <h5 className='page-link c-cs' onClick={routeToMembers}>Sessions</h5>\n                                    </div>\n                                </div>\n                                <br />\n                                <div className='d-flex jc-flex-start ai-center'>\n                                    <p className='mr-10'>{club.isPrivate ? 'Invite-only Club' : 'Public Club'}</p>\n                                    <i className={`bi bi-${club.isPrivate ? 'lock':'unlock'}-fill c-cs`} style={{fontSize: 20}} />\n                                </div>\n                            </div>\n                            <div className='d-flex jc-flex-start ai-center' \n                                style={{borderTop: '1px solid var(--bc)', padding: '15px 20px'}}\n                            >\n                                <i className='bi bi-calendar-plus mr-10' />\n                                <p>Created {moment(club.createdAt).format('LL')}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{height: 500}}></div>\n                    \n                </div>\n            </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/ClubHeader.js",["524","525","526","527","528"],"import React, {useEffect, useState} from 'react'\nimport SubHeader from '../headers/SubHeader'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useAuth} from '../../contexts/AuthContext'\nimport moment from 'moment'\nimport axios from 'axios'\nimport Confirmation from '../misc/Confirmation'\n\nconst srcBanner = 'https://styles.redditmedia.com/t5_2qljq/styles/bannerBackgroundImage_zfhrcn1w7u911.jpg?width=4000&format=pjpg&s=88d594d779756f76ef8a5e0073e1d2959cd501bf'\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\nexport default function ClubHeader(props) {\n    const {currentUser, thisUser} = useAuth()\n    const history = useHistory()\n    const {setMessage} = useMessage()\n\n    const [club, setClub] = useState(props.club)\n    const [membership, setMembership] = useState(props.membership)\n\n    const [confirmationHidden, setConfirmationHidden] = useState(true)\n\n    const items = [\n        {title: 'General', path: '/general'},\n        {title: 'Members', path: '/members'}\n    ]\n\n    useEffect(() => {\n        setClub(props.club)\n        setMembership(props.membership)\n    }, [props])\n\n    async function handleClickJoin() {\n        async function joinClub() {\n            try {\n                const res = await api.post(`/clubmemberships`, {club: club._id, user: thisUser._id, role: 0})\n                setMessage({title: res.data.message, isError: false, timestamp: moment() })\n            } catch(error) {\n                setMessage({title: `Error joining ${club.name}. ${error.response.data.message}`, isError: true, timestamp: moment() })\n                console.log(error)\n            }\n        }\n        await joinClub()\n        props.fetchData()\n    }\n\n    async function handleClickConfirmLeave() {\n        async function leaveClub() {\n            try {\n                const url = `/clubmemberships/leave?club=${club._id}&user=${thisUser._id}`\n                console.log(url)\n                const res = await api.delete(url)\n                setMessage({title: res.data.message, isError: false, timestamp: moment() })\n            } catch(error) {\n                setMessage({title: `Error leaving ${club.name}. ${error.response.data.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        await leaveClub()\n        props.fetchData()\n    }\n\n    return (\n        <div>\n            <Confirmation title='Confirm' handleClickConfirm={handleClickConfirmLeave} \n                hidden={confirmationHidden} setHidden={setConfirmationHidden}\n                message={`Are you sure you want to ${membership.role === -1 ? 'cancel your request to join this club?':'leave this club?'}`}\n            />\n            <img className='banner-image' src={club.bannerURL ? club.bannerURL : srcBanner} />\n            <SubHeader\n                title={props.title} \n                items={items} \n                path={`/clubs/${club.customURL}`}\n                subPath={props.subPath}\n                iconURL={props.club.iconURL}\n            >\n                {membership.isMember ? \n                    <button className='clear-btn-secondary' onClick={() => setConfirmationHidden(false)}>\n                        {membership.role === -1 ? 'Cancel join request' : 'Leave'}\n                    </button>\n                    :\n                    <button className='solid-btn-secondary' onClick={handleClickJoin}>\n                        {club.isPrivate ? 'Request to join' : 'Join'}\n                    </button>\n                }\n            </SubHeader>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/Members.js",["529","530"],"import React, {useState, useEffect} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport ClubHeader from './ClubHeader'\nimport AdminCard from './AdminCard'\nimport PendingMemberCard from './PendingMemberCard'\nimport MemberCard from './MemberCard'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Members() {\n    const {clubURL} = useParams()\n    const history = useHistory()\n    const {thisUser} = useAuth()\n    const {setMessage} = useMessage()\n\n    const [club, setClub] = useState()\n    const [membership, setMembership] = useState()\n\n    const [members, setMembers] = useState([])\n    const [admins, setAdmins] = useState([])\n    const [pendingMembers, setPendingMembers] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        fetchData()\n    }, [clubURL])\n\n    async function fetchData() {\n        try {\n            const res = await api.get(`/clubs/customURL/${clubURL}`)\n            setClub(res.data)\n            await __fetchMembers(res.data._id)\n        } catch(error) {\n            console.log(error)\n        }\n        setLoading(false)\n    }\n\n    async function __fetchMembers(clubID) {\n        try {\n            let res = await api.get(`/clubmemberships/club/${clubID}`)\n            setPendingMembers(res.data.filter(m => m.role === -1))\n            setMembers(res.data.filter(m => m.role === 0))\n            setAdmins(res.data.filter(m => m.role > 0))\n            res = await api.get(`/clubmemberships/ismember?user=${thisUser._id}&club=${clubID}`)\n            setMembership(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function fetchMembers() {\n        if (!club) {return}\n        __fetchMembers(club._id)\n    }\n    \n    async function handleClickMakeOwner(userID) {\n        try {\n            const res = await api.patch('/clubmemberships/transferOwnership', {fromUser: thisUser._id, toUser: userID, club: club._id})\n            setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            fetchMembers()\n        } catch (error) {\n            setMessage({title: error.response.data.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    async function handleClickMakeAdmin(userID) {\n        try {\n            const res = await api.patch('/clubmemberships/makeAdmin', {requestingUser: thisUser._id, user: userID, club: club._id})\n            setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            fetchMembers()\n        } catch (error) {\n            setMessage({title: error.response.data.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    async function handleClickRevokeAdmin(userID) {\n        try {\n            const res = await api.patch('/clubmemberships/revokeAdmin', {requestingUser: thisUser._id, user: userID, club: club._id})\n            setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            fetchMembers()\n        } catch (error) {\n            setMessage({title: error.response.data.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    async function handleClickRemove(userID) {\n        try {\n            const res = await api.delete(`/clubmemberships/revokeMembership?requestingUser=${thisUser._id}&user=${userID}&club=${club._id}`)\n            setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            fetchMembers()\n        } catch (error) {\n            setMessage({title: error.response.data.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    async function handleClickAcceptRequest(userID) {\n        try {\n            const res = await api.patch('/clubmemberships/makeMember', {requestingUser: thisUser._id, user: userID, club: club._id})\n            setMessage({title: res.data.message, isError: false, timestamp: moment()})\n            fetchMembers()\n        } catch (error) {\n            setMessage({title: error.response.data.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickDeclineRequest(userID) {\n        handleClickRemove(userID)\n    }\n\n    const membershipActions = {\n        handleClickMakeOwner, handleClickMakeAdmin,\n        handleClickRevokeAdmin, handleClickRemove,\n        handleClickAcceptRequest, handleClickDeclineRequest\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0, zIndex: 1000}}/>\n            {loading ? <Loading /> : !club ? <h2 style={{paddingTop: 40}}>We couldn't find a club at that link</h2> :\n            <div >\n                <ClubHeader title={club.name} subPath='/members' \n                    fetchData={fetchMembers} \n                    club={club} members={members} membership={membership}\n                /> \n                <div className='main-container' style={{paddingBottom: 200}}>\n                    <br /><br />\n                    <h3>Admins</h3>\n                    <br />\n                    <div className='float-container'>\n                        {admins.map((admin, idx) => \n                            <AdminCard myMembership={membership} member={admin} membershipActions={membershipActions}/>\n                        )}\n                    </div>\n                    <br /><br />\n                    <div style={{display: (membership.role <= 0 || pendingMembers.length === 0) && 'none' }}>\n                        <h3>Pending Requests to Join</h3>\n                        <br />\n                        <div className='float-container'>\n                            {pendingMembers.map((member, idx) => \n                                <PendingMemberCard myMembership={membership} member={member} membershipActions={membershipActions} />\n                            )}\n                        </div>\n                        <br /><br />\n                    </div>\n                    <h3>Members</h3>\n                    <br />\n                    <div className='float-container'>\n                        {! members.length > 0 && \n                            <div style={{padding: 20}}>\n                                <p className='c-cs'>This club has no members</p>\n                            </div>\n                        }\n                        {members.map((member, idx) => \n                            <MemberCard myMembership={membership} member={member} membershipActions={membershipActions} />\n                        )}\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Confirmation.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/Pending.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Athlete.js",["531","532"],"\nimport React, { useState, useEffect } from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext'\nimport MainHeader from '../headers/MainHeader'\nimport AthleteHeader from './AthleteHeader'\nimport ActivityCard from '../feed/ActivityCard'\nimport FeedLoader from '../feed/FeedLoader'\nimport Pending from '../misc/Pending'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {formatUnit} from '../../scripts/Numbers'\n\nimport ClubIcon from '../icons/ClubIcon'\nimport YearHeatmap from '../charts/YearHeatmap'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Athlete() {\n    const { thisUser } = useAuth()\n    const {userID} = useParams()\n    const history = useHistory()\n\n    const [user, setUser] = useState()\n    const [loadingUser, setLoadingUser] = useState(true)\n\n    const [clubs, setClubs] = useState([])\n    const [loadingClubs, setLoadingClubs] = useState(true)\n\n    const [canLoadMoreActivities, setCanLoadMoreActivities] = useState(false)\n    const [activities, setActivities] = useState([])\n    const [loadingActivities, setLoadingActivities] = useState(true)\n\n    const [heatmapData, setHeatmapData] = useState({})\n    const [loadingHeatmap, setLoadingHeatmap] = useState(true)\n\n    useEffect(() => {\n        async function fetchUser() {\n            setLoadingUser(true)\n            try {\n                const res = await api.get(`/users/${userID}`)\n                setUser(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoadingUser(false)\n        }\n        async function fetchClubs() {\n            const url = `/clubmemberships/user/${userID}`\n            const res = await api.get(url)\n            setClubs(res.data)\n            setLoadingClubs(false)\n        }\n        async function fetchHeatmapData() {\n            try {\n                const url = `/users/${userID}/activity-heatmap?currentYear=${moment().year()}&yearOffset=0`\n                const res = await api.get(url)\n                setHeatmapData(res.data) \n            } catch(error) {\n                console.log(error.response.data.message)\n            }\n            setLoadingHeatmap(false)\n        }\n        fetchUser()\n        fetchActivities()\n        fetchClubs()\n        fetchHeatmapData()\n    }, [userID])\n\n    async function fetchActivities() {\n        setLoadingActivities(true)\n        const pageSize = 5\n        const currentPage = Math.ceil(activities.length / pageSize)\n        try {\n            const url = `/feed/athlete-profile?user=${userID}&page=${currentPage + 1}&pagesize=${pageSize}`\n            const res = await api.get(url)\n            setActivities(curr => [...curr, ...res.data])\n            setCanLoadMoreActivities(res.data.length >= pageSize)\n        } catch (error) {\n            console.log(error.response.data.message)\n        }\n        setLoadingActivities(false)\n    }\n\n    function handleClickLoadMoreActivities() {\n        if (loadingActivities || !canLoadMoreActivities) {return}\n        fetchActivities()\n    }\n    \n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0, zIndex: 100}} />\n            {(!loadingUser && !user) && <h2 style={{paddingTop: 40}}>We couldn't find an athlete at that link</h2>}\n            {(!loadingUser && user) &&\n            <div>\n                <AthleteHeader user={user} subPath='/' />\n                <br /><br />\n                \n                            \n                <div className='main-container' style={{display: 'grid', gridTemplateColumns: '2fr 1fr', gap: 50}}>\n                    <div style={{gridColumn: '1/3'}}>\n                        <h3>Activities in {moment().year()}</h3>\n                        <br />\n                        <div className='float-container' style={{padding: 20, overflow: 'scroll'}}>\n                            { (!loadingHeatmap) &&\n                                <h5 className='mb-10'> {userID === thisUser._id ? 'You have' : user.displayName + ' has'} \n                                {' '} completed {' '}\n                                {heatmapData.count} {formatUnit('activity', heatmapData.count)} this year\n                                </h5>\n                            }\n                            <YearHeatmap data={heatmapData} dataUnit='activity'/>\n                        </div>\n                    </div>\n                    <div>\n                        <h3>Recent Activities</h3>\n                        <br />\n                        {activities.map((ac, idx) => \n                            <div key={idx}>\n                                <ActivityCard activity={ac} />\n                            </div>\n                        )}\n                        <FeedLoader \n                            pluralUnit='activities' \n                            loading={loadingActivities}\n                            canLoadMore={canLoadMoreActivities}\n                            handleClickLoadMore={handleClickLoadMoreActivities}\n                            feedEndMessage={`${user._id === thisUser._id ? 'You have' : user.displayName + ' has'} no more activities`}\n                        />\n                    </div>\n                    <div>\n                        <div>\n                            <h3>Clubs</h3>\n                            <br />\n                            <div className='float-container d-flex jc-flex-start ai-flex-start fw-wrap'>\n                                {loadingClubs && \n                                    <div className='loading-message'><Pending />Loading clubs...</div>\n                                }\n                                {clubs.map( (club, idx) => \n                                    <ClubIcon club={club} key={idx} style={{margin: 15}} />\n                                )}\n                                {(!loadingClubs && !loadingUser && !clubs.length) &&\n                                    <p className='c-cs' style={{padding: '20px 20px'}}>\n                                        {user.displayName} does not belong to any clubs\n                                    </p>\n                                }\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{height: 100}}></div>\n                    \n                </div>\n            </div>\n            }\n            \n        </div>\n\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/AthleteHeader.js",["533","534","535","536"],"import React, {useEffect, useState} from 'react'\nimport SubHeader from '../headers/SubHeader'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {formatNumber} from '../../scripts/Numbers'\nimport Confirmation from '../misc/Confirmation'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst src ='https://miro.medium.com/max/3600/1*i-PXQ3H7ork5fLqr2dQw6g.png'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function AthleteHeader(props) {\n    const {thisUser} = useAuth()\n    const {userID} = useParams()\n    const {setMessage} = useMessage()\n    const history = useHistory()\n\n    const [user, setUser] = useState(props.user)\n    const [followSummary, setFollowSummary] = useState()\n    const [loadingSummary, setLoadingSummary] = useState(true)\n    const [doesFollow, setDoesFollow] = useState()\n    const [loadingDoesFollow, setLoadingDoesFollow] = useState(true)\n\n    const [confirmationHidden, setConfirmationHidden] = useState(true)\n    \n    const items = [\n        {title: 'Overview', path: '/'},\n        {title: 'Following', path: '/following'}\n    ]\n\n    useEffect(() => {\n        setUser(props.user)\n        fetchData()\n    }, [props.user]) \n\n    function fetchData() {\n        fetchFollowSummary()\n        fetchDoesFollow()\n    }\n\n    async function fetchFollowSummary() {\n        try {\n            const res = await api.get(`/follows/user/${userID}/summary`)\n            setFollowSummary(res.data)\n        } catch (error) {console.log(error)}\n        setLoadingSummary(false)\n    }\n\n    async function fetchDoesFollow() {\n        try {\n            const res = await api.get(`/follows/doesfollow?follower=${thisUser._id}&followee=${userID}`)\n            setDoesFollow(res.data.doesFollow)\n        } catch (error) {\n            console.log(error.message)\n        }\n        setLoadingDoesFollow(false)\n    }\n\n    async function handleClickFollow() {\n        try {\n            await api.post('/follows', {follower: thisUser._id, followee: userID})\n            setMessage({title: `You are now following ${user.displayName}`, isError: false, timestamp: moment()})\n        } catch (error) {\n            setMessage({title: `Error following ${user.displayName}. ${error.message}`, isError: true, timestamp: moment()})\n        }\n        fetchData()\n        {props.fetchData && props.fetchData()}\n    }\n\n    async function handleClickConfirmUnfollow() {\n        async function unfollow() {\n            try {\n                await api.delete(`/follows?follower=${thisUser._id}&followee=${userID}`)\n                setMessage({title: `You unfollowed ${user.displayName}`, isError: false, timestamp: moment()})\n            } catch (error) {\n                setMessage({title: `Error unfollowing ${user.displayName}. ${error.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        await unfollow()\n        fetchData()\n        {props.fetchData && props.fetchData()}\n    }\n\n    function routeToFollowing() {\n        if (props.subPath === '/following') { return }\n        history.push(`/athletes/${userID}/following`)\n    }\n\n    return (\n        <div>\n            <img className='banner-image' src={user.bannerURL ? user.bannerURL : src} />\n            <SubHeader \n                title={user.displayName}\n                iconURL={user.iconURL}\n                path={`/athletes/${userID}`}\n                subPath={props.subPath}\n                items={items}\n            >\n                {!loadingSummary &&\n                    <div className='d-flex jc-center ai-center' style={{marginRight: 40}}>\n                        <div style={{marginRight: 20, textAlign: 'center'}}>\n                            <h3>{formatNumber(followSummary.followees)}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Following</h5>\n                        </div>\n                        <div style={{textAlign: 'center'}}>\n                            <h3>{formatNumber(followSummary.followers)}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Followers</h5>\n                        </div>\n                    </div>\n                }\n                {(!loadingDoesFollow && userID !== thisUser._id) && \n                    (doesFollow ? \n                        <button className='clear-btn-secondary' onClick={() => setConfirmationHidden(false)}>Unfollow</button>\n                        :\n                        <button className='solid-btn-secondary' onClick={handleClickFollow}>Follow</button>\n                    )\n                }\n            </SubHeader>\n            <Confirmation title='Confirm' message={`Are you sure you want to unfollow ${user.displayName}?`}\n                handleClickConfirm={handleClickConfirmUnfollow} hidden={confirmationHidden} setHidden={setConfirmationHidden}\n            />\n        </div>\n    )\n} ","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/athlete/Following.js",["537","538","539","540","541","542"],"import React, { useState, useEffect } from 'react'\nimport AthleteHeader from './AthleteHeader'\nimport MainHeader from '../headers/MainHeader'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useParams, useHistory} from 'react-router-dom'\nimport Loading from '../misc/Loading'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Following() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const {userID} = useParams()\n    const history = useHistory()\n\n    const [user, setUser] = useState()\n    const [users, setUsers] = useState([])            // follow(ers/ees)\n    const [loading, setLoading] = useState(true)\n\n    const [followType, setFollowType] = useState('followers')\n\n    useEffect(() => {\n        setLoading(true)\n        async function fetchData() {\n            try {\n                const res = await api.get(`/users/${userID}`)\n                setUser(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n        fetchFollowing()\n    }, [userID])\n\n    useEffect(() => {\n        fetchFollowing()\n    }, [followType])\n\n    async function fetchFollowing() {\n        try {\n            const res = await api.get(`/follows/user/${userID}/${followType}`)\n            setUsers(res.data)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader style={{position: 'sticky', top: 0, zIndex: 1000}}/>\n            {(!loading && !user) && <h2 style={{paddingTop: 40}}>We couldn't find an athlete at that link</h2>}\n            {(!loading && user) &&\n            <div>\n                <AthleteHeader user={user} subPath='/following' fetchData={fetchFollowing}/>\n                <div className='main-container'>\n                    <br />\n                    <br />\n                    <select value={followType} onChange={e => setFollowType(e.target.value)}>\n                        <option value='followees'>\n                            {thisUser._id === userID ? \"I'm following\" : `${user.displayName} is following`}\n                        </option>\n                        <option value='followers'>\n                            {thisUser._id === userID ? \"Following me\" : `Following ${user.displayName}`}\n                        </option>\n                    </select>\n                    <br /><br />\n                    <div className='float-container'>\n                        <table style={{width: '100%'}}>\n                            <thead>\n                                <tr><th>Name</th></tr>\n                            </thead>\n                            <tbody>\n                                {users && users.map((u, idx) => (\n                                    <tr key={idx}>\n                                        <td className='d-flex jc-flex-start ai-center'>\n                                            {u.iconURL ? \n                                                <img src={u.iconURL} className='user-icon' />\n                                                :\n                                                <div className='user-icon-default'>\n                                                    <i className='bi bi-person' />\n                                                </div>\n                                            }\n                                            <h4 className='page-link' onClick={() => history.push(`/athletes/${u._id}`)}>\n                                                {u.displayName}\n                                            </h4>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                        {(users && !users.length) && \n                            <h4 className='c-cs' style={{padding: '20px 15px'}}> {followType === 'followers' ? \n                                `${user.displayName} currently has no followers`\n                                :\n                                `${user.displayName} is not following anyone`\n                            }</h4>\n                        }\n                    </div>\n                    \n                </div>\n            </div>\n            }\n            \n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/PasswordReset.js",["543","544","545","546","547"],"import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport { useMessage } from '../contexts/MessageContext'\nimport SignHeader from './headers/SignHeader'\nimport moment from 'moment'\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nexport default function PasswordReset() {\n    const { setMessage } = useMessage()\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const {signIn, continueWithGoogle } = useAuth()\n    const history = useHistory()\n    const [awaitingResponse, setAwaitingResponse] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            await firebase.auth().sendPasswordResetEmail(emailRef.current.value)\n            setMessage({title: 'Check your email for a reset password link.', isError: false, timestamp: moment()})\n        } catch (error) {\n            setMessage({title: error.message, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickSignUp() {\n        history.push('/register')\n    }\n\n    return (\n        <div  className='login-page'>\n            <SignHeader />\n            <br />\n            <div className='float-container login-card'>\n                <form onSubmit={handleSubmit}>\n                    <h3>Reset your password</h3>\n                    <br /><br />\n                    <p className='c-cs'>\n                        Enter the email address associated with your account and we'll send you a link to reset your password.\n                    </p>\n                    <br /><br />\n                    <label>Email <br />\n                        <input ref={emailRef} type=\"email\" name=\"email\" id=\"email\" required/>\n                    </label>\n                    <br /><br /><br />\n                    <button className='solid-btn-secondary' type=\"submit\">Continue</button>\n                    <br /><br />\n                </form>\n            </div>\n\n            <div className='d-flex jc-center' style={{marginTop: 10}}>\n                <p style={{marginRight: 10}}>Don't have an account?</p>\n                <p className='action-link' onClick={handleClickSignUp}>Sign up</p>\n            </div>\n            <div className='login-spacer'></div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/explore/Athletes.js",["548","549","550","551","552"],"import React, {useState, useRef} from 'react'\nimport ExploreHeader from './ExploreHeader'\nimport MainHeader from '../headers/MainHeader'\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Loading from '../misc/Loading'\nimport Paginator from '../misc/Paginator'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Athletes() {\n    const {currentUser, thisUser} = useAuth()\n    const {setMessage} = useMessage()\n    const [results, setResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const searchRef = useRef()\n    const [submittedSearch, setSubmittedSearch] = useState(null)    // athlete name\n    const [currPage, setCurrPage] = useState(1)\n\n    function handleClickUser(user) {\n        history.push(`/athletes/${user._id}`)\n    }\n\n    async function handleSubmitSearch(e) {\n        e.preventDefault()\n        if ( !searchRef.current.value) {return}\n\n        setSubmittedSearch(searchRef.current.value)\n        await searchUsers(searchRef.current.value, 1)\n        setCurrPage(1)\n    }\n\n    async function onClickPrevious() {\n        await searchUsers(submittedSearch, currPage - 1)\n        setCurrPage( curr => curr - 1 )\n    }\n\n    async function onClickNext() {\n        await searchUsers(submittedSearch, currPage + 1)\n        setCurrPage( curr => curr + 1 )\n    }\n\n    async function searchUsers(displayName, pageNum) {\n        setLoading(true)\n        setResults(null)\n\n        try {\n            const res = await api.get(`/users/search?displayName=${displayName}&page=${pageNum}&pagesize=15`)\n            setResults(res.data)\n            setSubmittedSearch(displayName)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoading(false)\n        \n    }\n\n    return (\n    <div>\n        <MainHeader />\n        <ExploreHeader subPath='/athletes' />\n        <div className='main-container'>\n            <br /><br />\n            <div className='d-flex jc-space-between ai-center'>\n                <form onSubmit={handleSubmitSearch}>\n                    <div className='search-bar' style={{backgroundColor: 'var(--bgc-light)'}}>\n                        <i className='bi bi-search' />\n                        <input ref={searchRef} type='text' placeholder='Find an athlete by name' style={{borderColor: 'transparent', width: 250}} /> \n                    </div>\n                </form>\n            </div>\n            <br />\n            <div className='float-container'>\n                <table style={{width: '100%'}} className='data-table'>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(submittedSearch && results && !loading) && results.users.map((user, index) => \n                            <tr key={index} onClick={() => handleClickUser(user)} style={{cursor: 'pointer'}}>\n                                <td >\n                                    <div className='d-flex jc-flex-start ai-center'>\n                                        <img src={user.iconURL} className='user-icon'/>\n                                        <h4 className='page-link'>{user.displayName}</h4>\n                                    </div>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                {( (submittedSearch && !loading && !results.users.length) || !submittedSearch ) &&\n                    <div className='search-message'>\n                    {(submittedSearch && !loading) ? \n                        !results.users.length && `We couldn't find any athletes matching the name \"${submittedSearch}\"`\n                        :\n                        'Use the search bar above to find athletes'\n                    }\n                    </div>\n                }\n                {loading && <Loading />}\n            </div>\n            <br />\n            {(submittedSearch && !loading) && \n                <Paginator resultsCount={results.count} currPage={currPage}\n                    onClickNext={onClickNext}\n                    onClickPrevious={onClickPrevious}\n                />\n            }\n            \n            \n        </div>\n        \n    </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/C2Results.js",["553","554"],"import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport 'moment-duration-format'\nimport './c2screenresults.css'\n\n\n\n\nexport default function C2Results(props) {\n    const [activity, setActivity] = useState(props.activity)\n\n    const thinBorder='1px solid #0e1e18'\n    const border='2px solid #0e1e18'\n    const thickBorder='5px solid #0e1e18'\n\n    useEffect(() => {\n        setActivity(props.activity)\n    }, [props.activity])\n\n    return (\n        <div style={props.style} className='c2screen-results-meta'>\n            <h5 className='screen-title fw-xl' style={{fontSize: 14}}>View Detail</h5>\n            <div className='c2screen-results' style={{ display: 'grid',  gridTemplateColumns: 'repeat(3, 1fr)'}}>\n                <h5 style={{gridColumn: '1/3', borderRight: border}} className='medium'>\n                    {moment.duration(activity.elapsedTime, 'seconds').format('hh:mm:ss')}\n                </h5>\n\n                <h5 className='medium'>\n                    {activity.strokeRate}<small className='small'>s/m</small>\n                </h5>\n\n                <h5 className='big d-inline' style={{gridColumn: '1/4', borderBottom: border, borderTop: border}}>\n                    {moment.duration(activity.currentPace, 'seconds').format('hh:mm:ss')}\n                    <small className='small'> ave / 500m </small>\n                </h5>\n\n                <h5 className='medium' style={{gridColumn: '1/3', borderRight: border}}>\n                    {activity.distance.toFixed()} <small className='small'>m</small>\n                </h5>\n\n                <h5 className='medium d-inline' className='medium' style={{gridColumn: '1/4', borderTop: thickBorder}}>\n                    {moment.duration(activity.averagePace, 'seconds').format('hh:mm:ss')}\n                    <small className='small'> ave /500m </small>\n                </h5>\n                    \n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/ActivityCard.js",["555","556","557","558","559","560","561","562"],"import React, {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport C2Results from '../misc/C2Results'\nimport C2SCreen from '../misc/C2Screen'\nimport moment from 'moment'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { useMessage } from '../../contexts/MessageContext'\nimport CommentSection from './CommentSection'\nimport C2Screen from '../misc/C2Screen'\n\nconst src = 'https://www.google.com/url?sa=i&url=https%3A%2F%2Ftextures.world%2Fmetal%2F20-brushed-metal-background-textures%2F&psig=AOvVaw3lAZ6wscWKffUDma_pV1SR&ust=1620156231759000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCOCyxLiervACFQAAAAAdAAAAABAD'\nconst srcGradient = 'http://textures.world/wp-content/uploads/2018/10/Aluminum-Brushed-Metal-Seamless-Background-Textures-1-copy-1.jpg'\nexport default function ActivityCard(props) {\n    const { thisUser } = useAuth()\n    const { setMessage } = useMessage()\n    const history = useHistory()\n\n    function handleClickSession(session) {\n        history.push(`/sessions/${session._id}`)\n    }\n\n    function handleClickUser(user) {\n        history.push(`/athletes/${user._id}`)\n    }\n\n    function handleClickActivity(activity) {\n        setMessage({title: 'The page for individual activities is currently in development', isError: true, timestamp: moment()})\n    }\n\n    return (\n        <div className='activity-card float-container'>\n            <div className='d-flex jc-flex-start ai-flex-start mb-10'>\n                {props.activity.user.iconURL && <img src={props.activity.user.iconURL} className='user-icon' />}\n                {!props.activity.user.iconURL && \n                    <div className='user-icon-default'>\n                        <i className='bi bi-person'/>\n                    </div>\n                }\n                <div>\n                    <p className='fw-m mb-2 page-link' onClick={() => handleClickUser(props.activity.user)}>\n                        {props.activity.user.displayName}\n                    </p>\n                    <p className='c-cs mb-2'>{moment(props.activity.createdAt).format('LLL')}</p>\n                    <p className='c-cs page-link mb-10' onClick={() => handleClickSession(props.activity.session)}>\n                        {props.activity.session.title}\n                    </p>\n                    <h3 className='page-link' onClick={() => handleClickActivity(props.activity)}>\n                        {props.activity.session.workoutItems[props.activity.workoutItemIndex]}\n                    </h3>\n                    \n                </div>\n            </div>\n            <div className='d-flex jc-center' >\n                <C2Results activity={props.activity} style={{width: 230}} />\n            </div>\n            <br />\n            <CommentSection parentID={props.activity._id} />\n        </div>\n    )\n}\n\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/CommentSection.js",["563","564","565","566","567"],"import React, {useState, useEffect, useRef} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ReplySection from './ReplySection'\nimport Comment from './Comment'\nimport moment from 'moment'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { useMessage } from '../../contexts/MessageContext'\nimport { formatNumber, formatUnit } from '../../scripts/Numbers'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function CommentSection(props) {\n    const { thisUser } = useAuth()\n    const { setMessage } = useMessage()\n    const history = useHistory()\n\n    const [comments, setComments] = useState([])\n    const [loadingComments, setLoadingComments] = useState(true)\n\n    const [likes, setLikes] = useState(0)\n    const [loadingLikes, setLoadingLikes] = useState()\n    const [didLike, setDidLike] = useState(false)\n\n    const [comment, setComment] = useState('')\n    const commentRef = useRef()\n\n    const [commentsHidden, setCommentsHidden] = useState(true)\n\n    useEffect(() => {\n        fetchComments()\n        fetchLikes()\n    }, [])\n\n    async function fetchComments() {\n        try {\n            const res = await api.get(`/comments/parent/${props.parentID}`)\n            setComments(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoadingComments(false)\n    }\n\n    async function fetchLikes() {\n        try {\n            const res = await api.get(`/likes/parent/${props.parentID}?user=${thisUser._id}`)\n            setLikes(res.data.count)\n            setDidLike(res.data.didLike)\n        } catch (error) {\n            console.log(error)\n        }\n        setLoadingLikes(false)\n    }\n\n    function handleClickUser(user) {\n        history.push(`/athletes/${user._id}`)\n    }\n\n    async function handleClickLike() {\n        async function submitLike() {\n            try {\n                await api.post('/likes', {user: thisUser._id, parent: props.parentID})\n                setMessage({title: 'Like submitted', isError: false, timestamp: moment()})\n                setDidLike(true)\n            } catch (error) {\n                setMessage({title: `Error submitting like. ${error.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        async function submitUnlike() {\n            try {\n                await api.delete(`/likes?user=${thisUser._id}&parent=${props.parentID}`)\n                setMessage({title: 'Unlike submitted', isError: false, timestamp: moment()})\n                setDidLike(false)\n            } catch (error) {\n                setMessage({title: `Error submitting unlike. ${error.message}`, isError: true, timestamp: moment()})\n            }\n        }\n        if (loadingLikes) {\n            return\n        } else if (didLike) { \n            await submitUnlike()\n            fetchLikes()\n        } else {\n            await submitLike()\n            fetchLikes()\n        }\n    }\n\n    async function handleClickComment() {\n        await setCommentsHidden((false))\n        commentRef.current.focus()\n    }\n\n    async function handleSubmitComment(e) {\n        e.preventDefault()\n        if (!comment.length) {return}\n        try {\n            const body = {parent: props.parentID, user: thisUser._id, message: comment}\n            await api.post('/comments', body)\n            setMessage({title: 'Your comment was saved', isError: false, timestamp: moment()})\n            fetchComments()\n            setComment('')\n        } catch (error) {\n            setMessage({title: `Error saving comment. ${error.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    return (\n        <div>\n            <div className='d-flex jc-space-between ai-center '>\n                <div className='d-flex jc-flex-start ai-center comment-icons'>\n                    <div className='d-flex jc-center ai-center mr-20' onClick={handleClickLike}>\n                        <i className='bi bi-hand-thumbs-up-fill' style={{color: didLike && 'var(--tint-color)'}}/>\n                        <h5 className=' mr-3' style={{color: didLike && 'var(--tint-color)'}}>{formatNumber(likes)}</h5>\n                        <h5 style={{color: didLike && 'var(--tint-color)'}}>{formatUnit('like', likes)}</h5>\n                    </div>\n                    <div className='d-flex jc-center ai-center' onClick={handleClickComment}>\n                        <i className='bi bi-chat-square-fill'/>\n                        <h5 className='mr-3 lc-1'>{formatNumber(comments.length)}</h5>\n                        <h5>{formatUnit('comment', comments.length)}</h5>\n                    </div> \n                </div>\n                <h5 className='c-tc fw-s action-link' onClick={() => setCommentsHidden(curr => !curr)}>\n                    {commentsHidden ? 'Show comments' : 'Hide comments'}\n                </h5>\n            </div>\n            <div style={{display: commentsHidden && 'none'}}>\n                <div style={{borderTop: '1px solid var(--bc)', marginTop: 5, paddingTop: 5}}>\n                    {comments.map( (comment, idx) => \n                        <Comment key={idx} style={{padding: '5px 10px'}}\n                            parentID={props.parentID}\n                            isReply={false}\n                            comment={comment}\n                            fetchData={fetchComments}\n                        />\n                    )}\n                </div>\n                <div className='d-flex jc-flex-start ai-flex-start' style={{ padding: 10 }} >\n                    {thisUser.iconURL && <img src={thisUser.iconURL} className='user-icon-small' />}\n                    {!thisUser.iconURL && \n                        <div className='user-icon-default'>\n                            <i className='bi bi-person' />\n                        </div>\n                    }\n                    <div className='w-100'>\n                        <div className='d-inline-flex jc-flex-start ai-center'>\n                            <p className='fw-m mr-10 mb-5'>{thisUser.displayName}</p>\n                        </div>\n                        <form onSubmit={handleSubmitComment}>\n                            <textarea ref={commentRef} value={comment} onChange={e => setComment(e.target.value)} required={true}\n                                placeholder='Write a comment' rows={2} style={{resize: 'vertical', width: '100%', minHeight: 35}}\n                                className='mb-5 bs-bb'\n                                maxLength={500}\n                            />\n                            <button className='solid-btn-secondary' type='submit' disabled={comment.length === 0}>Comment</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/scripts/Numbers.js",[],"/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/SessionCard.js",["568","569","570","571","572"],"import React, {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport C2Results from '../misc/C2Results'\nimport moment from 'moment'\nimport { useAuth } from '../../contexts/AuthContext'\nimport CommentSection from './CommentSection'\n\n\nexport default function SessionCard(props) {\n    const { thisUser } = useAuth()\n    const history = useHistory()\n\n    function handleClickSession(session) {\n        history.push(`/sessions/${session._id}`)\n    }\n\n    return (\n        <div className='activity-card float-container'>\n            <div className='d-flex jc-flex-start ai-flex-start mb-10'>\n                { props.session.club && <img src={props.session.club.iconURL} className='club-icon' />}\n                <div>\n                    <p className='fw-m mb-2' > {props.session.club.name} </p>\n                    <p className='c-cs mb-10'>{moment(props.session.startAt).format('LLL')}</p>\n            \n                    <h3 className=' page-link' onClick={() => handleClickSession(props.session)}>\n                        {props.session.title}\n                    </h3>\n                </div>\n            </div>\n            <br />\n            <CommentSection parentID={props.session._id} />\n        </div>\n    )\n}\n\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/icons/ClubIcon.js",["573","574","575"],"import React, {useState} from 'react'\nimport { useHistory } from 'react-router-dom'\n\n/*\n    - medium sized clickable club icon that routes to club page\n    - also displays club name on hover\n*/\nexport default function ClubIcon(props) {\n    const history = useHistory()\n\n    const [tooltipHidden, setTooltipHidden] = useState(true)\n\n    function handleClickIcon() {\n        history.push(`/clubs/${props.club.customURL}/general`)\n    }\n\n    return (\n        <div style={props.style} className='tooltip'>\n            <div className='tooltip-text'>\n                <p> {props.club.name}</p>\n            </div>\n            <img src={props.club.iconURL} className='club-icon-medium' onClick={handleClickIcon}\n            />\n        </div>\n\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/ReplySection.js",["576","577","578","579","580"],"import React, {useState, useEffect, useRef, useReducer} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { useMessage } from '../../contexts/MessageContext'\nimport { formatNumber, formatUnit } from '../../scripts/Numbers'\nimport Comment from './Comment'\n\nexport default function ReplySection(props) {\n    const { thisUser } = useAuth()\n    const { setMessage } = useMessage()\n    const history = useHistory()\n\n    const [repliesHidden, setRepliesHidden] = useState(true)\n\n    const [replies, setReplies] = useState([])\n\n    useEffect(() => {\n        setReplies(props.comment.hasOwnProperty('replies') ? props.comment.replies : Array(0))\n    }, [props.comment])\n\n    function handleClickViewReplies() {\n        setRepliesHidden(curr => !curr)\n    }\n\n    return (\n        <div>\n            <div className='d-flex jc-flex-start ai-center' onClick={handleClickViewReplies}\n                style={{display: replies.length === 0 && 'none', marginBottom: replies.length === 0 ? 0: 10}}\n            >\n                <h5 className='action-link fw-s'>\n                    {repliesHidden ? 'View':'Hide'} {formatUnit('reply', replies.length)} ( {formatNumber(replies.length)} )\n                    <i className={`bi bi-chevron-${repliesHidden ? 'down' : 'up'}`} style={{marginLeft: 5}} />\n                </h5>\n            </div>\n            <div style={{display: repliesHidden && 'none'}}>\n                {replies.map( (reply, idx) => \n                    <div key={idx}>\n                        <Comment style={{padding: '5px 0px'}}\n                            parentID={props.comment._id} \n                            comment={reply} \n                            fetchData={props.fetchData} \n                            isReply={true}\n                        />\n                    </div>\n                    \n                )}\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/Comment.js",["581","582","583","584"],"import React, {useState, useEffect, useRef} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ReplySection from './ReplySection'\nimport moment from 'moment'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { useMessage } from '../../contexts/MessageContext'\nimport { formatNumber, formatUnit } from '../../scripts/Numbers'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Comment(props) {\n    const { thisUser } = useAuth()\n    const { setMessage } = useMessage()\n    const history = useHistory()\n\n    const [comment, setComment] = useState(props.comment)\n\n    const [isReplying, setIsReplying] = useState(false)\n    const [reply, setReply] = useState('')\n    const replyRef = useRef()\n\n    useEffect(() => {\n        setComment(props.comment)\n    }, [props.comment])\n\n    function handleClickUser(user) {\n        history.push(`/athletes/${user._id}`)\n    }\n\n    async function handleClickReply() {\n        await setIsReplying(true)\n        replyRef.current.focus()\n    }\n\n    function handleClickCancelReply() {\n        setIsReplying(false)\n        setReply('')\n    }\n\n    async function handleSubmitReply(e) {\n        e.preventDefault()\n        const pID = props.isReply ? props.parentID : comment._id\n        try {\n            const body = {parent: pID, user: thisUser._id, message: reply}\n            await api.post('/comments/reply', body)\n            setMessage({title: 'Reply submitted', isError: false, timestamp: moment()})\n            setReply('')\n            setIsReplying(false)\n            props.fetchData()\n        } catch (error) {\n            setMessage({title: `Error submitting reply. ${error.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    async function handleDeleteComment() {\n        if (!window.confirm('Are you sure you want to delete this message?')) { return }\n        const url = props.isReply ? \n            `/comments/reply?reply=${comment._id}&parent=${props.parentID}&user=${thisUser._id}`\n            :\n            `/comments?comment=${comment._id}&user=${thisUser._id}`\n        try {\n            await api.delete(url)\n            setMessage({title: 'Comment deleted', isError: false, timestamp: moment()})\n            props.fetchData()\n        } catch (error) {\n            setMessage({title: `Error deleting comment. ${error.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    return (\n        <div style={props.style}>\n            <div className='d-flex jc-flex-start'>\n                { (!comment.removed && comment.user.iconURL) && \n                    <img src={comment.user.iconURL} className='user-icon-small' />\n                }\n                {(comment.removed || !comment.user.iconURL) && \n                    <div className='user-icon-default-small'>\n                        <i className='bi bi-person' />\n                    </div>\n                }\n                <div className='w-100'>\n                    {comment.removed ?\n                        <div className='d-inline-flex jc-flex-start ai-center mb-7'>\n                            <h6 className='fw-m mr-7'>[deleted]</h6>\n                            <h6 className='c-cs'>{moment(comment.createdAt).fromNow()}</h6>\n                        </div>\n                        :\n                        <div className='d-inline-flex jc-flex-start ai-center mb-7'>\n                            <h6 className='fw-m mr-7 page-link' onClick={() => handleClickUser(comment.user)}>\n                                {comment.user.displayName} \n                            </h6>\n                            <h6 className='c-cs'>{moment(comment.createdAt).fromNow()}</h6>\n                        </div>\n                    }\n                    {!comment.removed && \n                        <p className='mb-5'>{comment.message}</p>\n                    }\n                    \n                    <div className='reply-icons'>\n                        <div onClick={handleClickReply}>\n                            <h5>Reply</h5>\n                        </div>\n                        {(thisUser._id === comment.user._id && !comment.removed) && \n                            <div onClick={handleDeleteComment}>\n                                <h5>Delete</h5>\n                            </div>\n                        }\n                        \n                    </div>\n                    <div style={{display: !isReplying && 'none'}}>\n                        <div className='d-flex jc-flex-start ai-flex-start w-100' style={{marginTop: 10, marginBottom: 12}} >\n                            {thisUser.iconURL && <img src={thisUser.iconURL} className='user-icon-small' />}\n                            {!thisUser.iconURL && \n                                <div className='user-icon-default'>\n                                    <i className='bi bi-person' />\n                                </div>\n                            }\n                            <div className='w-100'>\n                                <p className='fw-m mr-10 mb-5'>{thisUser.displayName}</p>\n                                <form onSubmit={handleSubmitReply}>\n                                    <textarea ref={replyRef} value={reply} onChange={e => setReply(e.target.value)} required={true}\n                                        placeholder='Write a reply' rows={2} style={{resize: 'vertical', minHeight: 35}}\n                                        className='mb-5 w-100 bs-bb'\n                                        maxLength={500}\n                                    />\n                                    <div className='d-flex jc-space-between ai-center'>\n                                        <button className='solid-btn-secondary' type='submit' \n                                            disabled={reply.length === 0} onClick={handleSubmitReply}\n                                        >\n                                            Reply\n                                        </button>\n                                        <button className='clear-btn-cancel' type='button' onClick={handleClickCancelReply}>Cancel</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    {!props.isReply && <ReplySection comment={comment} fetchData={props.fetchData}/>}\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/AdminCard.js",["585","586","587"],"import React, {useState} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\n\nexport default function AdminCard(props) {\n    const history = useHistory()\n    const {handleClickMakeOwner, handleClickRevokeAdmin, handleClickRemove} = props.membershipActions\n\n    const actionButtonsVisible = props.myMembership.role >= 1 && props.member.role !== 2\n    const transferOwnershipButtonVisible = props.myMembership.role === 2 && props.member.role !== 2\n\n    return (\n        <div className='d-flex jc-space-between ai-center member-card'> \n            <div className='d-flex jc-flex-start ai-center'>\n                {props.member.iconURL ? \n                    <img className='user-icon d-inline' src={props.member.iconURL} />\n                    :\n                    <div className='user-icon-default'>\n                        <i className='bi bi-person' />\n                    </div>\n                }\n                <h4 className='page-link' onClick={() => history.push(`/athletes/${props.member._id}`)}>\n                    {props.member.displayName}\n                </h4>\n            </div>\n            <div>\n                {actionButtonsVisible && \n                    <div className='action-buttons d-flex jc-flex-end ai-center'>\n                        {transferOwnershipButtonVisible && \n                            <button className='clear-btn-secondary mr-10' onClick={() => handleClickMakeOwner(props.member._id)}>\n                                Transfer Ownership\n                            </button>\n                        }\n                        <button className='clear-btn-secondary mr-10' onClick={() => handleClickRevokeAdmin(props.member._id)}>\n                            Revoke Admin\n                        </button>\n                        <button className='error-btn-secondary' onClick={() => handleClickRemove(props.member._id)}>\n                            Remove\n                        </button>\n                    </div>\n                }\n                {props.member.role === 2 && <h4 className='c-cs'>Owner</h4>}\n            </div>\n            \n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/PendingMemberCard.js",["588"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default function PendingMemberCard(props) {\n    const history = useHistory()\n    const {handleClickAcceptRequest, handleClickDeclineRequest} = props.membershipActions\n\n    const actionButtonsVisible = props.myMembership.role >= 1 && props.member.role !== 2\n\n    return (\n        <div className='d-flex ai-center jc-space-between member-card'>\n            <div className='d-flex jc-flex-start ai-center'> \n                {props.member.iconURL ? \n                    <img className='user-icon d-inline' src={props.member.iconURL} />\n                    :\n                    <div className='user-icon-default'>\n                        <i className='bi bi-person' />\n                    </div>\n                }\n                <h4 className='page-link' onClick={() => history.push(`/athletes/${props.member._id}`)}>\n                    {props.member.displayName}\n                </h4>\n            </div>\n            {actionButtonsVisible && \n                <div className='action-buttons d-flex jc-flex-end ai-center'>\n                    <button className='solid-btn-secondary mr-20' onClick={() => handleClickAcceptRequest(props.member._id)}>\n                        Accept\n                    </button>\n                    <button className='error-btn-secondary' onClick={() => handleClickDeclineRequest(props.member._id)}>\n                        Decline\n                    </button>\n                </div>\n            }\n            \n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/MemberCard.js",["589"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default function MemberCard(props) {\n    const history = useHistory()\n    const {handleClickMakeAdmin, handleClickRemove} = props.membershipActions\n\n    const actionButtonsVisible = props.myMembership.role >= 1 && props.member.role !== 2\n\n    return (\n        <div className='d-flex ai-center jc-space-between member-card'>\n            <div className='d-flex jc-flex-start ai-center'> \n                {props.member.iconURL ? \n                    <img className='user-icon d-inline' src={props.member.iconURL} />\n                    :\n                    <div className='user-icon-default'>\n                        <i className='bi bi-person' />\n                    </div>\n                }\n                <h4 className='page-link' onClick={() => history.push(`/athletes/${props.member._id}`)}>\n                    {props.member.displayName}\n                </h4>\n            </div>\n            {actionButtonsVisible && \n                <div className='action-buttons d-flex jc-flex-end ai-center'>\n                    <button className='solid-btn-secondary mr-20' onClick={() => handleClickMakeAdmin(props.member._id)}>\n                        Make Admin\n                    </button>\n                    <button className='error-btn-secondary' onClick={() => handleClickRemove(props.member._id)}>\n                        Remove\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/club/EditClub.js",["590","591","592","593","594","595","596","597","598","599"],"import React, {useEffect, useState} from 'react'\nimport MainHeader from '../headers/MainHeader'\nimport SubHeader from '../headers/SubHeader'\nimport {useMessage} from '../../contexts/MessageContext'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {storage} from '../../firebase'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Loading from '../misc/Loading'\nimport {useHistory, useParams} from 'react-router-dom'\nimport Confirmation from '../misc/Confirmation'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nconst srcBannerDefault = 'https://styles.redditmedia.com/t5_2qljq/styles/bannerBackgroundImage_zfhrcn1w7u911.jpg?width=4000&format=pjpg&s=88d594d779756f76ef8a5e0073e1d2959cd501bf'\n\nexport default function EditClub() {\n    const {setMessage} = useMessage()\n    const {thisUser} = useAuth()\n    const {clubURL} = useParams()\n    const history = useHistory()\n\n    const [club, setClub] = useState()\n    const [myMembership, setMyMembership] = useState()\n    const [loading, setLoading] = useState(true)\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [isPrivate, setIsPrivate] = useState(false)\n    const [iconURL, setIconURL] = useState()\n    const [bannerURL, setBannerURL] = useState() \n\n    const [hasModifications, setHasModifications] = useState(false)\n    const [nameModified, setNameModified] = useState(false)\n    const [descriptionModified, setDescriptionModified] = useState(false)\n    const [isPrivateModified, setIsPrivateModified] = useState(false)\n    const [iconURLModified, setIconURLModified] = useState(false)\n    const [bannerURLModified, setBannerURLModified] = useState(false)\n\n    const [bannerFile, setBannerFile] = useState()\n    const [iconFile, setIconFile] = useState()\n\n    const inputStyle = {\n        width: '400px'\n    }\n\n    const colorYellow = 'var(--color-yellow-text)'\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const res = await api.get(`/clubs/customURL/${clubURL}`)\n                setClub(res.data)\n                const result = await api.get(`/clubmemberships/ismember?user=${thisUser._id}&club=${res.data._id}`)\n                setMyMembership(result.data)\n\n                if (result.data.role < 1 || !result.data.isMember) {\n                    setMessage({title: 'You do not have permission to edit this club', isError: true, timestamp: moment()})\n                    history.push('/dashboard')\n                    return\n                }\n            } catch(error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        restoreCurrentClubInformation()\n    }, [club])\n\n    useEffect(() => {\n        if (loading) {return}\n        setNameModified(name !== club.name)\n        setDescriptionModified(description !== club.description)\n        setIsPrivateModified(isPrivate !== club.isPrivate)\n        setIconURLModified(iconURL !== club.iconURL)\n        setBannerURLModified(bannerURL!==club.bannerURL)\n    }, [name, description, isPrivate, iconURL, bannerURL])\n\n    useEffect(() => {\n        if (loading) {return}\n        setHasModifications(\n            nameModified || descriptionModified || isPrivateModified || iconURLModified || bannerURLModified\n        )\n    }, [nameModified, descriptionModified, isPrivateModified, iconURLModified, bannerURLModified])\n\n    function restoreCurrentClubInformation() {\n        if (!club) {return}\n        setName(club.name)\n        setDescription(club.description)\n        setIsPrivate(club.isPrivate)\n        setBannerURL(club.bannerURL)\n        setIconURL(club.iconURL)\n\n        setIconFile(null)\n        setBannerFile(null)\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        let modifiedClub = {}\n        if (iconURLModified) {\n            try {\n                await storage.ref('clubicons').child(clubURL).put(iconFile);\n                let newIconURL = await storage.ref('clubicons').child(clubURL).getDownloadURL()\n                modifiedClub.iconURL = newIconURL\n            } catch(error) { console.log(error.message) }\n        }\n        \n        if (bannerURLModified) {\n            try {\n                await storage.ref('clubbanners').child(clubURL).put(bannerFile);\n                let newBannerURL = await storage.ref('clubbanners').child(clubURL).getDownloadURL()\n                modifiedClub.bannerURL = newBannerURL\n            } catch(error) { console.log(error) }\n        }\n\n        if (nameModified) {modifiedClub.name = name}\n        if (descriptionModified) {modifiedClub.description = description}\n        if (isPrivateModified) {modifiedClub.isPrivate = isPrivate}\n\n        try {\n            const res = await api.patch(`/clubs?club=${club._id}&requestingUser=${thisUser._id}`, modifiedClub)\n            setMessage({title: 'Club changes saved', isError: false, timestamp: moment()})\n            history.push(`/clubs/${clubURL}/general`)\n        } catch (error) {\n            setMessage({title: `Error saving changes. ${error.response.data.message}`, isError: true, timestamp: moment()})\n        }\n    }\n\n    function handleClickCancel() {\n        restoreCurrentClubInformation()\n        setMessage({title: 'Restored current club information', isError: false, timestamp: moment()})\n    }\n\n    function handleClickUseDefaultBanner() {\n        setBannerURL(srcBannerDefault)\n        setBannerFile(null)\n        setMessage({title: 'Set default banner', isError: false, timestamp: moment()})\n    }\n\n    useEffect( () => {\n        if (!iconFile) {return}\n        setIconURL(URL.createObjectURL(iconFile))\n    }, [iconFile])\n\n    useEffect(() => {\n        if (!bannerFile) {return}\n        setBannerURL(URL.createObjectURL(bannerFile))\n    }, [bannerFile])\n\n    return (\n        <div>\n            <MainHeader />\n            <SubHeader title='Edit Club' />\n            <br /><br />\n            {loading ? <Loading /> : (!loading && !club) ? <h4>We couldn't find a club at that link</h4> :\n            <div className='main-container' style={{marginBottom: 100}}>\n                <div className='float-container'>\n                    <div className='d-flex jc-space-between ai-center'\n                        style={{\n                            backgroundColor: 'var(--color-translucent-yellow)', \n                            padding: hasModifications ? 15 : 0, display: !hasModifications && 'none'}}  \n                    >\n                        <h4 style={{color:colorYellow}}>\n                            Club Information Modified\n                        </h4>\n                        <div>\n                            <button className='clear-btn-cancel mr-10' style={{color: colorYellow}} onClick={handleClickCancel}>\n                                Cancel\n                            </button>\n                            <button className='clear-btn-secondary' style={{color: colorYellow, borderColor: colorYellow}}\n                                onClick={handleSubmit}\n                            >\n                                Save Changes\n                            </button>\n                        </div>\n                    </div>\n                    <form className='create-club' onSubmit={handleSubmit} style={{padding: '30px 30px'}} id='edit-club'>\n                        <label>\n                            Club Name \n                            <h6 className='modified-label' style={{display: !nameModified && 'none'}}>Modified</h6>\n                            <br />\n                            <input style={inputStyle} type='text' value={name} onChange={e => setName(e.target.value)}/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Club Banner \n                            <h6 className='modified-label' style={{display: !bannerURLModified && 'none'}}>\n                                Modified\n                            </h6>\n                            <br />\n                            <input onChange={e => setBannerFile(e.target.files[0])} type='file' accept='image/*'\n                                style={{display: 'none'}}\n                            />\n                             <div className='banner-image-input'>\n                                 <img src={bannerURL ? bannerURL : srcBannerDefault} />\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <button className='clear-btn-secondary' style={{float: 'right', marginTop: 5}} type='button'\n                            onClick={handleClickUseDefaultBanner} \n                        >\n                            Use default banner\n                        </button>\n                        <br /><br />\n                        <label >\n                            Club Icon\n                            <h6 className='modified-label' style={{display: !iconURLModified && 'none'}}>\n                                Modified\n                            </h6>\n                            <br />\n                            <input onChange={e => setIconFile(e.target.files[0])} type='file' accept='image/*' \n                                style={{display: 'none'}}\n                            />\n                            <div className='icon-image-input'>\n                                <img src={iconURL} />\n                                <i className='bi bi-upload' style={{position: 'absolute'}} />\n                            </div>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Description\n                            <h6 className='modified-label' style={{display: !descriptionModified && 'none'}}>\n                                Modified\n                            </h6>\n                            <br />\n                            <textarea \n                                style={{width: '400px', resize: 'none'}} maxLength='200' value={description} \n                                onChange={e => setDescription(e.target.value)} \n                                rows='5'\n                            />\n                        </label>\n                        <br /><br />\n                        <label>\n                            Privacy \n                            <h6 className='modified-label' style={{display: !isPrivateModified && 'none'}}>\n                                Modified\n                            </h6>\n                            <br />\n                            <input type='checkbox' checked={isPrivate} onChange={e => setIsPrivate(e.target.checked)} className='mr-10'/>\n                            <p className='d-inline mr-5'>Make your club invite only</p>\n                            <i className={`bi bi-${isPrivate ? 'lock' : 'unlock'}-fill c-cs`} style={{fontSize: 20}}/>\n                        </label>\n                    </form>\n                </div>\n                \n            </div>\n            }\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/training/Calendar.js",["600"],"import React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport moment from 'moment'\nimport axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Calendar(props) {\n    const [currMoment, setCurrMoment] = useState(moment())\n    const [calendarDays, setCalendarDays] = useState([])\n    const [sessions, setSessions] = useState([])\n    const [data, setData] = useState([])\n\n    const {thisUser} = useAuth()\n\n    useEffect(() => {\n        fetchData()\n    }, [currMoment])\n\n    useEffect( () => {\n        // Get days in this month\n        const val = currMoment.clone()\n        const startDay = val.clone().startOf('month').startOf('week')\n        const endDay = val.clone().endOf('month').endOf('week')\n        const currDay = startDay.clone().subtract(1,'day')\n        let days = []\n        while (currDay.isBefore(endDay, 'day')) {\n            days.push(currDay.add(1, 'day').clone())\n        }\n        setCalendarDays(days)\n\n        // map sessionsData to sessions arr\n        const sessions = Array(days.length).fill([])\n\n        if (data.sessions && data.fetchedMoment.isSame(currMoment, 'month')) {\n            data.sessions.forEach(session => {\n                const idx = moment(session.startAt).diff(startDay, 'days')\n                // check if we have this months sessions\n                if (idx >= 0 && idx < days.length) {\n                    sessions[idx] = [...sessions[idx], session]\n                }\n            })\n        }\n        \n        setSessions(sessions)\n    }, [currMoment, data] )\n\n    async function fetchData() {\n        const query = {\n            year: currMoment.year(),\n            month: currMoment.month(),\n            sparse: 1\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        try {\n            const res = await api.get(`/sessions/user/${thisUser._id}?${queryString}`)\n            setData({\n                sessions: res.data,\n                fetchedMoment: currMoment.clone()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    function handleClickPrevious() {\n        /* subtract 1 month */\n        setCurrMoment(currMoment.subtract(1, 'month').clone())\n    }\n\n    function handleClickNext() {\n        /* add 1 month */\n        setCurrMoment(currMoment.add(1, 'month').clone())\n    }\n\n    function handleClickToday() {\n        /* set curr moment to today */\n        setCurrMoment(moment())\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/calendar' style={{position: 'static'}} />\n            <br />\n            <div className='main-container' style={{minHeight: '100vh'}}>\n                <div className='d-flex jc-space-between ai-center' \n                    style={{padding: '20px 0px' , position: 'sticky', top: 0, backgroundColor: 'var(--bgc)'}} \n                >\n                    <div className='d-flex jc-flex-start ai-center'>\n                        <h3 className='mr-10'>{currMoment.format('YYYY')}</h3>\n\n                        <div onClick={handleClickPrevious} className='icon-btn' >\n                            <i className='bi bi-chevron-left' />\n                        </div>\n                        <h3 style={{width: 120, textAlign: 'center'}}>{currMoment.format('MMMM')}</h3>\n                        <div onClick={handleClickNext} className='icon-btn' >\n                            <i className='bi bi-chevron-right' />\n                        </div>\n                    </div>\n                    <button className='clear-btn-secondary' onClick={handleClickToday}>Today</button>\n                    \n                    \n                </div>\n                <div className='float-container'>\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', padding: '10px 0px' }}\n                    >\n                        {['sun','mon','tue','wed','thu','fri','sat'].map((day, id) => (\n                            <h6 key={id} className='tt-u c-cs'style={{ textAlign: 'center'}}> {day} </h6>\n                        ))}\n                    </div>\n                    <div style={{display: 'grid',gridTemplateColumns:'repeat(7,1fr)',gridAutoRows: 110}} className='calendar'>\n                        {calendarDays.map((day, index) => (\n                            <div key={index} \n                                style={{\n                                    padding: '0px 0px', \n                                    backgroundColor: day.isSame(moment(), 'day') && 'var(--tint-color-translucent)',\n                                    borderTop: '1px solid var(--bgc-hover)',\n                                    overflow: 'scroll'\n                                }}\n                            >\n                                <h6 style={{padding: '2px 5px',marginBottom: '2px'}}>\n                                    {day.format('D')}\n                                </h6>\n                                {sessions[index] && sessions[index].map( (session, i) => (\n                                    <Link to={`/sessions/${session._id}`} style={{textDecoration: 'none'}} key={i}>\n                                        <h5 className='page-link' \n                                            style={{\n                                                borderLeft: '2px solid var(--tint-color)',\n                                                padding: '5px 5px',\n                                                marginTop: '4px',\n                                                fontWeight: '400', fontSize: '12px'\n                                        }}>\n                                            {session.title}\n                                            <p style={{fontSize: '12px', display: 'none'}}>{moment(session.startAt).format('LT')}</p>\n                                            \n                                        </h5>\n                                    </Link>\n                                    \n                                ))}\n                                \n                            </div>\n                        ))}\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        \n    )\n}\n/*\nimport React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useAuth} from '../../contexts/AuthContext'\nimport MainHeader from '../headers/MainHeader'\nimport TrainingHeader from './TrainingHeader'\nimport moment from 'moment'\nimport axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function Calendar(props) {\n    const [currMoment, setCurrMoment] = useState(moment())\n    const [calendarDays, setCalendarDays] = useState([])\n    const [sessions, setSessions] = useState([])\n    const [data, setData] = useState([])\n\n    const {thisUser} = useAuth()\n\n    useEffect(() => {\n        fetchData()\n    }, [currMoment])\n\n    useEffect( () => {\n        // Get days in this month\n        const val = currMoment.clone()\n        const startDay = val.clone().startOf('month').startOf('week')\n        const endDay = val.clone().endOf('month').endOf('week')\n        const currDay = startDay.clone().subtract(1,'day')\n        let days = []\n        while (currDay.isBefore(endDay, 'day')) {\n            days.push(currDay.add(1, 'day').clone())\n        }\n        setCalendarDays(days)\n\n        // map sessionsData to sessions arr\n        const sessions = Array(days.length).fill([])\n\n        if (data.sessions && data.fetchedMoment.isSame(currMoment, 'month')) {\n            data.sessions.forEach(session => {\n                const idx = moment(session.startAt).diff(startDay, 'days')\n                // check if we have this months sessions\n                if (idx >= 0 && idx < days.length) {\n                    sessions[idx] = [...sessions[idx], session]\n                }\n            })\n        }\n        \n        setSessions(sessions)\n    }, [currMoment, data] )\n\n    async function fetchData() {\n        const query = {\n            year: currMoment.year(),\n            month: currMoment.month(),\n            sparse: 1\n        }\n        const queryString = Object.keys(query).map(key => key + '=' + query[key]).join('&')\n        try {\n            const res = await api.get(`/sessions/user/${thisUser._id}?${queryString}`)\n            setData({\n                sessions: res.data,\n                fetchedMoment: currMoment.clone()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <MainHeader />\n            <TrainingHeader subPath='/calendar' style={{position: 'static'}} />\n            <br /><br />\n            <div className='main-container'>\n\n                <div className='d-flex jc-space-between ai-center' \n                    style={{padding: '20px 0px' , position: 'sticky', top: 0, backgroundColor: 'var(--bgc)'}} \n                >\n                    <h3>{currMoment.format('YYYY')}</h3>\n\n                    <div onClick={() => setCurrMoment(currMoment.subtract(1, 'month').clone())} className='clear-icon-btn' >\n                        <i className='bi bi-chevron-left' />\n                    </div>\n                    \n                    <h3 style={{width: '100px', textAlign: 'center'}}>{currMoment.format('MMMM')}</h3>\n\n                    <div onClick={() => setCurrMoment(currMoment.add(1, 'month').clone())}\n                        style={{width: '30px', height: '30px', cursor: 'pointer'}} \n                        className='d-flex jc-center ai-center'\n                    >\n                        <i className='bi bi-chevron-right' />\n                    </div>\n                    \n                </div>\n                <div className='float-container'>\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', padding: '10px 0px' }}\n                    >\n                        {['sun','mon','tue','wed','thu','fri','sat'].map((day, id) => (\n                            <h6 key={id} className='tt-u c-cs'style={{ textAlign: 'center'}}> {day} </h6>\n                        ))}\n                    </div>\n                    <div style={{display: 'grid',gridTemplateColumns:'repeat(7,1fr)',gridAutoRows: '100px'}} className='calendar'>\n                        {calendarDays.map((day, index) => (\n                            <div key={index} \n                                style={{\n                                    padding: '0px 0px', \n                                    backgroundColor: day.isSame(moment(), 'day') && 'var(--tint-color-translucent)',\n                                    borderTop: '1px solid var(--bgc-hover)',\n                                    overflow: 'scroll'\n                                }}\n                            >\n                                <h6 style={{padding: '2px 5px',marginBottom: '2px'}}>\n                                    {day.format('D')}\n                                </h6>\n                                {sessions[index] && sessions[index].map( (session, i) => (\n                                    <Link to={`/sessions/${session._id}`} style={{textDecoration: 'none'}} key={i}>\n                                        <h5 className='page-link' \n                                            style={{\n                                                borderLeft: '1px solid var(--tint-color)',\n                                                padding: '5px 5px',\n                                                marginTop: '4px',\n                                                fontWeight: '400', fontSize: '12px'\n                                        }}>\n                                            {session.title}\n                                            <p style={{fontSize: '12px', display: 'none'}}>{moment(session.startAt).format('LT')}</p>\n                                            \n                                        </h5>\n                                    </Link>\n                                    \n                                ))}\n                                \n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div style={{height: 200}} />\n            </div>\n        </div>\n        \n    )\n}\n\n*/","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/CustomGroupedBar.js",["601"],"import React, {useEffect, useState} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport {useTheme} from '../../contexts/ThemeContext'\n\n/*\n    - Custom Bar Chart\n    - Height -> from props\n    - width -> fill width of container\n*/\n\nexport default function CustomGroupedBar(props) {\n    const [data, setData] = useState(props.data)\n    const {themeColor} = useTheme()\n    const [localTheme, setLocalTheme] = useState(themeColor)\n\n    useEffect(() => {\n        setData(props.data)\n    }, [props])\n\n\n    // Force rerenders on color theme change\n    useEffect(() => {\n        setLocalTheme(themeColor)\n    }, [themeColor])\n\n    return (\n        <div style={{height: props.height}}>\n            <Bar\n                data={{\n                    labels: data.labels,\n                    datasets: data.datasets.map((set, idx) => ({\n                        label: set.label,\n                        data: set.data,\n                        borderWidth: 1,\n                        backgroundColor: getComputedStyle(document.documentElement)\n                        .getPropertyValue(set.backgroundColor),\n                        borderColor: getComputedStyle(document.documentElement)\n                            .getPropertyValue(set.borderColor),\n                        hoverBackgroundColor: getComputedStyle(document.documentElement)\n                            .getPropertyValue(set.borderColor),\n                        hoverBorderColor: getComputedStyle(document.documentElement)\n                        .getPropertyValue(set.borderColor)\n\n                    }))\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    title: {\n                        display: false,\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false,\n                                drawBorder: false\n                            },\n                            ticks: {\n                                autoSkip: false,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                fontFamily: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--font-family'),\n                                maxRotation: 0,\n                                minRotation: 0,\n                                callback: function(value, index, values) {\n                                    if (index % props.labelFreq === 0 || index === values.length - 1) {\n                                        if (value.length > props.maxLabelLength) {\n                                            return value.substr(0, props.maxLabelLength)\n                                        }\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: false\n                            },\n                            ticks: {\n                                display: props.showYTicks,\n                                fontColor: getComputedStyle(document.documentElement)\n                                .getPropertyValue('--color-secondary'),\n                                callback: function (value, index, values) {\n                                    if (index === 0 || index === values.length - 1 || index === Math.floor(values.length/2)) {\n                                        return value\n                                    } else {\n                                        return ''\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/chat/Chat.js",["602","603","604","605","606","607"],"import React, {useState, useEffect, useRef} from 'react'\nimport io from 'socket.io-client'\nimport moment from 'moment'\nimport {useAuth} from '../../contexts/AuthContext'\nimport {useMessage} from '../../contexts/MessageContext'\n\n\n\nexport default function Chat(props) {\n    const {thisUser} = useAuth()\n\n    const socket = useRef()\n\n    const [selectedChannel, setSelectedChannel] = useState('main')\n    const [channels, setChannels] = useState({ \n        main : {name: 'Group Chat', isDirect: false, channelKey: 'main', recipient: 'everyone', hasUnreadMessages: false}\n    })\n    \n    const [messages, setMessages] = useState([ {\n            sender: { displayName: 'Team Ergsync', iconURL: '/images/logo-0.png' },\n            message: 'Please note that chat messages are not saved.',\n            room: props.roomID, channelKey: 'main',\n            timestamp: moment().toDate()\n    } ])\n    const [users, setUsers] = useState([])\n\n    const [chatMessage, setChatMessage] = useState('')\n    const [selectedTab, setSelectedTab] = useState(0) // 0: messages, 1: participants\n    const [channelsHidden, setChannelsHidden] = useState(true)\n\n    const messagesHeight = `calc(${props.height} - 45px)`\n\n    useEffect(() => {\n\n        socket.current = io(process.env.REACT_APP_API_BASE_URL,  { transports : ['websocket'] })\n        socket.current.on('connect', () => {\n            joinMainRoom()\n        })\n        socket.current.on('update_room_members', data => {\n            setUsers(data)\n            scrollToBottom()\n        })\n        socket.current.on('receive_message', data => {\n            let canAccessMessage = false\n            if (data.channelKey === 'main') {\n                canAccessMessage = true\n                setMessages(curr => [...curr, data])\n            } else if ( [data.sender._id, data.recipient._id].includes(thisUser._id) ) {\n                canAccessMessage = true\n                setMessages(curr => [...curr, data])\n                const notSelf = data.sender._id === thisUser._id ? \n                    data.recipient : data.sender\n                setChannels(curr => ({\n                    ...curr, \n                    [data.channelKey] : {\n                        name: notSelf.displayName,\n                        isDirect: true,\n                        channelKey: data.channelKey,\n                        recipient: notSelf, hasUnreadMessages: true\n                    }\n                }))\n            }\n            scrollToBottom()\n        })\n\n        socket.current.connect()\n        return () => {\n            socket.current.disconnect()\n        }\n    }, [])\n\n    useEffect(() => {\n        setChannels(curr => ({\n            ...curr, \n            [selectedChannel]: {\n                ...curr[selectedChannel],\n                hasUnreadMessages: false\n            }\n        }))\n    }, [selectedChannel, channelsHidden])\n\n    function joinMainRoom() {\n        const data = {\n            user: {\n                displayName: thisUser.displayName,\n                iconURL: thisUser.iconURL,\n                _id: thisUser._id\n            },\n            room: props.roomID,\n        }\n        socket.current.emit('join_room', data)\n    }\n\n    function handleSubmitMessage(e) {\n        e.preventDefault()\n        function sendMessage() {\n            const data = {\n                sender: {\n                    displayName: thisUser.displayName,\n                    iconURL: thisUser.iconURL,\n                    _id: thisUser._id\n                },\n                recipient: channels[selectedChannel].recipient,\n                room: props.roomID,\n                channelKey: selectedChannel,\n                message: chatMessage,\n                timestamp: moment().toDate(),\n            }\n            socket.current.emit('send_message', data)\n        }\n        e.preventDefault()\n        if (!chatMessage.length) { return }\n        sendMessage()\n        setChatMessage('')\n    }\n\n    function scrollToBottom() {\n        const container = document.getElementById('messages-container')\n        if (!container) {return}\n        container.scrollTop = container.scrollHeight\n    }\n\n    function handleClickChannel( isMainChannel, channel) {\n        setSelectedChannel(isMainChannel ? 'main': channel.channelKey)\n        setChannelsHidden(true)\n        setSelectedTab(0)\n    }\n\n    function handleClickNewDirectMessage() {\n        setChannelsHidden(true)\n        setSelectedTab(1)\n    }\n\n    async function handleClickDirectMessage(recipient) {\n        const channelKey = [thisUser._id, recipient._id].sort().join('')\n        if (!channels.hasOwnProperty(channelKey)) {\n            await setChannels(curr => ({\n                ...curr, \n                [ channelKey ] : {\n                    name: recipient.displayName,\n                    isDirect: true,\n                    channelKey: channelKey,\n                    recipient: recipient\n                }\n            }))\n        }\n        setSelectedChannel(channelKey)\n        setSelectedTab(0)\n    }\n\n    return (\n        <div className='chat-container'>\n            <div className='channels-wrapper' style={{width: channelsHidden && 0}}>\n                <div className='channels-container' style={{height: props.height}}>\n                    <div className='d-flex jc-space-between ai-center mb-10'>\n                        <h4 className='fw-m'>Channels</h4>\n                        <i className='bi bi-x icon-btn-circle' onClick={() => setChannelsHidden(true)} />\n                    </div>\n                    <div style={{paddingLeft: 0}}>\n                        <h6 className='tt-u fw-m mb-5'>main chat</h6>\n                        <div className='channel-option' onClick={() => handleClickChannel(true)}>\n                            <p>Group Chat</p>\n                            {channels.main.hasUnreadMessages && <i className='bi bi-envelope-fill' />}\n                        </div>\n                        <br />\n                        <h6 className='tt-u fw-m mb-5'>direct messages</h6>\n                        <div className='channel-option' onClick={handleClickNewDirectMessage}>\n                            <p className='fw-m'>+ New direct message</p>\n                        </div>\n                        {Object.values(channels).filter(c => c.isDirect).map( (channel, idx) => \n                            <div key={idx} className='channel-option' onClick={() => handleClickChannel(false, channel)}>\n                                <p>{channel.name}</p>\n                                {channel.hasUnreadMessages && <i className='bi bi-envelope-fill' />}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div className='chat-header d-flex jc-space-between ai-center'>\n                <div className='d-flex jc-flex-start ai-center' \n                    onClick={() => setChannelsHidden(curr => !curr)} style={{cursor: 'pointer'}}\n                >\n                    <i className='bi bi-list mr-5 toggle-menu-icon'/>\n                    {channels[selectedChannel].isDirect ?\n                        <div className='d-flex jc-flex-start ai-center'>\n                            <h4 className='c-cs mr-5'>@</h4>\n                            <h4 className='fw-m'>{channels[selectedChannel].name}</h4>\n                        </div>\n                        :\n                        <h4 className='fw-m'>{channels[selectedChannel].name}</h4>\n                    }\n                </div>\n                <div className='d-flex jc-flex-end ai-center'>\n                    {!channels[selectedChannel].isDirect &&\n                    [{title: 'Chat', icon: 'chat-square-dots-fill'}, {title: 'Members', icon: 'people-fill'}].map( (tab, idx) =>\n                        <div className={`icon-tab-option${selectedTab === idx ? '-selected':''} tooltip`}\n                            onClick={() => setSelectedTab(idx)} key={idx}\n                        >\n                            <i className='bi bi-chat-square-dots-fill' className={`bi bi-${tab.icon}`}/>\n                            <div className='tooltip-text'><h6>{tab.title}</h6></div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            \n            {selectedTab === 0 ? \n                <div>\n                    <div className='messages-container' id='messages-container' style={{height: messagesHeight}} >\n                        {messages.filter(m => m.channelKey === selectedChannel).map( (m, idx) =>\n                            <div key={idx} className={m.sender._id === thisUser._id ? 'self-chat-message' : 'notself-chat-message'}>\n                                { (m.sender._id !== thisUser._id && true ) && \n                                    <img src={m.sender.iconURL} className='user-icon-small' style={{margin: 10, marginTop: 0}} />\n                                }\n                                {m.sender._id === thisUser._id ? \n                                    <div>\n                                        <h5 className='c-cs mb-3'>{'You, '}{moment(m.timestamp).format('LT')}</h5>\n                                        <p className='float-container message-text-container'>{m.message}</p>\n                                    </div>\n                                    :\n                                    <div>\n                                        <h5 className='c-cs mb-3'>{m.sender.displayName + ', '}{moment(m.timestamp).format('LT')}</h5>\n                                        <p className='float-container message-text-container'>{m.message}</p>\n                                    </div>\n                                }\n                            </div>\n                        )}\n                    </div>\n                    <div style={{backgroundColor: 'var(--bgc-light)', position: 'absolute', height: 40, marginTop: -40, width: '100%'}}>\n                        <form onSubmit={handleSubmitMessage} className='d-flex jc-center message-input-container'>\n                            <input value={chatMessage} placeholder='Say something' style={{flex: 1,border: 'none', margin: 0}} type='text' \n                                onChange={e => setChatMessage(e.target.value)}\n                            />\n                        </form>\n                    </div>\n                </div>\n                :\n                <div style={{height: messagesHeight, overflow: 'scroll', padding: '10px 20px'}}>\n                    {users.map( (u, idx) => \n                        <div key={idx} className='d-flex jc-space-between ai-center' style={{margin: '10px 0px'}}>\n                            <div className='d-flex jc-flex-start ai-center'>\n                                <img src={u.iconURL} className='user-icon-small mr-10' />\n                                <p>{u.displayName}</p>\n                            </div>\n                            {u._id !== thisUser._id &&\n                                <div className='tooltip' onClick={() => handleClickDirectMessage(u)}>\n                                    <i className='bi bi-chat-right-text icon-btn-circle' />\n                                    <div className='tooltip-text'>\n                                        <h5>Message {u.displayName} privately</h5>\n                                    </div>\n                                </div> \n                            }\n                            \n                        </div>\n                    )}\n                </div>\n            }    \n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/misc/DatePicker.js",["608","609"],"import React, {useEffect, useState, useRef} from 'react'\nimport './datepicker.css'\nimport moment from 'moment'\n\nexport default function DatePicker(props) {\n    const [currMoment, setCurrMoment] = useState(moment())\n    const [calendarDays, setCalendarDays] = useState([])\n\n    const [selectedMoment, setSelectedMoment] = useState(props.initMoment)\n    const [selectedPeriod, setSelectedPeriod] = useState(props.initMoment <= 11 ? 'am' : 'pm') \n    const [selectedHour, setSelectedHour] = useState(props.initMoment.hour() % 12)\n\n    const pickerRef = useRef()\n    const inputRef = useRef()\n    const [pickerHidden, setPickerHidden] = useState(true)\n    const [editingHour, setEditingHour] = useState(false)\n    const [editingMinute, setEditingMinute] = useState(false)\n\n    useEffect(() => {\n        function handleClickOutside(e) {\n            if (pickerRef.current && pickerRef.current.contains(e.target)) {return}\n            else if (inputRef.current && inputRef.current.contains(e.target)) {\n                setPickerHidden(false)\n            } else if (pickerRef.current && !pickerRef.current.contains(e.target)) {\n                setPickerHidden(true)\n            }\n        }\n        document.addEventListener('click', handleClickOutside)\n        return () => {document.removeEventListener('click', handleClickOutside)}\n    }, [])\n\n    useEffect( () => {\n        // Get days in this month\n        const val = currMoment.clone()\n        const startDay = val.clone().startOf('month').startOf('week')\n        const endDay = val.clone().endOf('month').endOf('week')\n        const currDay = startDay.clone().subtract(1,'day')\n        let days = []\n        while (currDay.isBefore(endDay, 'day')) {\n            days.push(currDay.add(1, 'day').clone())\n        }\n        setCalendarDays(days)\n    }, [currMoment] )\n\n    useEffect(() => {\n        const offset = selectedPeriod === 'am' ? 0 : 12\n        setSelectedMoment(curr => curr.clone().set({'hour': (selectedHour + offset) % 24}))\n    }, [selectedPeriod])\n\n    useEffect(() => {\n        props.setMoment(selectedMoment)\n    }, [selectedMoment])\n\n    function handleClickPrevious() {\n        /* subtract 1 month */\n        setCurrMoment(currMoment.subtract(1, 'month').clone())\n    }\n\n    function handleClickNext() {\n        /* add 1 month */\n        setCurrMoment(currMoment.add(1, 'month').clone())\n    }\n\n    function handleClickToday() {\n        /* set curr moment to today */\n        setCurrMoment(moment())\n    }\n\n    function handleClickDay(moment) {\n        setSelectedMoment(curr => curr.clone().set({'date': moment.date(), 'year': moment.year(), 'month': moment.month()}))\n    }\n\n    function handleClickHour(hour) {\n        const offset = selectedPeriod === 'am' ? 0 : 12\n        setSelectedHour(hour)\n        setSelectedMoment(curr => curr.clone().set({'hour': hour + offset}))\n        setEditingHour(false)\n    }\n\n    function handleClickMinute(minuteString) {\n        setSelectedMoment(curr => curr.clone().set({'minute': Number(minuteString) }))\n        setEditingMinute(false)\n    }\n\n    return (\n        <div style={{...props.style, marginTop: 5}} className='no-select'>\n            <div className={`${pickerHidden ? 'date-input' : 'date-input-focus'} d-inline-flex jc-flex-start`}\n                onClick={() => setPickerHidden(curr => !curr)} ref={inputRef}\n            >\n                <div className='d-flex jc-space-between ai-center' style={{padding: '0px 10px', width: 150}}>\n                    <h5 className=''>{selectedMoment.format('ddd, MMMM D')}</h5>\n                    <h5 className=''>{selectedMoment.format('LT')}</h5>\n                </div>\n                <i className='bi bi-clock c-tc' />\n            </div>\n            <div style={{ display: pickerHidden ? 'none' : 'block'}}  className='float-container date-picker' ref={pickerRef}>\n                <div className='d-flex jc-center ai-flex-start'>\n                    <div className='clear-btn-cancel' \n                        style={{padding: '5px 10px', flex: 1, borderBottom: '1px solid var(--bc)', borderRadius: 0}}\n                        onClick={() => setPickerHidden(true)}\n                    >\n                        Submit</div>\n                </div>\n                <div style={{ padding: 15}}>\n                    <div className='d-flex jc-space-between ai-center'>\n                        <div className={editingHour ? 'time-input-focus' : 'time-input'}>\n                            <h5 onClick={() => setEditingHour(curr => !curr)} className='input-value'>\n                                { selectedHour === 0 ? 12 : selectedHour}\n                            </h5>\n                            <div className='time-picker' style={{ display: !editingHour && 'none' }}>\n                                {Array(12).fill(0).map( (e, idx) => \n                                    <h5 className='time-picker-option' key={idx} style={{padding: '5px 0px'}}\n                                        onClick={() => handleClickHour( (idx + 1 ) % 12)}\n                                    >\n                                        {idx + 1}\n                                    </h5>\n                                )}\n                            </div>\n                        </div>\n                        \n                        <h4 className='fw-l'> : </h4>\n\n                        <div className={editingMinute ? 'time-input-focus' : 'time-input'}>\n                            <h5 onClick={() => setEditingMinute(curr => !curr)} className='input-value'>\n                                {selectedMoment.minute() === 0 ? '00' : selectedMoment.minute()}\n                            </h5>\n                            <div className='time-picker' style={{ display: !editingMinute && 'none' }}>\n                                {['00', '10', '20', '30', '40', '50' ].map( (e, idx) => \n                                    <h4 className='time-picker-option' key={idx} style={{padding: '9px 0px'}}\n                                        onClick={() => handleClickMinute(e)}\n                                    >\n                                        {e}\n                                    </h4>\n                                )}\n                            </div>\n                        </div>\n                        <div className='toggle-control'>\n                            <h5 className={selectedPeriod === 'am' ? 'toggle-option-selected' : 'toggle-option'}\n                                onClick={() => setSelectedPeriod('am')}>AM</h5>\n                            <h5 className={selectedPeriod === 'pm' ? 'toggle-option-selected' : 'toggle-option'} \n                                onClick={() => setSelectedPeriod('pm')} >PM</h5>\n                        </div>\n                    </div>\n                </div>\n                <div style={{height: 1, borderTop: '1px solid var(--bc)'}}></div>\n                <div style={{ width: 282, padding: 15}}>\n                    <div className='d-flex jc-space-between ai-center mb-10'>\n                        <div className='d-flex jc-flex-start ai-center'>\n                            <h4 className='mr-10'>{currMoment.format('MMMM')}</h4>\n                            <h4 >{currMoment.format('YYYY')}</h4>\n                        </div>\n                        <div className='d-flex jc-flex-end ai-center'>\n                            <div className='clear-btn-cancel mr-10' style={{padding: 5}} onClick={handleClickToday}>\n                                Today\n                            </div>\n                            <i className='bi bi-chevron-left icon-btn-circle mr-5' onClick={handleClickPrevious} />\n                            <i className='bi bi-chevron-right icon-btn-circle' onClick={handleClickNext} />\n                        </div>\n                    </div>\n                    <div>\n                        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)' }} className='mb-10'>\n                            {['s','m','t','w','t','f','s'].map((day, id) => (\n                                <h6 key={id} className='tt-u c-ct'style={{ textAlign: 'center'}}> {day} </h6>\n                            ))}\n                        </div>\n                        <div style={{display: 'grid', gridTemplateColumns:'repeat(7,1fr)'}} className='calendar'>\n                            {calendarDays.map((day, index) => (\n                                <div key={index} className='onhover-bgc-hover' onClick={() => handleClickDay(day)}\n                                style={{ \n                                    backgroundColor: day.isSame(selectedMoment, 'day') ? 'var(--tint-color)'\n                                        : day.isSame(moment(), 'day') && 'var(--tint-color-translucent)',\n                                    borderRadius: 15, textAlign: 'center', padding: '5px 0px', margin: '1px 7px',\n                                    cursor: 'pointer'\n                                }}>\n                                    <h6 style={{ \n                                        color: day.isSame(selectedMoment, 'day') ? 'white'\n                                            : day.isSame(moment(), 'day') ? 'var(--tint-color)' : 'var(--color)'\n                                    }}>\n                                        {day.format('D')} \n                                    </h6>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                \n                \n            </div>\n        </div>\n        \n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/charts/YearHeatmap.js",["610","611","612"],"import React, {useState, useEffect} from 'react'\nimport moment from 'moment'\nimport {useTheme} from '../../contexts/ThemeContext'\nimport {generate} from '@ant-design/colors'\nimport {formatUnit} from '../../scripts/Numbers'\n\n/*\n    accepts data as an obj of type\n    {\n        count: total num\n        max: max num on a given day\n        data: {\n            Number(day num) : count on day\n        }\n    }\n*/\n\nexport default function YearHeatmap(props) {\n    const [data, setData] = useState()\n    const [dataRanges, setDataRanges] = useState([])\n    const [calendarDays, setCalendarDays] = useState([])\n    const [monthStarts, setMonthStarts] = useState([])\n\n    const {themeColor, tintColor} = useTheme()\n    const [colors, setColors] = useState( () => getPalette() )\n    useEffect(() => {\n        setTimeout(() => { // cssVar lags tintColor change\n            setColors( () => getPalette() )\n        }, 0.01*1000);\n    }, [themeColor, tintColor]) \n\n    function getPalette() {\n        const tc = getComputedStyle(document.documentElement).getPropertyValue('--tint-color')\n        const palette = generate(tc, {theme: themeColor > 0 ? 'dark' : 'default'})\n            .filter( (c, idx) => idx!== 0 && idx % 2 === 0)\n        return ['var(--bgc-light)', ...palette ]\n    }\n\n    useEffect(() => {\n        const dataMax = props.data.max ? props.data.max : 0\n        const ranges = dataMax < colors.length ? \n            Array(colors.length).fill(0).map( (e, idx) => ({min: idx, max: idx} ))\n            :\n            Array(colors.length).fill(0).map( (e, idx) => (\n                idx === 0 ? {min: 0, max: 0} : {min: idx*2 - 1, max: idx*2})\n            )\n        ranges[ranges.length - 1].max = Infinity\n\n        setData(props.data.data ? props.data.data : {})\n        setDataRanges(ranges)\n    }, [props.data])\n\n    useEffect( () => {\n        // Get days in this year\n        const val = moment()\n        const startDay = val.clone().startOf('year').startOf('week')\n\n        const endDay = val.clone().endOf('year').endOf('week')\n\n        const currDay = startDay.clone().subtract(1,'day')\n        let days = []\n        while (currDay.isBefore(endDay, 'day')) {\n            days.push(currDay.add(1, 'day').clone())\n        }\n        setCalendarDays(days)\n\n        const months = []\n        const startMonth = moment().startOf('year').startOf('month')\n        const endMonth = moment().endOf('year').startOf('month')\n        const currMonth = startMonth.clone().subtract(1, 'month')\n        while (currMonth.isBefore(endMonth, 'month')) {\n            months.push(currMonth.add(1, 'month').clone() )\n        }\n        setMonthStarts(months)\n    }, [] )\n\n    function getValue(dayMoment) {\n        const dayIndex = dayMoment.dayOfYear()\n        //return Math.floor(Math.random() * 5)\n        return data.hasOwnProperty(dayIndex) ? data[dayIndex] : 0\n    }\n\n    function getColor(dayMoment) {\n        const val = getValue(dayMoment)\n        let color\n        dataRanges.forEach( (range, idx) => {\n            if (val >= range.min && val <= range.max) {\n                color = colors[idx]\n            }\n        })\n        return color\n    }\n\n    function getFormattedValue(dayMoment) {\n        const val = getValue(dayMoment)\n        return `${val} ${formatUnit(props.dataUnit, val)}`\n    }\n\n    const border = '1px solid var(--bc-chart)'\n\n    return (\n        <div>\n            <div style={{display: 'inline-grid', gridTemplateColumns: `repeat(${moment().weeksInYear() + 1}, 1fr)`}}>\n                {monthStarts.map( (m, idx) => \n                    <h6 style={{width: 0, gridRow: 1, gridColumn: 2 + m.diff( moment().startOf('year').startOf('week'), 'weeks') }}\n                        className='h7 mb-3' key={idx}\n                    >\n                        {m.format('MMM')}\n                    </h6>\n                )}\n                {['Mon', 'Wed', 'Fri'].map( (day, idx) => \n                    <h6 style={{gridColumn: 1, gridRow: 1 + (idx + 1) * 2, height: 0}} key={idx}\n                        className='h7'\n                    >\n                        {day}\n                    </h6>\n                )}\n                {calendarDays.map( (day, idx) => \n                    <div className='tooltip' key={idx}\n                        style={{\n                            display: !day.isSame(moment(), 'year') && 'none',\n                            backgroundColor: getColor(day),\n                            gridRow: 2 + day.day(), gridColumn: 2 + day.diff(moment().startOf('year').startOf('week'), 'weeks'),\n\n                            margin: 0, height: 13,  borderRadius: 0, maxWidth: 30, border: 'none', margin: 0,\n                            minWidth: 5,\n                            borderLeft: border, borderTop: border\n                        }}\n                    >\n                        <div className='tooltip-text' style={{zIndex: 2}}>\n                            <h5>{getFormattedValue(day)} on {day.format('LL')}</h5>\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className='mb-15'></div>\n            <div className='d-flex jc-flex-start ai-center'>\n                <h6 className='mr-5'>Less</h6>\n                {colors.map( (c, idx) => \n                    <div key={idx} \n                        style={{height: 15, width: 15, border: border, borderRadius: 3, margin: 5, backgroundColor: c}}\n                        className='tooltip'\n                    >\n                        <div className='tooltip-text'>\n                            {dataRanges.length > 0 &&\n                                <h5>Range: {dataRanges[idx].min} to {dataRanges[idx].max}</h5>\n                            }\n                        </div>\n                    </div>\n                )}\n                <h6>More</h6>\n            </div>\n        </div>\n    )\n}\n","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/dashboard/SocialInfoCard.js",["613"],"import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {formatNumber} from '../../scripts/Numbers'\nimport {useAuth} from '../../contexts/AuthContext'\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n})\n\nexport default function SocialInfoCard(props) {\n    const history = useHistory()\n    const {thisUser} = useAuth()\n\n    const [followSummary, setFollowSummary] = useState()\n    const [loadingSummary, setLoadingSummary] = useState(true)\n\n    useEffect(() => {\n        fetchFollowSummary()\n    }, [])\n\n    async function fetchFollowSummary() {\n        try {\n            const res = await api.get(`/follows/user/${thisUser._id}/summary`)\n            setFollowSummary(res.data)\n        } catch (error) {console.log(error)}\n        setLoadingSummary(false)\n    }\n\n    function routeToFollowing() {\n        if (props.subPath === '/following') { return }\n        history.push(`/athletes/${thisUser._id}/following`)\n    }\n\n    return (\n        <div style={{...props.style, padding: '20px 20px'}} className='float-container bs-bb' >\n            <h3>Social Stats</h3>\n            <br />\n            {!loadingSummary &&\n                    <div className='d-flex jc-space-around ai-center'>\n                        <div style={{ textAlign: 'center'}}>\n                            <h3>{formatNumber(followSummary.followees)}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Following</h5>\n                        </div>\n                        <div style={{textAlign: 'center'}}>\n                            <h3>{formatNumber(followSummary.followers)}</h3>\n                            <h5 className='page-link c-cs' onClick={routeToFollowing}>Followers</h5>\n                        </div>\n                    </div>\n                }\n            <br />\n            <div className='d-flex jc-center'>\n                <button className='clear-btn-secondary' style={{flex: 1}} onClick={() => history.push('/explore/athletes')}>\n                    Find Friends\n                </button>\n            </div>\n        </div>\n    )\n}","/Users/lordmcclutz/Desktop/rowingapp/webapp/src/components/feed/FeedLoader.js",["614"],"import react, {useState, useEffect} from 'react'\n\nexport default function FeedLoader(props) {\n    const [loading, setLoading] = useState(props.loading)\n    const [canLoadMore, setCanLoadMore] = useState(props.canLoadMore)\n    \n    useEffect(() => {\n        setLoading(props.loading)\n        setCanLoadMore(props.canLoadMore)\n    }, [props] )\n \n    return (\n        <div className='d-flex' style={{margin: '0px 0px', ...props.style}}>\n            {canLoadMore ? \n            <button className='clear-btn' style={{flex: 1}} onClick={props.handleClickLoadMore}>\n                {loading ? `Loading more ${props.pluralUnit}` : `Load more ${props.pluralUnit}`}\n            </button>\n            :\n            <div className='trans-container search-message' style={{flex: 1}}>\n                {props.feedEndMessage}\n            </div>\n            }\n        </div>\n    )\n}",{"ruleId":"615","replacedBy":"616"},{"ruleId":"617","replacedBy":"618"},{"ruleId":"619","severity":1,"message":"620","line":69,"column":21,"nodeType":"621","endLine":72,"endColumn":23},{"ruleId":"622","severity":1,"message":"623","line":9,"column":7,"nodeType":"624","messageId":"625","endLine":9,"endColumn":23},{"ruleId":"622","severity":1,"message":"626","line":10,"column":7,"nodeType":"624","messageId":"625","endLine":10,"endColumn":20},{"ruleId":"627","severity":1,"message":"628","line":27,"column":8,"nodeType":"629","endLine":27,"endColumn":10,"suggestions":"630"},{"ruleId":"619","severity":1,"message":"620","line":48,"column":17,"nodeType":"621","endLine":48,"endColumn":130},{"ruleId":"622","severity":1,"message":"631","line":16,"column":12,"nodeType":"624","messageId":"625","endLine":16,"endColumn":23},{"ruleId":"622","severity":1,"message":"632","line":16,"column":35,"nodeType":"624","messageId":"625","endLine":16,"endColumn":48},{"ruleId":"627","severity":1,"message":"633","line":76,"column":8,"nodeType":"629","endLine":76,"endColumn":20,"suggestions":"634"},{"ruleId":"627","severity":1,"message":"635","line":93,"column":8,"nodeType":"629","endLine":93,"endColumn":19,"suggestions":"636"},{"ruleId":"619","severity":1,"message":"620","line":67,"column":21,"nodeType":"621","endLine":70,"endColumn":23},{"ruleId":"627","severity":1,"message":"637","line":91,"column":8,"nodeType":"629","endLine":91,"endColumn":10,"suggestions":"638"},{"ruleId":"619","severity":1,"message":"620","line":20,"column":17,"nodeType":"621","endLine":20,"endColumn":120},{"ruleId":"622","severity":1,"message":"639","line":1,"column":16,"nodeType":"624","messageId":"625","endLine":1,"endColumn":25},{"ruleId":"619","severity":1,"message":"620","line":10,"column":17,"nodeType":"621","endLine":10,"endColumn":120},{"ruleId":"622","severity":1,"message":"640","line":8,"column":12,"nodeType":"624","messageId":"625","endLine":8,"endColumn":22},{"ruleId":"622","severity":1,"message":"641","line":8,"column":24,"nodeType":"624","messageId":"625","endLine":8,"endColumn":37},{"ruleId":"622","severity":1,"message":"631","line":9,"column":12,"nodeType":"624","messageId":"625","endLine":9,"endColumn":23},{"ruleId":"619","severity":1,"message":"620","line":26,"column":21,"nodeType":"621","endLine":26,"endColumn":124},{"ruleId":"619","severity":1,"message":"620","line":52,"column":25,"nodeType":"621","endLine":52,"endColumn":97},{"ruleId":"619","severity":1,"message":"620","line":18,"column":25,"nodeType":"621","endLine":23,"endColumn":27},{"ruleId":"622","severity":1,"message":"642","line":8,"column":8,"nodeType":"624","messageId":"625","endLine":8,"endColumn":14},{"ruleId":"622","severity":1,"message":"631","line":17,"column":12,"nodeType":"624","messageId":"625","endLine":17,"endColumn":23},{"ruleId":"622","severity":1,"message":"643","line":17,"column":25,"nodeType":"624","messageId":"625","endLine":17,"endColumn":33},{"ruleId":"622","severity":1,"message":"644","line":18,"column":12,"nodeType":"624","messageId":"625","endLine":18,"endColumn":22},{"ruleId":"619","severity":1,"message":"620","line":96,"column":41,"nodeType":"621","endLine":96,"endColumn":101},{"ruleId":"619","severity":1,"message":"620","line":136,"column":34,"nodeType":"621","endLine":136,"endColumn":89},{"ruleId":"619","severity":1,"message":"620","line":150,"column":49,"nodeType":"621","endLine":150,"endColumn":93},{"ruleId":"627","severity":1,"message":"645","line":42,"column":8,"nodeType":"629","endLine":42,"endColumn":10,"suggestions":"646"},{"ruleId":"619","severity":1,"message":"620","line":144,"column":62,"nodeType":"621","endLine":144,"endColumn":118},{"ruleId":"619","severity":1,"message":"620","line":147,"column":53,"nodeType":"621","endLine":147,"endColumn":113},{"ruleId":"622","severity":1,"message":"631","line":17,"column":12,"nodeType":"624","messageId":"625","endLine":17,"endColumn":23},{"ruleId":"622","severity":1,"message":"632","line":17,"column":35,"nodeType":"624","messageId":"625","endLine":17,"endColumn":48},{"ruleId":"627","severity":1,"message":"647","line":80,"column":8,"nodeType":"629","endLine":80,"endColumn":10,"suggestions":"648"},{"ruleId":"622","severity":1,"message":"649","line":114,"column":23,"nodeType":"624","messageId":"625","endLine":114,"endColumn":26},{"ruleId":"619","severity":1,"message":"620","line":187,"column":49,"nodeType":"621","endLine":187,"endColumn":108},{"ruleId":"622","severity":1,"message":"639","line":1,"column":16,"nodeType":"624","messageId":"625","endLine":1,"endColumn":25},{"ruleId":"622","severity":1,"message":"649","line":41,"column":19,"nodeType":"624","messageId":"625","endLine":41,"endColumn":22},{"ruleId":"622","severity":1,"message":"650","line":1,"column":37,"nodeType":"624","messageId":"625","endLine":1,"endColumn":48},{"ruleId":"622","severity":1,"message":"631","line":21,"column":12,"nodeType":"624","messageId":"625","endLine":21,"endColumn":23},{"ruleId":"627","severity":1,"message":"651","line":56,"column":8,"nodeType":"629","endLine":56,"endColumn":10,"suggestions":"652"},{"ruleId":"627","severity":1,"message":"653","line":76,"column":8,"nodeType":"629","endLine":76,"endColumn":10,"suggestions":"654"},{"ruleId":"627","severity":1,"message":"655","line":126,"column":8,"nodeType":"629","endLine":126,"endColumn":16,"suggestions":"656"},{"ruleId":"622","severity":1,"message":"657","line":3,"column":8,"nodeType":"624","messageId":"625","endLine":3,"endColumn":15},{"ruleId":"627","severity":1,"message":"658","line":17,"column":8,"nodeType":"629","endLine":17,"endColumn":15,"suggestions":"659"},{"ruleId":"619","severity":1,"message":"620","line":52,"column":56,"nodeType":"621","endLine":52,"endColumn":112},{"ruleId":"615","replacedBy":"660"},{"ruleId":"617","replacedBy":"661"},{"ruleId":"622","severity":1,"message":"662","line":2,"column":9,"nodeType":"624","messageId":"625","endLine":2,"endColumn":16},{"ruleId":"622","severity":1,"message":"663","line":7,"column":7,"nodeType":"624","messageId":"625","endLine":7,"endColumn":10},{"ruleId":"619","severity":1,"message":"620","line":26,"column":29,"nodeType":"621","endLine":26,"endColumn":89},{"ruleId":"622","severity":1,"message":"664","line":3,"column":8,"nodeType":"624","messageId":"625","endLine":3,"endColumn":17},{"ruleId":"622","severity":1,"message":"631","line":15,"column":12,"nodeType":"624","messageId":"625","endLine":15,"endColumn":23},{"ruleId":"627","severity":1,"message":"658","line":52,"column":8,"nodeType":"629","endLine":52,"endColumn":26,"suggestions":"665"},{"ruleId":"627","severity":1,"message":"666","line":61,"column":8,"nodeType":"629","endLine":61,"endColumn":34,"suggestions":"667"},{"ruleId":"668","severity":1,"message":"669","line":245,"column":70,"nodeType":"670","messageId":"671","endLine":245,"endColumn":72},{"ruleId":"622","severity":1,"message":"672","line":9,"column":11,"nodeType":"624","messageId":"625","endLine":9,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":38,"column":49,"nodeType":"675","endLine":38,"endColumn":67},{"ruleId":"676","severity":1,"message":"677","line":232,"column":17,"nodeType":"678","messageId":"679","endLine":232,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":236,"column":17,"nodeType":"678","messageId":"679","endLine":236,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":240,"column":17,"nodeType":"678","messageId":"679","endLine":240,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":244,"column":17,"nodeType":"678","messageId":"679","endLine":244,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":248,"column":17,"nodeType":"678","messageId":"679","endLine":248,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":252,"column":17,"nodeType":"678","messageId":"679","endLine":252,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":256,"column":17,"nodeType":"678","messageId":"679","endLine":256,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":260,"column":17,"nodeType":"678","messageId":"679","endLine":260,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":264,"column":17,"nodeType":"678","messageId":"679","endLine":264,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":284,"column":17,"nodeType":"678","messageId":"679","endLine":284,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":288,"column":17,"nodeType":"678","messageId":"679","endLine":288,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":292,"column":17,"nodeType":"678","messageId":"679","endLine":292,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":314,"column":17,"nodeType":"678","messageId":"679","endLine":314,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":318,"column":17,"nodeType":"678","messageId":"679","endLine":318,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":322,"column":17,"nodeType":"678","messageId":"679","endLine":322,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":326,"column":17,"nodeType":"678","messageId":"679","endLine":326,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":330,"column":17,"nodeType":"678","messageId":"679","endLine":330,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":334,"column":17,"nodeType":"678","messageId":"679","endLine":334,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":338,"column":17,"nodeType":"678","messageId":"679","endLine":338,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":342,"column":17,"nodeType":"678","messageId":"679","endLine":342,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":346,"column":17,"nodeType":"678","messageId":"679","endLine":346,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":350,"column":17,"nodeType":"678","messageId":"679","endLine":350,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":354,"column":17,"nodeType":"678","messageId":"679","endLine":354,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":358,"column":17,"nodeType":"678","messageId":"679","endLine":358,"endColumn":23},{"ruleId":"676","severity":1,"message":"677","line":362,"column":17,"nodeType":"678","messageId":"679","endLine":362,"endColumn":23},{"ruleId":"668","severity":1,"message":"669","line":517,"column":38,"nodeType":"670","messageId":"671","endLine":517,"endColumn":40},{"ruleId":"676","severity":1,"message":"677","line":16,"column":60,"nodeType":"678","messageId":"679","endLine":16,"endColumn":66},{"ruleId":"676","severity":1,"message":"677","line":17,"column":57,"nodeType":"678","messageId":"679","endLine":17,"endColumn":63},{"ruleId":"676","severity":1,"message":"677","line":18,"column":62,"nodeType":"678","messageId":"679","endLine":18,"endColumn":68},{"ruleId":"676","severity":1,"message":"677","line":19,"column":59,"nodeType":"678","messageId":"679","endLine":19,"endColumn":65},{"ruleId":"676","severity":1,"message":"677","line":20,"column":62,"nodeType":"678","messageId":"679","endLine":20,"endColumn":68},{"ruleId":"676","severity":1,"message":"677","line":21,"column":59,"nodeType":"678","messageId":"679","endLine":21,"endColumn":65},{"ruleId":"676","severity":1,"message":"677","line":22,"column":61,"nodeType":"678","messageId":"679","endLine":22,"endColumn":67},{"ruleId":"676","severity":1,"message":"677","line":23,"column":61,"nodeType":"678","messageId":"679","endLine":23,"endColumn":67},{"ruleId":"676","severity":1,"message":"677","line":24,"column":59,"nodeType":"678","messageId":"679","endLine":24,"endColumn":65},{"ruleId":"676","severity":1,"message":"677","line":25,"column":71,"nodeType":"678","messageId":"679","endLine":25,"endColumn":77},{"ruleId":"676","severity":1,"message":"677","line":26,"column":56,"nodeType":"678","messageId":"679","endLine":26,"endColumn":62},{"ruleId":"680","severity":1,"message":"681","line":27,"column":29,"nodeType":"629","messageId":"682","endLine":27,"endColumn":61},{"ruleId":"676","severity":1,"message":"677","line":27,"column":63,"nodeType":"678","messageId":"679","endLine":27,"endColumn":69},{"ruleId":"680","severity":1,"message":"681","line":28,"column":29,"nodeType":"629","messageId":"682","endLine":28,"endColumn":62},{"ruleId":"676","severity":1,"message":"677","line":28,"column":64,"nodeType":"678","messageId":"679","endLine":28,"endColumn":70},{"ruleId":"676","severity":1,"message":"677","line":36,"column":45,"nodeType":"678","messageId":"679","endLine":36,"endColumn":51},{"ruleId":"676","severity":1,"message":"677","line":37,"column":49,"nodeType":"678","messageId":"679","endLine":37,"endColumn":55},{"ruleId":"676","severity":1,"message":"677","line":38,"column":45,"nodeType":"678","messageId":"679","endLine":38,"endColumn":51},{"ruleId":"676","severity":1,"message":"677","line":39,"column":61,"nodeType":"678","messageId":"679","endLine":39,"endColumn":67},{"ruleId":"676","severity":1,"message":"677","line":40,"column":65,"nodeType":"678","messageId":"679","endLine":40,"endColumn":71},{"ruleId":"676","severity":1,"message":"677","line":41,"column":56,"nodeType":"678","messageId":"679","endLine":41,"endColumn":62},{"ruleId":"676","severity":1,"message":"677","line":42,"column":48,"nodeType":"678","messageId":"679","endLine":42,"endColumn":54},{"ruleId":"676","severity":1,"message":"677","line":43,"column":64,"nodeType":"678","messageId":"679","endLine":43,"endColumn":70},{"ruleId":"676","severity":1,"message":"677","line":44,"column":52,"nodeType":"678","messageId":"679","endLine":44,"endColumn":58},{"ruleId":"676","severity":1,"message":"677","line":45,"column":68,"nodeType":"678","messageId":"679","endLine":45,"endColumn":74},{"ruleId":"676","severity":1,"message":"677","line":54,"column":55,"nodeType":"678","messageId":"679","endLine":54,"endColumn":61},{"ruleId":"676","severity":1,"message":"677","line":55,"column":53,"nodeType":"678","messageId":"679","endLine":55,"endColumn":59},{"ruleId":"676","severity":1,"message":"677","line":56,"column":57,"nodeType":"678","messageId":"679","endLine":56,"endColumn":63},{"ruleId":"676","severity":1,"message":"677","line":57,"column":55,"nodeType":"678","messageId":"679","endLine":57,"endColumn":61},{"ruleId":"676","severity":1,"message":"677","line":58,"column":60,"nodeType":"678","messageId":"679","endLine":58,"endColumn":66},{"ruleId":"676","severity":1,"message":"677","line":59,"column":64,"nodeType":"678","messageId":"679","endLine":59,"endColumn":70},{"ruleId":"676","severity":1,"message":"677","line":60,"column":72,"nodeType":"678","messageId":"679","endLine":60,"endColumn":78},{"ruleId":"676","severity":1,"message":"677","line":61,"column":76,"nodeType":"678","messageId":"679","endLine":61,"endColumn":82},{"ruleId":"676","severity":1,"message":"677","line":62,"column":68,"nodeType":"678","messageId":"679","endLine":62,"endColumn":74},{"ruleId":"676","severity":1,"message":"677","line":63,"column":72,"nodeType":"678","messageId":"679","endLine":63,"endColumn":78},{"ruleId":"676","severity":1,"message":"677","line":64,"column":54,"nodeType":"678","messageId":"679","endLine":64,"endColumn":60},{"ruleId":"676","severity":1,"message":"677","line":65,"column":52,"nodeType":"678","messageId":"679","endLine":65,"endColumn":58},{"ruleId":"676","severity":1,"message":"677","line":66,"column":57,"nodeType":"678","messageId":"679","endLine":66,"endColumn":63},{"ruleId":"676","severity":1,"message":"677","line":67,"column":48,"nodeType":"678","messageId":"679","endLine":67,"endColumn":54},{"ruleId":"676","severity":1,"message":"677","line":75,"column":40,"nodeType":"678","messageId":"679","endLine":75,"endColumn":46},{"ruleId":"676","severity":1,"message":"677","line":76,"column":38,"nodeType":"678","messageId":"679","endLine":76,"endColumn":44},{"ruleId":"676","severity":1,"message":"677","line":84,"column":58,"nodeType":"678","messageId":"679","endLine":84,"endColumn":64},{"ruleId":"676","severity":1,"message":"677","line":85,"column":53,"nodeType":"678","messageId":"679","endLine":85,"endColumn":59},{"ruleId":"676","severity":1,"message":"677","line":86,"column":39,"nodeType":"678","messageId":"679","endLine":86,"endColumn":45},{"ruleId":"676","severity":1,"message":"677","line":87,"column":52,"nodeType":"678","messageId":"679","endLine":87,"endColumn":58},{"ruleId":"676","severity":1,"message":"677","line":88,"column":40,"nodeType":"678","messageId":"679","endLine":88,"endColumn":46},{"ruleId":"676","severity":1,"message":"677","line":113,"column":36,"nodeType":"678","messageId":"679","endLine":113,"endColumn":42},{"ruleId":"676","severity":1,"message":"677","line":114,"column":43,"nodeType":"678","messageId":"679","endLine":114,"endColumn":49},{"ruleId":"676","severity":1,"message":"677","line":115,"column":43,"nodeType":"678","messageId":"679","endLine":115,"endColumn":49},{"ruleId":"676","severity":1,"message":"677","line":116,"column":40,"nodeType":"678","messageId":"679","endLine":116,"endColumn":46},{"ruleId":"668","severity":1,"message":"669","line":132,"column":18,"nodeType":"670","messageId":"671","endLine":132,"endColumn":20},{"ruleId":"683","severity":1,"message":"684","line":357,"column":5,"nodeType":"685","messageId":"671","endLine":357,"endColumn":16},{"ruleId":"683","severity":1,"message":"686","line":369,"column":5,"nodeType":"685","messageId":"671","endLine":369,"endColumn":18},{"ruleId":"683","severity":1,"message":"687","line":433,"column":5,"nodeType":"685","messageId":"671","endLine":433,"endColumn":24},{"ruleId":"615","replacedBy":"688"},{"ruleId":"617","replacedBy":"689"},{"ruleId":"622","severity":1,"message":"690","line":14,"column":12,"nodeType":"624","messageId":"625","endLine":14,"endColumn":22},{"ruleId":"622","severity":1,"message":"691","line":22,"column":28,"nodeType":"624","messageId":"625","endLine":22,"endColumn":45},{"ruleId":"622","severity":1,"message":"692","line":35,"column":12,"nodeType":"624","messageId":"625","endLine":35,"endColumn":29},{"ruleId":"627","severity":1,"message":"693","line":62,"column":8,"nodeType":"629","endLine":62,"endColumn":10,"suggestions":"694"},{"ruleId":"695","severity":1,"message":"696","line":141,"column":9,"nodeType":"697","messageId":"698","endLine":151,"endColumn":10},{"ruleId":"622","severity":1,"message":"657","line":6,"column":8,"nodeType":"624","messageId":"625","endLine":6,"endColumn":15},{"ruleId":"622","severity":1,"message":"699","line":30,"column":12,"nodeType":"624","messageId":"625","endLine":30,"endColumn":32},{"ruleId":"627","severity":1,"message":"700","line":70,"column":8,"nodeType":"629","endLine":70,"endColumn":10,"suggestions":"701"},{"ruleId":"627","severity":1,"message":"702","line":117,"column":8,"nodeType":"629","endLine":117,"endColumn":34,"suggestions":"703"},{"ruleId":"622","severity":1,"message":"690","line":10,"column":12,"nodeType":"624","messageId":"625","endLine":10,"endColumn":22},{"ruleId":"622","severity":1,"message":"704","line":20,"column":11,"nodeType":"624","messageId":"625","endLine":20,"endColumn":23},{"ruleId":"622","severity":1,"message":"705","line":22,"column":11,"nodeType":"624","messageId":"625","endLine":22,"endColumn":14},{"ruleId":"683","severity":1,"message":"706","line":46,"column":29,"nodeType":"685","messageId":"671","endLine":46,"endColumn":49},{"ruleId":"622","severity":1,"message":"707","line":2,"column":8,"nodeType":"624","messageId":"625","endLine":2,"endColumn":16},{"ruleId":"622","severity":1,"message":"663","line":8,"column":7,"nodeType":"624","messageId":"625","endLine":8,"endColumn":10},{"ruleId":"627","severity":1,"message":"708","line":36,"column":8,"nodeType":"629","endLine":36,"endColumn":26,"suggestions":"709"},{"ruleId":"627","severity":1,"message":"710","line":41,"column":8,"nodeType":"629","endLine":41,"endColumn":34,"suggestions":"711"},{"ruleId":"668","severity":1,"message":"669","line":96,"column":61,"nodeType":"670","messageId":"671","endLine":96,"endColumn":63},{"ruleId":"622","severity":1,"message":"641","line":8,"column":24,"nodeType":"624","messageId":"625","endLine":8,"endColumn":37},{"ruleId":"622","severity":1,"message":"712","line":8,"column":39,"nodeType":"624","messageId":"625","endLine":8,"endColumn":48},{"ruleId":"683","severity":1,"message":"713","line":43,"column":21,"nodeType":"685","messageId":"671","endLine":43,"endColumn":36},{"ruleId":"622","severity":1,"message":"639","line":2,"column":26,"nodeType":"624","messageId":"625","endLine":2,"endColumn":35},{"ruleId":"619","severity":1,"message":"620","line":118,"column":21,"nodeType":"621","endLine":118,"endColumn":71},{"ruleId":"619","severity":1,"message":"620","line":146,"column":21,"nodeType":"621","endLine":146,"endColumn":109},{"ruleId":"622","severity":1,"message":"639","line":2,"column":26,"nodeType":"624","messageId":"625","endLine":2,"endColumn":35},{"ruleId":"622","severity":1,"message":"657","line":9,"column":8,"nodeType":"624","messageId":"625","endLine":9,"endColumn":15},{"ruleId":"622","severity":1,"message":"663","line":16,"column":7,"nodeType":"624","messageId":"625","endLine":16,"endColumn":10},{"ruleId":"622","severity":1,"message":"714","line":2,"column":10,"nodeType":"624","messageId":"625","endLine":2,"endColumn":18},{"ruleId":"627","severity":1,"message":"715","line":27,"column":8,"nodeType":"629","endLine":27,"endColumn":17,"suggestions":"716"},{"ruleId":"717","severity":1,"message":"718","line":30,"column":38,"nodeType":"719","messageId":"720","endLine":31,"endColumn":13,"fix":"721"},{"ruleId":"622","severity":1,"message":"722","line":42,"column":11,"nodeType":"624","messageId":"625","endLine":42,"endColumn":24},{"ruleId":"622","severity":1,"message":"723","line":3,"column":8,"nodeType":"624","messageId":"625","endLine":3,"endColumn":17},{"ruleId":"622","severity":1,"message":"724","line":31,"column":12,"nodeType":"624","messageId":"625","endLine":31,"endColumn":23},{"ruleId":"622","severity":1,"message":"725","line":31,"column":25,"nodeType":"624","messageId":"625","endLine":31,"endColumn":39},{"ruleId":"622","severity":1,"message":"726","line":32,"column":12,"nodeType":"624","messageId":"625","endLine":32,"endColumn":26},{"ruleId":"622","severity":1,"message":"727","line":32,"column":28,"nodeType":"624","messageId":"625","endLine":32,"endColumn":45},{"ruleId":"627","severity":1,"message":"700","line":42,"column":8,"nodeType":"629","endLine":42,"endColumn":17,"suggestions":"728"},{"ruleId":"622","severity":1,"message":"729","line":3,"column":9,"nodeType":"624","messageId":"625","endLine":3,"endColumn":18},{"ruleId":"622","severity":1,"message":"730","line":11,"column":7,"nodeType":"624","messageId":"625","endLine":11,"endColumn":10},{"ruleId":"622","severity":1,"message":"631","line":17,"column":12,"nodeType":"624","messageId":"625","endLine":17,"endColumn":23},{"ruleId":"622","severity":1,"message":"731","line":18,"column":11,"nodeType":"624","messageId":"625","endLine":18,"endColumn":18},{"ruleId":"619","severity":1,"message":"620","line":71,"column":13,"nodeType":"621","endLine":71,"endColumn":95},{"ruleId":"622","severity":1,"message":"731","line":20,"column":11,"nodeType":"624","messageId":"625","endLine":20,"endColumn":18},{"ruleId":"627","severity":1,"message":"700","line":34,"column":8,"nodeType":"629","endLine":34,"endColumn":17,"suggestions":"732"},{"ruleId":"622","severity":1,"message":"731","line":24,"column":11,"nodeType":"624","messageId":"625","endLine":24,"endColumn":18},{"ruleId":"627","severity":1,"message":"733","line":70,"column":8,"nodeType":"629","endLine":70,"endColumn":16,"suggestions":"734"},{"ruleId":"627","severity":1,"message":"700","line":39,"column":8,"nodeType":"629","endLine":39,"endColumn":20,"suggestions":"735"},{"ruleId":"736","severity":1,"message":"737","line":72,"column":9,"nodeType":"738","messageId":"739","endLine":72,"endColumn":47},{"ruleId":"736","severity":1,"message":"737","line":86,"column":9,"nodeType":"738","messageId":"739","endLine":86,"endColumn":47},{"ruleId":"619","severity":1,"message":"620","line":96,"column":13,"nodeType":"621","endLine":96,"endColumn":89},{"ruleId":"622","severity":1,"message":"657","line":7,"column":8,"nodeType":"624","messageId":"625","endLine":7,"endColumn":15},{"ruleId":"622","severity":1,"message":"631","line":15,"column":12,"nodeType":"624","messageId":"625","endLine":15,"endColumn":23},{"ruleId":"622","severity":1,"message":"644","line":16,"column":12,"nodeType":"624","messageId":"625","endLine":16,"endColumn":22},{"ruleId":"627","severity":1,"message":"740","line":39,"column":8,"nodeType":"629","endLine":39,"endColumn":16,"suggestions":"741"},{"ruleId":"627","severity":1,"message":"740","line":43,"column":8,"nodeType":"629","endLine":43,"endColumn":20,"suggestions":"742"},{"ruleId":"619","severity":1,"message":"620","line":83,"column":49,"nodeType":"621","endLine":83,"endColumn":94},{"ruleId":"622","severity":1,"message":"743","line":13,"column":11,"nodeType":"624","messageId":"625","endLine":13,"endColumn":22},{"ruleId":"622","severity":1,"message":"744","line":14,"column":12,"nodeType":"624","messageId":"625","endLine":14,"endColumn":18},{"ruleId":"622","severity":1,"message":"745","line":14,"column":20,"nodeType":"624","messageId":"625","endLine":14,"endColumn":38},{"ruleId":"622","severity":1,"message":"746","line":16,"column":12,"nodeType":"624","messageId":"625","endLine":16,"endColumn":28},{"ruleId":"622","severity":1,"message":"747","line":16,"column":30,"nodeType":"624","messageId":"625","endLine":16,"endColumn":49},{"ruleId":"622","severity":1,"message":"642","line":8,"column":8,"nodeType":"624","messageId":"625","endLine":8,"endColumn":14},{"ruleId":"622","severity":1,"message":"631","line":17,"column":12,"nodeType":"624","messageId":"625","endLine":17,"endColumn":23},{"ruleId":"622","severity":1,"message":"643","line":17,"column":25,"nodeType":"624","messageId":"625","endLine":17,"endColumn":33},{"ruleId":"622","severity":1,"message":"644","line":18,"column":12,"nodeType":"624","messageId":"625","endLine":18,"endColumn":22},{"ruleId":"619","severity":1,"message":"620","line":92,"column":41,"nodeType":"621","endLine":92,"endColumn":88},{"ruleId":"622","severity":1,"message":"672","line":12,"column":11,"nodeType":"624","messageId":"625","endLine":12,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":41,"column":49,"nodeType":"675","endLine":41,"endColumn":67},{"ruleId":"622","severity":1,"message":"748","line":1,"column":16,"nodeType":"624","messageId":"625","endLine":1,"endColumn":24},{"ruleId":"622","severity":1,"message":"639","line":1,"column":26,"nodeType":"624","messageId":"625","endLine":1,"endColumn":35},{"ruleId":"622","severity":1,"message":"749","line":4,"column":8,"nodeType":"624","messageId":"625","endLine":4,"endColumn":16},{"ruleId":"622","severity":1,"message":"707","line":9,"column":8,"nodeType":"624","messageId":"625","endLine":9,"endColumn":16},{"ruleId":"622","severity":1,"message":"730","line":11,"column":7,"nodeType":"624","messageId":"625","endLine":11,"endColumn":10},{"ruleId":"622","severity":1,"message":"750","line":12,"column":7,"nodeType":"624","messageId":"625","endLine":12,"endColumn":18},{"ruleId":"622","severity":1,"message":"643","line":14,"column":13,"nodeType":"624","messageId":"625","endLine":14,"endColumn":21},{"ruleId":"619","severity":1,"message":"620","line":33,"column":49,"nodeType":"621","endLine":33,"endColumn":112},{"ruleId":"622","severity":1,"message":"751","line":3,"column":8,"nodeType":"624","messageId":"625","endLine":3,"endColumn":20},{"ruleId":"622","severity":1,"message":"752","line":21,"column":12,"nodeType":"624","messageId":"625","endLine":21,"endColumn":27},{"ruleId":"627","severity":1,"message":"753","line":35,"column":8,"nodeType":"629","endLine":35,"endColumn":10,"suggestions":"754"},{"ruleId":"622","severity":1,"message":"755","line":58,"column":14,"nodeType":"624","messageId":"625","endLine":58,"endColumn":29},{"ruleId":"619","severity":1,"message":"620","line":142,"column":42,"nodeType":"621","endLine":142,"endColumn":100},{"ruleId":"622","severity":1,"message":"748","line":1,"column":16,"nodeType":"624","messageId":"625","endLine":1,"endColumn":24},{"ruleId":"622","severity":1,"message":"639","line":1,"column":26,"nodeType":"624","messageId":"625","endLine":1,"endColumn":35},{"ruleId":"622","severity":1,"message":"664","line":3,"column":8,"nodeType":"624","messageId":"625","endLine":3,"endColumn":17},{"ruleId":"622","severity":1,"message":"643","line":10,"column":13,"nodeType":"624","messageId":"625","endLine":10,"endColumn":21},{"ruleId":"619","severity":1,"message":"620","line":20,"column":41,"nodeType":"621","endLine":20,"endColumn":103},{"ruleId":"622","severity":1,"message":"756","line":11,"column":12,"nodeType":"624","messageId":"625","endLine":11,"endColumn":25},{"ruleId":"622","severity":1,"message":"757","line":11,"column":27,"nodeType":"624","messageId":"625","endLine":11,"endColumn":43},{"ruleId":"619","severity":1,"message":"620","line":22,"column":13,"nodeType":"621","endLine":23,"endColumn":15},{"ruleId":"622","severity":1,"message":"758","line":1,"column":37,"nodeType":"624","messageId":"625","endLine":1,"endColumn":43},{"ruleId":"622","severity":1,"message":"759","line":1,"column":45,"nodeType":"624","messageId":"625","endLine":1,"endColumn":55},{"ruleId":"622","severity":1,"message":"643","line":9,"column":13,"nodeType":"624","messageId":"625","endLine":9,"endColumn":21},{"ruleId":"622","severity":1,"message":"644","line":10,"column":13,"nodeType":"624","messageId":"625","endLine":10,"endColumn":23},{"ruleId":"622","severity":1,"message":"731","line":11,"column":11,"nodeType":"624","messageId":"625","endLine":11,"endColumn":18},{"ruleId":"622","severity":1,"message":"760","line":7,"column":10,"nodeType":"624","messageId":"625","endLine":7,"endColumn":22},{"ruleId":"622","severity":1,"message":"761","line":7,"column":24,"nodeType":"624","messageId":"625","endLine":7,"endColumn":34},{"ruleId":"619","severity":1,"message":"620","line":77,"column":21,"nodeType":"621","endLine":77,"endColumn":83},{"ruleId":"619","severity":1,"message":"620","line":115,"column":50,"nodeType":"621","endLine":115,"endColumn":108},{"ruleId":"622","severity":1,"message":"748","line":1,"column":16,"nodeType":"624","messageId":"625","endLine":1,"endColumn":24},{"ruleId":"622","severity":1,"message":"662","line":3,"column":9,"nodeType":"624","messageId":"625","endLine":3,"endColumn":16},{"ruleId":"619","severity":1,"message":"620","line":16,"column":21,"nodeType":"621","endLine":16,"endColumn":86},{"ruleId":"619","severity":1,"message":"620","line":14,"column":21,"nodeType":"621","endLine":14,"endColumn":86},{"ruleId":"619","severity":1,"message":"620","line":14,"column":21,"nodeType":"621","endLine":14,"endColumn":86},{"ruleId":"622","severity":1,"message":"714","line":5,"column":9,"nodeType":"624","messageId":"625","endLine":5,"endColumn":17},{"ruleId":"622","severity":1,"message":"762","line":12,"column":8,"nodeType":"624","messageId":"625","endLine":12,"endColumn":20},{"ruleId":"622","severity":1,"message":"763","line":27,"column":12,"nodeType":"624","messageId":"625","endLine":27,"endColumn":24},{"ruleId":"627","severity":1,"message":"764","line":71,"column":8,"nodeType":"629","endLine":71,"endColumn":10,"suggestions":"765"},{"ruleId":"627","severity":1,"message":"766","line":75,"column":8,"nodeType":"629","endLine":75,"endColumn":14,"suggestions":"767"},{"ruleId":"627","severity":1,"message":"768","line":84,"column":8,"nodeType":"629","endLine":84,"endColumn":58,"suggestions":"769"},{"ruleId":"627","severity":1,"message":"770","line":91,"column":8,"nodeType":"629","endLine":91,"endColumn":98,"suggestions":"771"},{"ruleId":"622","severity":1,"message":"649","line":129,"column":19,"nodeType":"624","messageId":"625","endLine":129,"endColumn":22},{"ruleId":"619","severity":1,"message":"620","line":203,"column":34,"nodeType":"621","endLine":203,"endColumn":88},{"ruleId":"619","severity":1,"message":"620","line":223,"column":33,"nodeType":"621","endLine":223,"endColumn":54},{"ruleId":"627","severity":1,"message":"700","line":23,"column":8,"nodeType":"629","endLine":23,"endColumn":20,"suggestions":"772"},{"ruleId":"622","severity":1,"message":"690","line":14,"column":12,"nodeType":"624","messageId":"625","endLine":14,"endColumn":22},{"ruleId":"622","severity":1,"message":"773","line":5,"column":9,"nodeType":"624","messageId":"625","endLine":5,"endColumn":19},{"ruleId":"622","severity":1,"message":"774","line":49,"column":17,"nodeType":"624","messageId":"625","endLine":49,"endColumn":33},{"ruleId":"627","severity":1,"message":"775","line":70,"column":8,"nodeType":"629","endLine":70,"endColumn":10,"suggestions":"776"},{"ruleId":"673","severity":1,"message":"674","line":199,"column":72,"nodeType":"675","endLine":199,"endColumn":103},{"ruleId":"619","severity":1,"message":"620","line":212,"column":37,"nodeType":"621","endLine":212,"endColumn":130},{"ruleId":"619","severity":1,"message":"620","line":241,"column":33,"nodeType":"621","endLine":241,"endColumn":90},{"ruleId":"627","severity":1,"message":"777","line":48,"column":8,"nodeType":"629","endLine":48,"endColumn":24,"suggestions":"778"},{"ruleId":"627","severity":1,"message":"779","line":52,"column":8,"nodeType":"629","endLine":52,"endColumn":24,"suggestions":"780"},{"ruleId":"627","severity":1,"message":"781","line":30,"column":8,"nodeType":"629","endLine":30,"endColumn":31,"suggestions":"782"},{"ruleId":"627","severity":1,"message":"783","line":51,"column":8,"nodeType":"629","endLine":51,"endColumn":20,"suggestions":"784"},{"ruleId":"683","severity":1,"message":"785","line":125,"column":100,"nodeType":"685","messageId":"671","endLine":125,"endColumn":106},{"ruleId":"627","severity":1,"message":"786","line":20,"column":8,"nodeType":"629","endLine":20,"endColumn":10,"suggestions":"787"},{"ruleId":"622","severity":1,"message":"788","line":1,"column":8,"nodeType":"624","messageId":"625","endLine":1,"endColumn":13},"no-native-reassign",["789"],"no-negated-in-lhs",["790"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'src_club_profile' is assigned a value but never used.","Identifier","unusedVar","'src_subreddit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setThemeColor' and 'setTintColor'. Either include them or remove the dependency array.","ArrayExpression",["791"],"'currentUser' is assigned a value but never used.","'fetchThisUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cssVars', 'themeColors', and 'thisUser'. Either include them or remove the dependency array.",["792"],"React Hook useEffect has missing dependencies: 'thisUser' and 'tintColors'. Either include them or remove the dependency array.",["793"],"React Hook useEffect has missing dependencies: '__fetchThisUser' and 'history'. Either include them or remove the dependency array.",["794"],"'useEffect' is defined but never used.","'isDarkMode' is assigned a value but never used.","'setIsDarkMode' is assigned a value but never used.","'moment' is defined but never used.","'thisUser' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchClubs', 'fetchFeed', and 'fetchSessions'. Either include them or remove the dependency array.",["795"],"React Hook useEffect has a missing dependency: 'thisUser'. Either include it or remove the dependency array.",["796"],"'res' is assigned a value but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'pm5'. Either include it or remove the dependency array.",["797"],"React Hook useEffect has missing dependencies: 'fetchActivities' and 'fetchSession'. Either include them or remove the dependency array.",["798"],"React Hook useEffect has missing dependencies: 'activityInProgress' and 'lastPatchTime'. Either include them or remove the dependency array.",["799"],"'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'thisUser._id'. Either include it or remove the dependency array.",["800"],["789"],["790"],"'useAuth' is defined but never used.","'api' is assigned a value but never used.","'C2Results' is defined but never used.",["801"],"React Hook useEffect has a missing dependency: 'activityInProgress'. Either include it or remove the dependency array.",["802"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'thinBorder' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","no-dupe-keys","Duplicate key 'strokeCount'.","ObjectExpression","Duplicate key 'workPerStroke'.","Duplicate key 'splitIntervalNumber'.",["789"],["790"],"'localTheme' is assigned a value but never used.","'setSelectedMetric' is assigned a value but never used.","'prevQueryReadable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'distanceFilter', 'prevQuery', and 'thisUser._id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPrevQuery' needs the current value of 'distanceFilter'.",["803"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'submittedQueryString' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["804"],"React Hook useEffect has missing dependencies: 'results.count' and 'sortActivities'. Either include them or remove the dependency array.",["805"],"'tooltipColor' is assigned a value but never used.","'bgc' is assigned a value but never used.","Duplicate key 'pointBackgroundColor'.","'C2Screen' is defined but never used.","React Hook useEffect has missing dependencies: 'hideSelf' and 'sortActivities'. Either include them or remove the dependency array.",["806"],"React Hook useEffect has missing dependencies: 'activities', 'hideSelf', and 'sortActivities'. Either include them or remove the dependency array. You can also do a functional update 'setActivities(a => ...)' if you only need 'activities' in the 'setActivities' call.",["807"],"'tintColor' is assigned a value but never used.","Duplicate key 'backgroundColor'.","'useTheme' is defined but never used.","React Hook useEffect has missing dependencies: 'messageTimestamps' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["808"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"809","text":"810"},"'messageHeight' is assigned a value but never used.","'SubHeader' is defined but never used.","'heatmapData' is assigned a value but never used.","'setHeatmapData' is assigned a value but never used.","'loadingHeatmap' is assigned a value but never used.","'setLoadingHeatmap' is assigned a value but never used.",["811"],"'useParams' is defined but never used.","'src' is assigned a value but never used.","'history' is assigned a value but never used.",["812"],"React Hook useEffect has a missing dependency: 'fetchActivities'. Either include it or remove the dependency array.",["813"],["814"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'fetchFollowing'. Either include it or remove the dependency array.",["815"],["816"],"'passwordRef' is assigned a value but never used.","'signIn' is assigned a value but never used.","'continueWithGoogle' is assigned a value but never used.","'awaitingResponse' is assigned a value but never used.","'setAwaitingResponse' is assigned a value but never used.","'useState' is defined but never used.","'C2SCreen' is defined but never used.","'srcGradient' is assigned a value but never used.","'ReplySection' is defined but never used.","'loadingComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchComments' and 'fetchLikes'. Either include them or remove the dependency array.",["817"],"'handleClickUser' is defined but never used.","'tooltipHidden' is assigned a value but never used.","'setTooltipHidden' is assigned a value but never used.","'useRef' is defined but never used.","'useReducer' is defined but never used.","'formatNumber' is defined but never used.","'formatUnit' is defined but never used.","'Confirmation' is defined but never used.","'myMembership' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clubURL', 'history', 'setMessage', and 'thisUser._id'. Either include them or remove the dependency array.",["818"],"React Hook useEffect has a missing dependency: 'restoreCurrentClubInformation'. Either include it or remove the dependency array.",["819"],"React Hook useEffect has missing dependencies: 'club.bannerURL', 'club.description', 'club.iconURL', 'club.isPrivate', 'club.name', and 'loading'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNameModified' needs the current value of 'club.name'.",["820"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["821"],["822"],"'useMessage' is defined but never used.","'canAccessMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'joinMainRoom' and 'thisUser._id'. Either include them or remove the dependency array.",["823"],"React Hook useEffect has a missing dependency: 'selectedHour'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedMoment' needs the current value of 'selectedHour'.",["824"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["825"],"React Hook useEffect has a missing dependency: 'getPalette'. Either include it or remove the dependency array.",["826"],"React Hook useEffect has a missing dependency: 'colors.length'. Either include it or remove the dependency array.",["827"],"Duplicate key 'margin'.","React Hook useEffect has a missing dependency: 'fetchFollowSummary'. Either include it or remove the dependency array.",["828"],"'react' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},{"desc":"859","fix":"860"},{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},[1046,1059],"",{"desc":"865","fix":"866"},{"desc":"865","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"desc":"896","fix":"897"},{"desc":"898","fix":"899"},"Update the dependencies array to be: [setThemeColor, setTintColor]",{"range":"900","text":"901"},"Update the dependencies array to be: [cssVars, themeColor, themeColors, thisUser]",{"range":"902","text":"903"},"Update the dependencies array to be: [thisUser, tintColor, tintColors]",{"range":"904","text":"905"},"Update the dependencies array to be: [__fetchThisUser, history]",{"range":"906","text":"907"},"Update the dependencies array to be: [fetchClubs, fetchFeed, fetchSessions]",{"range":"908","text":"909"},"Update the dependencies array to be: [thisUser]",{"range":"910","text":"911"},"Update the dependencies array to be: [pm5]",{"range":"912","text":"913"},"Update the dependencies array to be: [fetchActivities, fetchSession]",{"range":"914","text":"915"},"Update the dependencies array to be: [C2Data, activityInProgress, lastPatchTime]",{"range":"916","text":"917"},"Update the dependencies array to be: [props, thisUser._id]",{"range":"918","text":"919"},"Update the dependencies array to be: [props.activities, thisUser._id]",{"range":"920","text":"921"},"Update the dependencies array to be: [activityInProgress, props.activityInProgress]",{"range":"922","text":"923"},"Update the dependencies array to be: [distanceFilter, prevQuery, thisUser._id]",{"range":"924","text":"925"},"Update the dependencies array to be: [fetchData]",{"range":"926","text":"927"},"Update the dependencies array to be: [results.count, sortActivities, sortAscending, sortedKey]",{"range":"928","text":"929"},"Update the dependencies array to be: [hideSelf, props.activities, sortActivities]",{"range":"930","text":"931"},"Update the dependencies array to be: [activities, hideSelf, sortActivities, sortAscending, sortedKey]",{"range":"932","text":"933"},"Update the dependencies array to be: [message, messageTimestamps, messages]",{"range":"934","text":"935"},"Update the dependencies array to be: [clubURL, fetchData]",{"range":"936","text":"937"},{"range":"938","text":"937"},"Update the dependencies array to be: [fetchActivities, userID]",{"range":"939","text":"940"},"Update the dependencies array to be: [fetchData, props.user]",{"range":"941","text":"942"},"Update the dependencies array to be: [fetchFollowing, userID]",{"range":"943","text":"944"},"Update the dependencies array to be: [fetchFollowing, followType]",{"range":"945","text":"946"},"Update the dependencies array to be: [fetchComments, fetchLikes]",{"range":"947","text":"948"},"Update the dependencies array to be: [clubURL, history, setMessage, thisUser._id]",{"range":"949","text":"950"},"Update the dependencies array to be: [club, restoreCurrentClubInformation]",{"range":"951","text":"952"},"Update the dependencies array to be: [name, description, isPrivate, iconURL, bannerURL, loading, club.name, club.description, club.isPrivate, club.iconURL, club.bannerURL]",{"range":"953","text":"954"},"Update the dependencies array to be: [nameModified, descriptionModified, isPrivateModified, iconURLModified, bannerURLModified, loading]",{"range":"955","text":"956"},"Update the dependencies array to be: [currMoment, fetchData]",{"range":"957","text":"958"},"Update the dependencies array to be: [joinMainRoom, thisUser._id]",{"range":"959","text":"960"},"Update the dependencies array to be: [selectedHour, selectedPeriod]",{"range":"961","text":"962"},"Update the dependencies array to be: [props, selectedMoment]",{"range":"963","text":"964"},"Update the dependencies array to be: [getPalette, themeColor, tintColor]",{"range":"965","text":"966"},"Update the dependencies array to be: [colors.length, props.data]",{"range":"967","text":"968"},"Update the dependencies array to be: [fetchFollowSummary]",{"range":"969","text":"970"},[1389,1391],"[setThemeColor, setTintColor]",[2289,2301],"[cssVars, themeColor, themeColors, thisUser]",[2891,2902],"[thisUser, tintColor, tintColors]",[2851,2853],"[__fetchThisUser, history]",[1393,1395],"[fetchClubs, fetchFeed, fetchSessions]",[2896,2898],"[thisUser]",[1935,1937],"[pm5]",[2525,2527],"[fetchActivities, fetchSession]",[4163,4171],"[C2Data, activityInProgress, lastPatchTime]",[576,583],"[props, thisUser._id]",[1858,1876],"[props.activities, thisUser._id]",[2120,2146],"[activityInProgress, props.activityInProgress]",[2258,2260],"[distanceFilter, prevQuery, thisUser._id]",[2779,2781],"[fetchData]",[4464,4490],"[results.count, sortActivities, sortAscending, sortedKey]",[1203,1221],"[hideSelf, props.activities, sortActivities]",[1339,1365],"[activities, hideSelf, sortActivities, sortAscending, sortedKey]",[958,967],"[message, messageTimestamps, messages]",[1448,1457],"[clubURL, fetchData]",[1113,1122],[2363,2371],"[fetchActivities, userID]",[1310,1322],"[fetchData, props.user]",[1232,1240],"[fetchFollowing, userID]",[1297,1309],"[fetchFollowing, followType]",[1126,1128],"[fetchComments, fetchLikes]",[2754,2756],"[clubURL, history, setMessage, thisUser._id]",[2828,2834],"[club, restoreCurrentClubInformation]",[3174,3224],"[name, description, isPrivate, iconURL, bannerURL, loading, club.name, club.description, club.isPrivate, club.iconURL, club.bannerURL]",[3434,3524],"[nameModified, descriptionModified, isPrivateModified, iconURLModified, bannerURLModified, loading]",[697,709],"[currMoment, fetchData]",[2589,2591],"[joinMainRoom, thisUser._id]",[1992,2008],"[selectedHour, selectedPeriod]",[2080,2096],"[props, selectedMoment]",[923,946],"[getPalette, themeColor, tintColor]",[1795,1807],"[colors.length, props.data]",[595,597],"[fetchFollowSummary]"]